---
title: "Data Joining"
subtitle: "Lecture 7"
date: "2025-05-23"
format: 
  revealjs:
    output-file: 07-joining-data-slides.html
auto-stretch: false
---

## Announcements/Reminders {.smaller}

-   Office hours are today from **1:00-3:00** on **Zoom**

-   AE04... that was a lot

    -   The first 3 parts that we did in class are what are important!

    -   The rest is a good exercise in data vis.

-   Questions about lab?

## Outline {.smaller}

-   ***Last Time:*** Started learning about data transformation!

-   ***Today:***

    -   Review from last time

    -   Joining data (working with multiple data frames)

```{r}
#| label: slice
#| code-line-numbers: "|1|2"
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
statsci <- read_csv("data/statsci.csv")
population <- read_csv("data/world-pop-2022.csv")
continent <- read_csv("data/continents.csv")
```

## Review: Pivot Longer {.smaller}

::: columns
::: {.column .fragment width="65%"}
> How do we go from this...

```{r}
#| echo: false

statsci |>
  separate(degree, sep = " \\(", into = c("major", "degree_type")) |>
  mutate(
    degree_type = str_remove(degree_type, "\\)"),
    degree = fct_relevel(degree_type, "BS", "BS2", "AB", "AB2")
  ) |>
  select(degree, `2011`, `2012`, `2013`, `2014`, `2015`)
```
:::

::: {.column .fragment width="29%"}
> ...to this?

```{r}
#| echo: false

statsci |>
  pivot_longer(
    cols = -degree,
    names_to = "year",
    names_transform = as.numeric,
    values_to = "n"
  ) |>
  separate(degree, sep = " \\(", into = c("major", "degree")) |>
  mutate(
    degree = str_remove(degree, "\\)"),
    degree = fct_relevel(degree, "BS", "BS2", "AB", "AB2")
  ) |>
  select(degree, year, n) |>
  print(n = 5)
```
:::
:::

## Reverse It: Pivot Wider {.smaller}

::: columns
::: {.column .fragment width="65%"}
> How do we get back to this...

```{r}
#| echo: false

statsci |>
  separate(degree, sep = " \\(", into = c("major", "degree_type")) |>
  mutate(
    degree_type = str_remove(degree_type, "\\)"),
    degree = fct_relevel(degree_type, "BS", "BS2", "AB", "AB2")
  ) |>
  select(degree, `2011`, `2012`, `2013`, `2014`, `2015`)
```
:::

::: {.column .fragment width="29%"}
> ... from this?

```{r}
#| echo: false

statsci |>
  pivot_longer(
    cols = -degree,
    names_to = "year",
    names_transform = as.numeric,
    values_to = "n"
  ) |>
  separate(degree, sep = " \\(", into = c("major", "degree")) |>
  mutate(
    degree = str_remove(degree, "\\)"),
    degree = fct_relevel(degree, "BS", "BS2", "AB", "AB2")
  ) |>
  select(degree, year, n) |>
  print(n = 5)
```
:::
:::

## Recap: Pivot Functions {.smaller}

::: columns
::: {.column .fragment width="50%"}
> Pivot longer...

```{r}
#| eval: false

data_set |>
  pivot_longer(
    cols = colums_to_move,
    names_to = "var_for_column_names", 
    values_to = "var_for_values"
  )
```
:::

::: {.column .fragment width="50%"}
> ... or wider

```{r}
#| eval: false

data_set |>
  pivot_wider( 
    names_from = var_with_cols, 
    values_to = var_with_vals
  )
```
:::
:::

# Joining Data

## Joining Data

What happens if we want information from two different data sets?

## Joining Data: Sample Scenario{.smaller}

::: columns
::: {.column  width="50%"}

```{r}

population

```

:::

::: {.column width="50%"}
-  We want to know about population in different continents.

-  We could use mutate to create a continent variable, but that would be terrible....
:::

:::

## Joining Data: Sample Scenario{.smaller}

::: columns
::: {.column  width="44%"}

```{r}

population

```

:::

::: {.column width="56%"}
```{r}

continent

```
:::

:::



## Joining: Example Data

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
![](images/venn-1-empty.png)
:::
:::

## Joining: Left Join

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
> left_join(df_X, df_Y)

| id  | X   | Y    |
|-----|-----|------|
| 1   | X1  | Y1   |
| 2   | X2  | Y2   |
| 3   | X3  | *NA* |
:::
:::

## Joining: Left Join

::: columns
::: {.column width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column width="50%"}
> left_join(df_X, df_Y)

| id  | X   | Y    |
|-----|-----|------|
| 1   | X1  | Y1   |
| 2   | X2  | Y2   |
| 3   | X3  | *NA* |
:::
:::

<!-- small Venn diagram in the bottom-right -->
<div style="
  position: absolute;
  bottom: 80px;
  right: -90px;
  width: 280px;           /* adjust to taste */
  pointer-events: none;  /* so it never steals clicks */
">
  <img src="images/venn-1.png" style="width: 100%; height: auto;" />
</div>


## Joining: Right Join

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
> right_join(df_X, df_Y)

| id  | X    | Y   |
|-----|------|-----|
| 1   | X1   | Y1  |
| 2   | X2   | Y2  |
| 4   | *NA* | Y4  |
:::
:::

## Joining: Right Join

::: columns
::: {.column width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column  width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column width="50%"}
> right_join(df_X, df_Y)

| id  | X    | Y   |
|-----|------|-----|
| 1   | X1   | Y1  |
| 2   | X2   | Y2  |
| 4   | *NA* | Y4  |
:::
:::

<!-- small Venn diagram in the bottom-right -->
<div style="
  position: absolute;
  bottom: 80px;
  right: -90px;
  width: 280px;           /* adjust to taste */
  pointer-events: none;  /* so it never steals clicks */
">
  <img src="images/venn-1.png" style="width: 100%; height: auto;" />
</div>

## Joining: Full Join

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
> right_join(df_X, df_Y)

| id  | X    | Y   |
|-----|------|-----|
| 1   | X1   | Y1  |
| 2   | X2   | Y2  |
| 3   | X3   | *NA*|
| 4   | *NA* | Y4  |
:::
:::

## Joining: Full Join

::: columns
::: {.column width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column  width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column width="50%"}
> right_join(df_X, df_Y)

| id  | X    | Y   |
|-----|------|-----|
| 1   | X1   | Y1  |
| 2   | X2   | Y2  |
| 3   | X3   | *NA*|
| 4   | *NA* | Y4  |
:::
:::

<!-- small Venn diagram in the bottom-right -->
<div style="
  position: absolute;
  bottom: 80px;
  right: -90px;
  width: 280px;           /* adjust to taste */
  pointer-events: none;  /* so it never steals clicks */
">
  <img src="images/venn-1.png" style="width: 100%; height: auto;" />
</div>


## Joining: Inner Join

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
> inner_join(df_X, df_Y)

| id  | X   | Y   |
|-----|-----|-----|
| 1   | X1  | Y1  |
| 2   | X2  | Y2  |
:::
:::

## Joining: Inner Join

::: columns
::: {.column width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column width="50%"}
> inner_join(df_X, df_Y)

| id  | X   | Y   |
|-----|-----|-----|
| 1   | X1  | Y1  |
| 2   | X2  | Y2  |
:::
:::

<!-- small Venn diagram in the bottom-right -->
<div style="
  position: absolute;
  bottom: 80px;
  right: -90px;
  width: 280px;           /* adjust to taste */
  pointer-events: none;  /* so it never steals clicks */
">
  <img src="images/venn-1.png" style="width: 100%; height: auto;" />
</div>

## Joining: Semi Join

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
> semi_join(df_X, df_Y)

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
:::

:::

## Joining: Semi Join

::: columns
::: {.column width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column width="50%"}
> semi_join(df_X, df_Y)

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
:::
:::

<!-- small Venn diagram in the bottom-right -->
<div style="
  position: absolute;
  bottom: 80px;
  right: -90px;
  width: 280px;           /* adjust to taste */
  pointer-events: none;  /* so it never steals clicks */
">
  <img src="images/venn-1.png" style="width: 100%; height: auto;" />
</div>


## Joining: Anti Join

::: columns
::: {.column .fragment width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column .fragment width="50%"}
> anti_join(df_X, df_Y)

| id  | X   |
|-----|-----|
| 3   | X3  |
:::
:::


## Joining: Anti Join

::: columns
::: {.column width="25%"}
> df_X

| id  | X   |
|-----|-----|
| 1   | X1  |
| 2   | X2  |
| 3   | X3  |
:::

::: {.column width="25%"}
> df_Y

| id  | Y   |
|-----|-----|
| 1   | Y1  |
| 2   | Y2  |
| 4   | Y4  |
:::

::: {.column width="50%"}
> anti_join(df_X, df_Y)


| id  | X   |
|-----|-----|
| 3   | X3  |
:::
:::

<!-- small Venn diagram in the bottom-right -->
<div style="
  position: absolute;
  bottom: 80px;
  right: -90px;
  width: 280px;           /* adjust to taste */
  pointer-events: none;  /* so it never steals clicks */
">
  <img src="images/venn-1.png" style="width: 100%; height: auto;" />
</div>

## Summary of Join Types

![](images/left.png)

## More Notes on Join

-   In the following examples, I use left_join()

-   The same concept holds for other types of joins!

-   *Idea: how do we specify which columns we want to join with?*

## Join: Which columns? {.smaller}

How can I specify which column to join by?

::: columns
::: {.column .fragment width="25%"}
> df_X

| id_X | X   |
|------|-----|
| 1    | X1  |
| 2    | X2  |
| 3    | X3  |
:::

::: {.column .fragment width="25%"}
> df_Y

| id_Y | Y   |
|------|-----|
| 1    | Y1  |
| 2    | Y2  |
| 4    | Y4  |
:::

::: {.column .fragment width="50%"}
> goal: left join

| id_X | X   | Y    |
|------|-----|------|
| 1    | X1  | Y1   |
| 2    | X2  | Y2   |
| 3    | X3  | *NA* |

```{r}
#| eval: false

left_join(df_X, df_Y, 
          by = join_by(id_X == id_Y))
```
:::
:::

## What about the pipe? {.smaller}

The following two pieces of code are equivalent:

```{r}
#| eval: false
left_join(df_X, df_Y, 
          by = join_by(id_X == id_Y))
```

<br> <br>

```{r}
#| eval: false

df_X |> left_join(df_Y, 
                  by = join_by(id_X == id_Y))
```

## Let's save!

Most often, you will want to save the result of a join to a new data frame.

```{r}
#| eval: false

df_X_Y <- df_X |> left_join(df_Y, 
                            by = join_by(id_X == id_Y))
```

# Your Turn

## What is the result?


# AE 07

Goal: Do a join!!!

## Data {.smaller}

::: columns
::: {.column  width="44%"}

```{r}

population

```

:::

::: {.column width="56%"}
```{r}

continent

```
:::

:::
