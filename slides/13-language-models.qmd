---
title: "The Language of Models"
subtitle: "Lecture 13"
date: "2025-06-04"
format: 
  revealjs:
    output-file: 13-model-slides.html
auto-stretch: false
---

```{r}
#| echo: false 
#| message: false
library(tidyverse)
library(tidymodels)
library(readxl)
library(janitor)
library(palmerpenguins)
library(datasauRus)
library(ggplot2)
library(gt)
todays_ae <- "ae-11-modeling-fish"
```

## While you wait... {.smaller}

::: appex
-   Go to your `ae` project in RStudio.

-   Make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.

-   Click Pull to get today's application exercise file: *`{r} paste0(todays_ae, ".qmd")`*.

-   Wait till the you're prompted to work on the application exercise during class before editing the file.
:::

## Announcements

-   No office hours today

-   Lab Thursday: Project proposals/identifying data sets of interest.

# Midterm 1 is done!

The class is halfway over!

## Before:

-   Plotting and summary statistics

-   Useful, but... a little subjective?

## Now:

-   Learn statistical tools for quantifying relationships
    -   Describing relationships
    -   Prediction and classification
    -   Uncertainty quantification

# Prediction / classification

## Goals

-   What is a model?
-   Why do we model?
-   What is correlation?

## Let's drive a Tesla!

{{< video https://www.youtube.com/embed/xvqQ4F7Yf2o start="150" width="900" height="600" >}}

## Semi or garage? {.smaller}

> i love how Tesla thinks the wall in my garage is a semi.
> üòÖ

![](images/tesla-get-wrong-1.png){fig-align="center"}

::: aside
Source: [Reddit](https://www.reddit.com/r/TeslaModelY/comments/vjcpte/i_love_how_tesla_thinks_the_wall_in_my_garage_is/)
:::

## Semi or garage? {.smaller}

> New owner here.
> Just parked in my garage.
> Tesla thinks I crashed onto a semi.

![](images/tesla-get-wrong-2.png){fig-align="center" width="300"}

::: aside
Source: [Reddit](https://www.reddit.com/r/TeslaModelY/comments/112520t/new_owner_here_just_parked_in_my_garage_tesla/)
:::

## Car or trash?

> Tesla calls Mercedes trash

![](images/tesla-get-wrong-3.png){fig-align="center" width="500"}

::: aside
Source: [Reddit](https://www.reddit.com/r/FUCKYOUINPARTICULAR/comments/hi5srx/tesla_calls_mercedes_trash/)
:::

# Description

## Leisure, commute, physical activity and BP {.smaller}

> [Relation Between Leisure Time, Commuting, and Occupational Physical Activity With Blood Pressure in 125,402 Adults: The Lifelines Cohort](https://www.ahajournals.org/doi/full/10.1161/JAHA.119.014313)
>
> Byambasukh, Oyuntugs, Harold Snieder, and Eva Corpeleijn.
> "Relation between leisure time, commuting, and occupational physical activity with blood pressure in 125 402 adults: the lifelines cohort." *Journal of the American Heart Association* 9.4 (2020): e014313.

## Leisure, commute, physical activity and BP {.smaller .scrollable}

**Goal:** [To investigate the associations of different domains of daily‚Äêlife physical activity, such as commuting, leisure‚Äêtime, and occupational, with BP level and the risk of having hypertension.]{style="background-color: #fcefb3"}

## Leisure, commute, physical activity and BP {.smaller .scrollable}

**Goal:** To investigate the associations of different domains of daily-life physical activity, such as commuting, leisure-time, and occupational, with BP level and the risk of having hypertension.

**Methods and Results**: [In the population-based Lifelines cohort (N=125,402), MVPA was assessed by the Short Questionnaire to Assess Health-Enhancing Physical Activity, a validated questionnaire in different domains such as commuting, leisure-time, and occupational PA.]{style="background-color: #fcefb3"}

## Leisure, commute, physical activity and BP {.smaller .scrollable}

**Goal:** To investigate the associations of different domains of daily-life physical activity, such as commuting, leisure-time, and occupational, with BP level and the risk of having hypertension.

**Methods and Results**: In the population-based Lifelines cohort (N=125,402), MVPA was assessed by the Short Questionnaire to Assess Health-Enhancing Physical Activity, a validated questionnaire in different domains such as commuting, leisure-time, and occupational PA.
[Commuting-and-leisure-time MVPA was associated with BP in a dose-dependent manner.]{style="background-color: #fcefb3"}

## Leisure, commute, physical activity and BP {.smaller .scrollable}

**Goal:** To investigate the associations of different domains of daily-life physical activity, such as commuting, leisure-time, and occupational, with BP level and the risk of having hypertension.

**Methods and Results**: In the population-based Lifelines cohort (N=125,402), MVPA was assessed by the Short Questionnaire to Assess Health-Enhancing Physical Activity, a validated questionnaire in different domains such as commuting, leisure-time, and occupational PA.
Commuting-and-leisure-time MVPA was associated with BP in a dose-dependent manner.
[Œ≤ Coefficients (95% CI) from linear regression analyses were ‚àí1.64 (‚àí2.03 to ‚àí1.24), ‚àí2.29 (‚àí2.68 to ‚àí1.90), and ‚àí2.90 (‚àí3.29 to ‚àí2.50) mm Hg systolic BP for the low, middle, and highest tertile of MVPA compared with "No MVPA" as the reference group after adjusting for age, sex, education, smoking and alcohol use. Further adjustment for body mass index attenuated the associations by 30% to 50%, but more MVPA remained significantly associated with lower BP and lower risk of hypertension. This association was age dependent. Œ≤ Coefficients (95% CI) for the highest tertiles of commuting-and-leisure-time MVPA were ‚àí1.67 (‚àí2.20 to ‚àí1.15), ‚àí3.39 (‚àí3.94 to ‚àí2.82) and ‚àí4.64 (‚àí6.15 to ‚àí3.14) mm Hg systolic BP in adults \<40, 40 to 60, and \>60 years, respectively.]{style="background-color: #e5bef7"}

## Leisure, commute, physical activity and BP {.smaller .scrollable}

**Goal:** To investigate the associations of different domains of daily-life physical activity, such as commuting, leisure-time, and occupational, with BP level and the risk of having hypertension.

**Methods and Results**: In the population-based Lifelines cohort (N=125,402), MVPA was assessed by the Short Questionnaire to Assess Health-Enhancing Physical Activity, a validated questionnaire in different domains such as commuting, leisure-time, and occupational PA.
Commuting-and-leisure-time MVPA was associated with BP in a dose-dependent manner.
Œ≤ Coefficients (95% CI) from linear regression analyses were ‚àí1.64 (‚àí2.03 to ‚àí1.24), ‚àí2.29 (‚àí2.68 to ‚àí1.90), and ‚àí2.90 (‚àí3.29 to ‚àí2.50) mm Hg systolic BP for the low, middle, and highest tertile of MVPA compared with "No MVPA" as the reference group after adjusting for age, sex, education, smoking and alcohol use.
Further adjustment for body mass index attenuated the associations by 30% to 50%, but more MVPA remained significantly associated with lower BP and lower risk of hypertension.
This association was age dependent.
Œ≤ Coefficients (95% CI) for the highest tertiles of commuting-and-leisure-time MVPA were ‚àí1.67 (‚àí2.20 to ‚àí1.15), ‚àí3.39 (‚àí3.94 to ‚àí2.82) and ‚àí4.64 (‚àí6.15 to ‚àí3.14) mm Hg systolic BP in adults \<40, 40 to 60, and \>60 years, respectively.

**Conclusions**: [Higher commuting and leisure-time but not occupational MVPA were significantly associated with lower BP and lower hypertension risk at all ages, but these associations were stronger in older adults.]{style="background-color: #fcefb3"}

# Modeling

## Modeling cars {.smaller}

::: question
-   What is the relationship between cars' weights and their mileage?
-   What is your best guess for a car's MPG that weighs 3,500 pounds?
:::

```{r}
#| echo: false

base <- ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  labs(
    x = "Weight (1,000 lbs)",
    y = "Miles per gallon (MPG)",
    title = "MPG vs. weights of cars"
  ) +
  coord_cartesian(xlim = c(1.5, 5.5), ylim = c(10, 35))

base
```

## Modelling cars {.smaller}

::: question
**Describe:** What is the relationship between cars' weights and their mileage?
:::

```{r}
#| echo: false
#| message: false

base +
  geom_smooth(method = "lm", color = "#FE5D26")
```

## Modelling cars {.smaller}

::: question
**Predict:** What is your best guess for a car's MPG that weighs 3,500 pounds?
:::

```{r}
#| echo: false
#| message: false

base +
  geom_smooth(method = "lm", se = FALSE, color = "darkgray", linetype = "dashed") +
  annotate(
    "segment",
    x = 3.5, xend = 3.5, y = -Inf, yend = 18.5,
    color = "#FE5D26"
  ) +
  annotate(
    "segment",
    x = -Inf, xend = 3.5, y = 18.5, yend = 18.5,
    color = "#FE5D26"
  )
```

## Modelling

-   Use models to explain the relationship between variables and to make predictions
-   For now we will focus on **linear** models (but there are *many* *many* other types of models too!)

## What is a line?

```{r}
#| echo: false

ggplot() +
  xlim(c(0,2)) +
  ylim(c(0,6)) +
  geom_abline(slope = 2, intercept = 1) +
  theme_void()
```

## But on a plot...

```{r}
#| echo: false

ggplot() +
  xlim(c(0,2)) +
  ylim(c(0,6)) +
  geom_abline(slope = 2, intercept = 1) 
```

## But in math terms...

$$ y = mx + b $$

```{r}
#| echo: false

ggplot() +
  xlim(c(0,2)) +
  ylim(c(0,6)) +
  geom_abline(slope = 2, intercept = 1) 
```

## Modelling vocabulary

-   Predictor (explanatory variable)
-   Outcome (response variable)
-   Regression line
    -   Slope
    -   Intercept
-   Correlation

## Predictor (explanatory variable)

```{r}
#| echo: false

base <- ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() +
  labs(
    x = "Weight (1000 lbs)",
    y = "Miles per gallon (MPG)",
    title = "MPG vs. weights of cars"
  )
```

::: columns
::: {.column width="25%"}
```{r}
#| echo: false

mtcars |>
  select(mpg, wt) |>
  slice_head(n = 6) |>
  mutate(across(where(is.numeric), as.character)) |>
  bind_rows(c(mpg = "...", wt = "...")) |>
  gt() |>
  tab_style(
    style = list(
      cell_fill(color = "#FE5D26"),
      cell_text(color = "white")
      ),
    locations = cells_body(columns = wt)
  ) |>
  tab_options(table.font.size = px(12))
```
:::

::: {.column width="5%"}
:::

::: {.column width="70%"}
```{r}
#| echo: false

base +
  theme(
    axis.title.x = element_text(color = "#FE5D26", face = "bold", size = 16)
  )
```
:::
:::

## Outcome (response variable)

::: columns
::: {.column width="25%"}
```{r}
#| echo: false

mtcars |>
  select(mpg, wt) |>
  slice_head(n = 6) |>
  mutate(across(where(is.numeric), as.character)) |>
  bind_rows(c(mpg = "...", wt = "...")) |>
  gt() |>
  tab_style(
    style = list(
      cell_fill(color = "#FE5D26"),
      cell_text(color = "white")
      ),
    locations = cells_body(columns = mpg)
  ) |>
  tab_options(table.font.size = px(12))
```
:::

::: {.column width="5%"}
:::

::: {.column width="70%"}
```{r}
#| echo: false

base +
  theme(
    axis.title.y = element_text(color = "#FE5D26", face = "bold", size = 16)
  )
```
:::
:::

## Regression line

```{r}
#| echo: false
#| message: false

base +
  geom_smooth(method = "lm", color = "#FE5D26", linewidth = 1.5, se = FALSE)
```

## Regression line: slope

```{r}
#| echo: false
#| message: false

base +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  annotate(
    geom = "segment",
    x = 4, xend = 5, y = 16, yend = 16, 
    linetype = "dashed", color = "#FE5D26"
  ) +
  annotate(
    geom = "segment",
    x = 5, xend = 5, y = 16, yend = 10.6, 
    color = "#FE5D26"
  ) +
  annotate(
    geom = "text",
    x = 5.2, y = 13, label = "slope", 
    color = "#FE5D26", size = 5, hjust = 0
  )
```

## Regression line: intercept

```{r}
#| echo: false
#| message: false

base +
  geom_smooth(method = "lm", color = "gray", se = FALSE, fullrange = TRUE, linetype = "dashed") +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  scale_x_continuous(limits = c(0, 5.5)) +
  annotate(
    geom = "point",
    shape = 1, size = 4, stroke = 2,
    x = 0, y = 37.4, 
    color = "#FE5D26"
  ) +
  annotate(
    geom = "text",
    label = "intercept",
    x = 0.5, y = 37.4, 
    color = "#FE5D26", size = 5, hjust = 0
  )
```

## Correlation

```{r}
#| echo: false

r <- mtcars |>
  summarize(cor = round(cor(mpg, wt), 2)) |>
  pull()

base +
  stat_ellipse(geom = "polygon", color = "#FE5D26", fill = "#FE5D2630") +
  annotate(
    geom = "text",
    x = 3.5, y = 27.5, 
    label = paste("r =", r),
    color = "#FE5D26", size = 5, hjust = 0
  )
```

## Correlation

-   Ranges between -1 and 1.
-   Same sign as the slope.

![](images/corr-example.png){fig-align="center"}

## Visualizing the model

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point()
```

## Visualizing the model

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() + 
  geom_smooth()
```

## Visualizing the model

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() + 
  geom_smooth(method = "loess")
```

## Visualizing the model

```{r}
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point() + 
  geom_smooth(method = "lm")
```

# Application exercise

Follow along

## `{r} todays_ae`

::: appex
-   Go to your ae project in RStudio.

-   If you haven't yet done so, make sure all of your changes up to this point are committed and pushed, i.e., there's nothing left in your Git pane.

-   If you haven't yet done so, click Pull to get today's application exercise file: *`{r} paste0(todays_ae, ".qmd")`*.

-   Work through the application exercise in class, and render, commit, and push your edits.
:::

## Data: Fish {.smaller}

```{r}
#| message: false

library(tidyverse)
library(tidymodels)

fish <- read_csv("data/fish.csv")
```

## Data: Fish {.smaller}

```{r}
fish
```

## Visualizing the model

***Goal:*** Analyze the relationship between fish height and weight.

## Visualizing the model {.smaller}

***Goal:*** Analyze the relationship between fish height and weight.

::: columns
::: {.column width="40%"}
```{r}
#| eval: false
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point() +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 5
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point(size = 2) +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::
:::

## Visualizing the model {.smaller}

***Goal:*** Analyze the relationship between fish height and weight.

::: columns
::: {.column width="40%"}
Where would you draw a line?
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 5
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point(size = 2) +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::
:::

## Visualizing the model {.smaller}

Let R draw the line for you!

::: columns
::: {.column width="40%"}
```{r}
#| eval: false
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 5
#| message: false
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point(size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::
:::

## Visualizing the model {.smaller}

How can we use the line to make predictions?

::: columns
::: {.column width="40%"}
*Predict weight given height:*

-   10 cm

-   15 cm

-   20 cm
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 5
#| message: false
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point(size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::
:::

## Visualizing the model {.smaller}

Are the predictions good?

::: columns
::: {.column width="40%"}
***Residual:** Difference between observed and predicted value*
:::

::: {.column width="60%"}
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 5
#| message: false
ggplot(fish, aes(x = height,
                 y = weight)) +
  geom_point(size = 2) +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Height (cm)",
       y = "Weight (gr)")
```
:::
:::

# Model Fitting

## Fit your first model {.smaller}

```{r}
fish_hw_fit <- linear_reg() |>
  fit(weight ~ height, data = fish)
```

## Fit your first model {.smaller}

```{r}
fish_hw_fit <- linear_reg() |>
  fit(weight ~ height, data = fish)

fish_hw_fit
```

## Model prediction {.smaller}

Use model results to predict weights at heights 10cm, 15cm, and 20cm.

```{r}
fish_hw_fit
```

```{r}
x <- 10
-288 + 60.92 * x
```

## Model prediction: full data {.smaller}

**Goal**: Calculate predicted weights for all fish in the data.

```{r}
#| results: false
fish_hw_aug <- augment(fish_hw_fit, new_data = fish)
```


## Model prediction: full data {.smaller}

**Goal**: Calculate predicted weights for all fish in the data.

```{r}
#| results: false
fish_hw_aug <- augment(fish_hw_fit, new_data = fish)
fish_hw_aug
```

```{r}
#| echo: false

fish_hw_aug |> relocate(.pred, .resid, species, weight, height, length_vertical)
```

## Model evaluation: residuals {.smaller}

**Goal**: Visualize the residuals

::: columns
::: {.column width="50%"}
```{r}
#| eval: false
fish_hw_aug |> 
  ggplot(aes(x = height,
             y = weight)) + 
  geom_point() + 
  geom_smooth(method = "lm", 
              se = FALSE) +
  theme_minimal() 
```
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| message: false
#| fig-width: 7
#| fig-height: 5
fish_hw_aug |> ggplot(aes(x = height,
                          y = weight)) + 
  geom_point() + 
  geom_smooth(method = "lm", 
              se = FALSE) +
  theme_minimal() 
```
:::
:::

## Model evaluation: residuals {.smaller}

**Goal**: Visualize the residuals

::: columns
::: {.column width="50%"}
```{r}
#| eval: false
#| line-numbers: "7-8"
fish_hw_aug |> 
  ggplot(aes(x = height,
             y = weight)) + 
  geom_point() + 
  geom_smooth(method = "lm", 
              se = FALSE) +
  geom_segment(aes(xend = height, 
                   yend = .pred)) +
  theme_minimal() 
```
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| fig-width: 7
#| fig-height: 5
#| message: false


fish_hw_aug |> ggplot(aes(x = height,
                          y = weight)) + 
  geom_point() + 
  geom_smooth(method = "lm", se = FALSE) +
  geom_segment(aes(xend = height, yend = .pred)) +
  theme_minimal() 
```
:::
:::

## Model Summary {.smaller}

::: columns
::: {.column width="40%"}

```{r}
fish_hw_fit
```

:::

::: {.column width="60%"}
```{r}
fish_hw_tidy <- tidy(fish_hw_fit)
fish_hw_tidy
```
:::
:::

## Correlation {.smaller}

Strength and direction of a linear relationship. It‚Äôs bounded by -1 and 1.


## Correlation {.smaller}

```{r}
fish |>
  summarize(r = cor(height, weight))
```

## Adding a 3rd Variable {.smaller}
Does the relationship between heights and weights of fish change if we take into consideration species?

```{r}
ggplot(fish, 
       aes(x = height, y = weight, color = species)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(
    title = "Weights vs. heights of fish",
    x = "Height (cm)",
    y = "Weight (gr)"
  )
```

## Adding a 3rd Variable {.smaller}
Does the relationship between heights and weights of fish change if we take into consideration species?

```{r}
ggplot(fish, 
       aes(x = height, y = weight, color = species)) +
  geom_point() +
  geom_smooth(method = "lm") +
  labs(
    title = "Weights vs. heights of fish",
    x = "Height (cm)",
    y = "Weight (gr)"
  )
```
