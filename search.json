[
  {
    "objectID": "exam-review/final-review.html",
    "href": "exam-review/final-review.html",
    "title": "Final review",
    "section": "",
    "text": "Warning: package 'tidyr' was built under R version 4.4.1\n\n\nWarning: package 'airports' was built under R version 4.4.1\n\n\nWarning: package 'cherryblossom' was built under R version 4.4.1"
  },
  {
    "objectID": "exam-review/final-review.html#question-1",
    "href": "exam-review/final-review.html#question-1",
    "title": "Final review",
    "section": "Question 1",
    "text": "Question 1\nDescribe how you can set up a simulation to estimate the proportion of statistics majors who work 5 or more hours each week based on this sample."
  },
  {
    "objectID": "exam-review/final-review.html#question-2",
    "href": "exam-review/final-review.html#question-2",
    "title": "Final review",
    "section": "Question 2",
    "text": "Question 2\nA bootstrap distribution with 1000 simulations is shown below. Approximate the bounds of the 95% confidence interval based on this distribution."
  },
  {
    "objectID": "exam-review/final-review.html#question-3",
    "href": "exam-review/final-review.html#question-3",
    "title": "Final review",
    "section": "Question 3",
    "text": "Question 3\nSuppose the lower bound of the confidence interval from the previous question is L and the upper bound is U. Which of the following is correct?\na. Between L to U of statistics majors work at least 5 hours per week.\nb. 95% of the time the true proportion of statistics majors who work at least 5 hours per week is between L and U.\nc. Between L and U of random samples of 25 statistics majors are expected to yield confidence intervals that contain the true proportion of statistics majors who work at least 5 hours per week.\nd. 95% of random samples of 25 statistics majors will yield confidence intervals between L and U.\ne. None of the above."
  },
  {
    "objectID": "exam-review/final-review.html#question-4",
    "href": "exam-review/final-review.html#question-4",
    "title": "Final review",
    "section": "Question 4",
    "text": "Question 4\nNext, you fit a model for predicting raises (percent_incr) from salaries (annual_salary). We’ll call this model raise_1_fit. A tidy output of the model is shown below.\n\n\n# A tibble: 2 × 5\n  term           estimate  std.error statistic   p.value\n  &lt;chr&gt;             &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)   1.87      0.432           4.33 0.0000194\n2 annual_salary 0.0000155 0.00000452      3.43 0.000669 \n\n\nWhich of the following is the best interpretation of the slope coefficient?\n\nFor every additional $1,000 of annual salary, the model predicts the raise to be higher, on average, by 1.55%.\nFor every additional $1,000 of annual salary, the raise goes up by 0.0155%.\nFor every additional $1,000 of annual salary, the model predicts the raise to be higher, on average, by 0.0155%.\nFor every additional $1,000 of annual salary, the model predicts the raise to be higher, on average, by 1.87%."
  },
  {
    "objectID": "exam-review/final-review.html#question-5",
    "href": "exam-review/final-review.html#question-5",
    "title": "Final review",
    "section": "Question 5",
    "text": "Question 5\nYou then fit a model for predicting raises (percent_incr) from salaries (annual_salary) and performance ratings (performance_rating). We’ll call this model raise_2_fit. Which of the following is definitely true based on the information you have so far?\n\nIntercept of raise_2_fit is higher than intercept of raise_1_fit.\nSlope of raise_2_fit is higher than RMSE of raise_1_fit.\nAdjusted \\(R^2\\) of raise_2_fit is higher than adjusted \\(R^2\\) of raise_1_fit.\n\n\\(R^2\\) of raise_2_fit is higher \\(R^2\\) of raise_1_fit."
  },
  {
    "objectID": "exam-review/final-review.html#question-6",
    "href": "exam-review/final-review.html#question-6",
    "title": "Final review",
    "section": "Question 6",
    "text": "Question 6\nThe tidy model output for the raise_2_fit model you fit is shown below.\n\n\n# A tibble: 5 × 5\n  term                            estimate  std.error statistic  p.value\n  &lt;chr&gt;                              &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)                   3.55       0.508           6.99 1.99e-11\n2 annual_salary                 0.00000989 0.00000436      2.27 2.42e- 2\n3 performance_ratingPoor       -4.06       1.42           -2.86 4.58e- 3\n4 performance_ratingSuccessful -2.40       0.397          -6.05 4.68e- 9\n5 performance_ratingTop         2.99       0.715           4.18 3.92e- 5\n\n\nWhen your teammate sees this model output, they remark “The coefficient for performance_ratingSuccessful is negative, that’s weird. I guess it means that people who get successful performance ratings get lower raises.” How would you respond to your teammate?"
  },
  {
    "objectID": "exam-review/final-review.html#question-7",
    "href": "exam-review/final-review.html#question-7",
    "title": "Final review",
    "section": "Question 7",
    "text": "Question 7\nUltimately, your teammate decides they don’t like the negative slope coefficients in the model output you created (not that there’s anything wrong with negative slope coefficients!), does something else, and comes up with the following model output.\n\n\n# A tibble: 5 × 5\n  term                            estimate  std.error statistic    p.value\n  &lt;chr&gt;                              &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n1 (Intercept)                  -0.511      1.47          -0.347 0.729     \n2 annual_salary                 0.00000989 0.00000436     2.27  0.0242    \n3 performance_ratingSuccessful  1.66       1.42           1.17  0.242     \n4 performance_ratingHigh        4.06       1.42           2.86  0.00458   \n5 performance_ratingTop         7.05       1.53           4.60  0.00000644\n\n\nUnfortunately they didn’t write their code in a Quarto document, instead just wrote some code in the Console and then lost track of their work. They remember using the fct_relevel() function and doing something like the following:\n\nblizzard_salary &lt;- blizzard_salary |&gt;\n  mutate(performance_rating = fct_relevel(performance_rating, ___))\n\nWhat should they put in the blanks to get the same model output as above?\n\n“Poor”, “Successful”, “High”, “Top”\n“Successful”, “High”, “Top”\n“Top”, “High”, “Successful”, “Poor”\nPoor, Successful, High, Top"
  },
  {
    "objectID": "exam-review/final-review.html#question-8",
    "href": "exam-review/final-review.html#question-8",
    "title": "Final review",
    "section": "Question 8",
    "text": "Question 8\nSuppose we fit a model to predict percent_incr from annual_salary and salary_type. A tidy output of the model is shown below.\n\n\n# A tibble: 3 × 5\n  term                 estimate  std.error statistic p.value\n  &lt;chr&gt;                   &lt;dbl&gt;      &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)         1.24      0.570           2.18 0.0300 \n2 annual_salary       0.0000137 0.00000464      2.96 0.00329\n3 salary_typeSalaried 0.913     0.544           1.68 0.0938 \n\n\nWhich of the following visualizations represent this model? Explain your reasoning.\n\n\n\n\n\n\n\n\n\n(a) Option 1\n\n\n\n\n\n\n\n\n\n(b) Option 2\n\n\n\n\n\n\n\n\n\n\n\n(c) Option 3\n\n\n\n\n\n\n\n\n\n(d) Option 4\n\n\n\n\n\n\nFigure 1: Visualizations of the relationship between percent increase, annual salary, and salary type"
  },
  {
    "objectID": "exam-review/final-review.html#question-9",
    "href": "exam-review/final-review.html#question-9",
    "title": "Final review",
    "section": "Question 9",
    "text": "Question 9\nDefine the term parsimonious model."
  },
  {
    "objectID": "exam-review/final-review.html#question-10",
    "href": "exam-review/final-review.html#question-10",
    "title": "Final review",
    "section": "Question 10",
    "text": "Question 10\nSuppose you now fit a model to predict the natural log of percent increase, log(percent_incr), from performance rating. The model is called raise_4_fit.\nYou’re provided the following:\n\ntidy(raise_4_fit) |&gt;\n  select(term, estimate) |&gt;\n  mutate(exp_estimate = exp(estimate))\n\n# A tibble: 4 × 3\n  term                         estimate exp_estimate\n  &lt;chr&gt;                           &lt;dbl&gt;        &lt;dbl&gt;\n1 (Intercept)                     -7.15     0.000786\n2 performance_ratingSuccessful     6.93  1025.      \n3 performance_ratingHigh           8.17  3534.      \n4 performance_ratingTop            8.91  7438.      \n\n\nBased on this, which of the following is true?\na. The model predicts that the percentage increase employees with Successful performance get, on average, is higher by 10.25% compared to the employees with Poor performance rating.\nb. The model predicts that the percentage increase employees with Successful performance get, on average, is higher by 6.93% compared to the employees with Poor performance rating.\nc. The model predicts that the percentage increase employees with Successful performance get, on average, is higher by a factor of 1025 compared to the employees with Poor performance rating.\nd. The model predicts that the percentage increase employees with Successful performance get, on average, is higher by a factor of 6.93 compared to the employees with Poor performance rating."
  },
  {
    "objectID": "exam-review/final-review.html#question-11",
    "href": "exam-review/final-review.html#question-11",
    "title": "Final review",
    "section": "Question 11",
    "text": "Question 11\nWhich of the following is the definiton of a regression model? Select all that apply.\na. \\(\\hat{y} = \\beta_0 + \\beta_1 X_1\\)\nb. \\(y = \\beta_0 + \\beta_1 X_1\\)\nc. \\(\\hat{y} = \\beta_0 + \\beta_1 X_1 + \\epsilon\\)\nd. \\(y = \\beta_0 + \\beta_1 X_1 + \\epsilon\\)"
  },
  {
    "objectID": "exam-review/final-review.html#question-12",
    "href": "exam-review/final-review.html#question-12",
    "title": "Final review",
    "section": "Question 12",
    "text": "Question 12\nChoose the best answer.\nA survey based on a random sample of 2,045 American teenagers found that a 95% confidence interval for the mean number of texts sent per month was (1450, 1550). A valid interpretation of this interval is\n\n95% of all teens who text send between 1450 and 1550 text messages per month.\nIf a new survey with the same sample size were to be taken, there is a 95% chance that the mean number of texts in the sample would be between 1450 and 1550.\nWe are 95% confident that the mean number of texts per month of all American teens is between 1450 and 1550.\nWe are 95% confident that, were we to repeat this survey, the mean number of texts per month of those taking part in the survey would be between 1450 and 1550."
  },
  {
    "objectID": "exam-review/final-review.html#bonus",
    "href": "exam-review/final-review.html#bonus",
    "title": "Final review",
    "section": "Bonus",
    "text": "Bonus\nPick a concept we introduced in class so far that you’ve been struggling with and explain it in your own words."
  },
  {
    "objectID": "exam-review/midterm-review.html",
    "href": "exam-review/midterm-review.html",
    "title": "Midterm Review",
    "section": "",
    "text": "Warning: package 'tidyr' was built under R version 4.4.1\n\n\nWarning: package 'airports' was built under R version 4.4.1\n\n\nWarning: package 'cherryblossom' was built under R version 4.4.1\nIn 2020, employees of Blizzard Entertainment circulated a spreadsheet to anonymously share salaries and recent pay increases amidst rising tension in the video game industry over wage disparities and executive compensation. (Source: Blizzard Workers Share Salaries in Revolt Over Pay)\nThe name of the data frame used for this analysis is blizzard_salary and the variables are:\nThe top ten rows of blizzard_salary are shown below:\n# A tibble: 409 × 4\n   percent_incr salary_type annual_salary performance_rating\n          &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;             \n 1          1   Salaried               1  High              \n 2          1   Salaried               1  Successful        \n 3          1   Salaried               1  High              \n 4          1   Hourly             33987. Successful        \n 5         NA   Hourly             34798. High              \n 6         NA   Hourly             35360  &lt;NA&gt;              \n 7         NA   Hourly             37440  &lt;NA&gt;              \n 8          0   Hourly             37814. &lt;NA&gt;              \n 9          4   Hourly             41101. Top               \n10          1.2 Hourly             42328  &lt;NA&gt;              \n# ℹ 399 more rows"
  },
  {
    "objectID": "exam-review/midterm-review.html#question-1",
    "href": "exam-review/midterm-review.html#question-1",
    "title": "Midterm Review",
    "section": "Question 1",
    "text": "Question 1\nWhich of the following is correct? Choose all that apply.\n\nThe blizzard_salary dataset has 399 rows.\nThe blizzard_salary dataset has 4 columns.\nEach row represents a Blizzard Entertainment worker who filled out the spreadsheet.\nThe percent_incr variable is numerical and discrete.\nThe salary_type variable is numerical.\nThe annual_salary variable is numerical.\nThe performance_rating variable is categorical and ordinal."
  },
  {
    "objectID": "exam-review/midterm-review.html#question-2",
    "href": "exam-review/midterm-review.html#question-2",
    "title": "Midterm Review",
    "section": "Question 2",
    "text": "Question 2\nFigure 1 (a) and Figure 1 (b) show the distributions of annual salaries of hourly and salaried workers. The two figures show the same data, with the facets organized across rows and across columns. Which of the two figures is better for comparing the median annual salaries of hourly and salaried workers. Explain your reasoning.\n\n\n\n\n\n\n\n\n\n(a) Option 1\n\n\n\n\n\n\n\n\n\n\n\n(b) Option 2\n\n\n\n\n\n\nFigure 1: Distribution of annual salaries of Blizzard employees"
  },
  {
    "objectID": "exam-review/midterm-review.html#question-3",
    "href": "exam-review/midterm-review.html#question-3",
    "title": "Midterm Review",
    "section": "Question 3",
    "text": "Question 3\nSuppose your teammate wrote the following code as part of their analysis of the data.\nThey then printed out the results shown below. Unfortunately one of the numbers got erased from the printout. It’s indicated with _____ below.\n# A tibble: 2 × 3\n  salary_type mean_annual_salary median_annual_salary\n  &lt;chr&gt;                    &lt;dbl&gt;                &lt;dbl&gt;\n1 Hourly                  63003.               54246.\n2 Salaried                90183.               _____\nWhich of the following is the best estimate for that erased value?\n\n30,000\n50,000\n80,000\n100,000"
  },
  {
    "objectID": "exam-review/midterm-review.html#question-4",
    "href": "exam-review/midterm-review.html#question-4",
    "title": "Midterm Review",
    "section": "Question 4",
    "text": "Question 4\nWhich distribution of annual salaries has a higher standard deviation?\n\nHourly workers\nSalaried workers\nRoughly the same"
  },
  {
    "objectID": "exam-review/midterm-review.html#question-5",
    "href": "exam-review/midterm-review.html#question-5",
    "title": "Midterm Review",
    "section": "Question 5",
    "text": "Question 5\nWhich of the following alternate plots would also be useful for visualizing the distributions of annual salaries of hourly and salaried workers? Choose all that apply.\na. Box plots\nb. Density plots\nc. Pie charts\nd. Waffle charts\ne. Histograms\nf. Scatterplots"
  },
  {
    "objectID": "exam-review/midterm-review.html#questions-6-and-7",
    "href": "exam-review/midterm-review.html#questions-6-and-7",
    "title": "Midterm Review",
    "section": "Questions 6 and 7",
    "text": "Questions 6 and 7\nSuppose you made the bar plot shown in Figure 2 (a) to visualize the distribution of performance_rating and your teammate made the bar plot shown in Figure 2 (b).\n\n\n\n\n\n\n\n\n\n(a) Option 1\n\n\n\n\n\n\n\n\n\n(b) Option 2\n\n\n\n\n\n\nFigure 2: Distribution of performance rating\n\n\nYou made your bar plot without transforming the data in any way, while your friend did first transform the data with code like the following:\n\nblizzard_salary &lt;- blizzard_salary |&gt;\n  _(1)_(performance_rating = fct_relevel(performance_rating, _(2)_))\n\nQuestion 6: What goes in the blank (1)?\n\narrange()\nfilter()\nmutate()\nsummarize()\n\nQuestion 7: What goes in the blank (2)?\n\n\"Poor\", \"Successful\", \"High\", \"Top\"\n\"Successful\", \"High\", \"Top\"\n\"Top\", \"High\", \"Successful\", \"Poor\"\nPoor, Successful, High, Top"
  },
  {
    "objectID": "exam-review/midterm-review.html#questions-8---10",
    "href": "exam-review/midterm-review.html#questions-8---10",
    "title": "Midterm Review",
    "section": "Questions 8 - 10",
    "text": "Questions 8 - 10\nFinally, another teammate creates the following two plots.\n\n\n\n\n\n\n\n\n\n(a) Option 1\n\n\n\n\n\n\n\n\n\n(b) Option 2\n\n\n\n\n\n\nFigure 3: Distribution of salary type by performance rating\n\n\nQuestion 8: Your teammate asks you for help deciding which one to use in the final report for visualizing the relationship between performance rating and salary type. In 1-3 sentences, can you help them make a decision, justify your choice, and write the narrative that should go with the plot?\nQuestion 9: A friend with a keen eye points out that the number of observations in Figure 3 (a) seems lower than the total number of observations in blizzard_salary. What might be going on here? Explain your reasoning.\nQuestion 10: Below are the proportions of performance ratings for hourly and salaried workers. Place these values in the corresponding segments in Figure 3 (b).\n\n\n# A tibble: 4 × 3\n  performance_rating Hourly Salaried\n  &lt;chr&gt;               &lt;dbl&gt;    &lt;dbl&gt;\n1 High                0.2     0.384 \n2 Successful          0.686   0.521 \n3 Top                 0.114   0.0760\n4 Poor                0       0.0190"
  },
  {
    "objectID": "exam-review/midterm-review.html#questions-11-and-12",
    "href": "exam-review/midterm-review.html#questions-11-and-12",
    "title": "Midterm Review",
    "section": "Questions 11 and 12",
    "text": "Questions 11 and 12\nThe table below shows the distribution of salary_type and performance_rating.\n\n\n# A tibble: 2 × 6\n  salary_type  Poor Successful  High   Top  `NA`\n  &lt;chr&gt;       &lt;int&gt;      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1 Hourly         NA         24     7     4    28\n2 Salaried        5        137   101    20    83\n\n\nThe pipeline below produces a data frame with a fewer number of rows than blizzard_salary.\n\nblizzard_salary |&gt;\n  filter(salary_type _(1)_ \"Hourly\" _(2)_ performance_rating == \"Poor\") |&gt;\n  _(3)_(annual_salary)\n\n\n\n# A tibble: 5 × 4\n  percent_incr salary_type annual_salary performance_rating\n         &lt;dbl&gt; &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;             \n1            0 Salaried            80000 Poor              \n2            3 Salaried            83000 Poor              \n3            0 Salaried           116000 Poor              \n4            0 Salaried           135219 Poor              \n5            0 Salaried           147500 Poor              \n\n\nQuestion 11: Which of the following goes in blanks (1) and (2)?\n\n\n\n(1)\n(2)\n\n\n\na.\n!=\n|\n\n\nb.\n==\n&\n\n\nc.\n!=\n&\n\n\nd.\n==\n|\n\n\n\nQuestion 12: Which function or functions go into blank (3)?\n\narrange()\nmutate()\norder()\nsort()"
  },
  {
    "objectID": "exam-review/midterm-review.html#question-13",
    "href": "exam-review/midterm-review.html#question-13",
    "title": "Midterm Review",
    "section": "Question 13",
    "text": "Question 13\nYou’re reviewing another team’s work and they made the following visualization:\n\n\n\n\n\n\n\n\nAnd they wrote the following interpretation for the relationship between annual salary and percent increase for Top performers:\n\nThe relationship is positive, having a higher salary results in a higher percent increase. There is one clear outlier.\n\nWhich of the following is/are the most accurate and helpful) peer review note for this interpretation. Choose all that apply.\n\nThe interpretation is complete and perfect, no changes needed!\nThe interpretation doesn’t mention the direction of the relationship.\nThe interpretation doesn’t mention the form of the relationship, which is linear.\nThe interpretation doesn’t mention the strength of the relationship, which is somewhat strong.\nThere isn’t a clear outlier in the plot. If any points stand out as potential outliers, more guidance should be given to the reader to identify them (e.g., salary and/or percent increase amount).\nThe interpretation is causal – we don’t know if the cause of the high percent increase is higher annual salary based on observational data. The causal direction might be the other way around, or there may be other factors contributing to the apparent relationship."
  },
  {
    "objectID": "exam-review/midterm-review.html#question-14",
    "href": "exam-review/midterm-review.html#question-14",
    "title": "Midterm Review",
    "section": "Question 14",
    "text": "Question 14\nBelow is some code and its output.\n```{r}\n# label=plot blizzard\n\nggplot(blizzard_salary,aes(x=performance_rating,y=percent_incr))+geom_boxplot()\nlabs(x=\"Performance rating\", y = \"Percent increase\")\n```\n\n\nWarning: Removed 39 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n$x\n[1] \"Performance rating\"\n\n$y\n[1] \"Percent increase\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\nPart 1: List at least 5 things that should be fixed or improved in the code.\nPart 2: What is the cause of the warning and what does it mean?"
  },
  {
    "objectID": "exam-review/midterm-review.html#question-15",
    "href": "exam-review/midterm-review.html#question-15",
    "title": "Midterm Review",
    "section": "Question 15",
    "text": "Question 15\nYou’re working on a data analysis on salaries of Blizzard employees in a Quarto document in a project version controlled by Git. You create a plot and write up a paragraph describing any patterns in it. Then, your teammate says “render, commit, and push”.\nPart 1: What do they mean by each of these three steps. In 1-2 sentences for each, explain in your own words what they mean.\n\nRender:\n\n\nCommit:\n\n\nPush:\n\nPart 2: Your teammate is getting impatient and they interrupt you after you rendered and committed and say “I still can’t see your changes in our shared GitHub repo when I look at it in my web browser.” Which of the following answers is the most accurate?\n\nI rendered my document, you should be seeing my changes on GitHub when you look at it in your web browser.\nI committed my changes, you should be seeing my changes on GitHub when you look at it in your web browser.\nI didn’t yet push my changes, it’s expected that you are not seeing them on GitHub when you look at it in your web browser. Wait until I push, and check again.\nYou need to pull to see my changes on GitHub in the web browser."
  },
  {
    "objectID": "exam-review/midterm-review.html#bonus",
    "href": "exam-review/midterm-review.html#bonus",
    "title": "Midterm Review",
    "section": "Bonus",
    "text": "Bonus\nPick a concept we introduced in class so far that you’ve been struggling with and explain it in your own words."
  },
  {
    "objectID": "exam-review.html",
    "href": "exam-review.html",
    "title": "Exam reviews",
    "section": "",
    "text": "Exam reviews and practice questions will be posted here closer to the midterm and final!",
    "crumbs": [
      "Exam reviews"
    ]
  },
  {
    "objectID": "ae/ae-02-github.html",
    "href": "ae/ae-02-github.html",
    "title": "AE 02: Bechdel Data Vis",
    "section": "",
    "text": "In this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-02-github.html#getting-started",
    "href": "ae/ae-02-github.html#getting-started",
    "title": "AE 02: Bechdel Data Vis",
    "section": "Getting started",
    "text": "Getting started\nPackages\nWe start with loading the packages we’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on.\n\nlibrary(tidyverse)\nlibrary(scales)\n\nData\nThe data are stored as a CSV (comma separated values) file in the data folder of your repository. Let’s read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"https://sta199-s24.github.io/data/bechdel.csv\")\n\nGet to know the data\nWe can use the glimpse function to get an overview (or “glimpse”) of the data.\n\n# add code here\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a ___.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are ___ columns in the dataset.\nVariables of interest\nThe variables we’ll focus on are the following:\n\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\n\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\n\nroi: Return on investment, calculated as the ratio of the gross to budget.\n\nclean_test: Bechdel test result:\n\n\nok = passes test\ndubious\n\nmen = women only talk about men\n\nnotalk = women don’t talk to each other\n\nnowomen = fewer than two women\n\n\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "ae/ae-02-github.html#visualizing-data-with-ggplot2",
    "href": "ae/ae-02-github.html#visualizing-data-with-ggplot2",
    "title": "AE 02: Bechdel Data Vis",
    "section": "Visualizing data with ggplot2\n",
    "text": "Visualizing data with ggplot2\n\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(\n  data = bechdel, \n  mapping = aes(x = budget_2013, y = gross_2013)\n)\n\n\n\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013))\n\n\n\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013)) +\n  geom_point()\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nNote that this results in a warning as well. What does the warning mean?"
  },
  {
    "objectID": "ae/ae-02-github.html#gross-revenue-vs.-budget",
    "href": "ae/ae-02-github.html#gross-revenue-vs.-budget",
    "title": "AE 02: Bechdel Data Vis",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\nStep 1 - Your turn\nModify the following plot to change the color of all points to a different color.\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013)) +\n  geom_point(color = \"deepskyblue3\") \n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nStep 2 - Your turn\nAdd labels for the title and x and y axes.\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"___\", \n    y = \"___\", \n    title = \"___\"\n  )\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nStep 3 - Your turn\nAn aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary.\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by ___\"\n  )\n\nWarning: Removed 15 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nWhat is the difference between how you changed the color here and how you changed the color in Step 1??\n\n\nAdd answer here.\nStep 4 - Your turn\nExpand on your plot from the previous step to make the size of your points based on roi.\n\n# add code here\n\nStep 5 - Your turn\nExpand on your plot from the previous step to make the transparency (alpha) of the points 0.5.\n\n# add code here\n\nStep 6 - Your turn\nExpand on your plot from the previous step by using facet_wrap to display the association between budget and gross for different values of clean_test.\n\n# add code here\n\nStep 7 - Demo\nImprove your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nMake use of the scales package, specifically the scale_x_continuous() and scale_y_continuous() functions.\n\n\n\n# add code here\n\nStep 8 - Your turn\nExpand on your plot from the previous step by using facet_grid to display the association between budget and gross for different combinations of clean_test and binary. Comment on whether this was a useful update.\n\n# add code here\n\nAdd comment here…\nStep 9 - Demo\nWhat other improvements could we make to this plot?\n\n# add code here\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-02-github.html#if-time-back-to-the-penguins",
    "href": "ae/ae-02-github.html#if-time-back-to-the-penguins",
    "title": "AE 02: Bechdel Data Vis",
    "section": "IF TIME: Back to the penguins",
    "text": "IF TIME: Back to the penguins\nIt’s your turn!\nLoad and look at the penguins data frame. What are two variables you could explore the relationship between?\n\n\n\n\n\n\nNote\n\n\n\n# Hint: You will need to load the necessary package first!\n\n\nTry to make a plot (or many!).\n\n# add code here\n\nSome ideas to try out if you’re feeling particularly ambitous:\n\nHow can you change the colors of a variable (in an aesthetic) to any you want ?\nHow can you make the font of a label bigger?\nCan you facet by more than one variable?\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-01-github.html",
    "href": "ae/ae-01-github.html",
    "title": "AE 01: Meet the penguins",
    "section": "",
    "text": "The goal of this application exercise is to get exposure to using the computational toolkit. Let’s get started!"
  },
  {
    "objectID": "ae/ae-01-github.html#quarto-code-chunks",
    "href": "ae/ae-01-github.html#quarto-code-chunks",
    "title": "AE 01: Meet the penguins",
    "section": "Quarto Code Chunks",
    "text": "Quarto Code Chunks\n\nCode goes in “code chunks”: these are grey boxes and can be recognized by ‘{r}’\nTo run a code chunk, click the little green right facing arrow; to run a code chunk and all preceding code chunks, use the downward pointing arrow.\nText goes outside of the code chunks!\n\n\n# this is a code chunk\n\n\n\n\n\n\n\nWhat’s going on?\n\n\n\nWhat’s that text in the code chunk?\n\n#| label: code-chunk : this blue text at the top is a label: basically, it names the code chunk for easy reference. Code chunk names cannot be repeated!\n\\# this is a code chunk : this green text is a comment. A comment goes in a code chunk, but functions like normal text\n\n\n\nWhat’s the difference between a label and a comment?"
  },
  {
    "objectID": "ae/ae-01-github.html#load-packages",
    "href": "ae/ae-01-github.html#load-packages",
    "title": "AE 01: Meet the penguins",
    "section": "Load Packages",
    "text": "Load Packages\nFor this application exercise, we’ll use the tidyverse and palmerpenguins packages.\n\nlibrary(tidyverse)\n\nWarning: package 'tidyr' was built under R version 4.4.1\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\n\nWarning: package 'palmerpenguins' was built under R version 4.4.1"
  },
  {
    "objectID": "ae/ae-01-github.html#examine-data",
    "href": "ae/ae-01-github.html#examine-data",
    "title": "AE 01: Meet the penguins",
    "section": "Examine Data",
    "text": "Examine Data\nThe dataset we will use is called penguins; it was loaded with the palmerpenguins package. You’ll notice it’s not visible yet in the environment pane - let’s put it there.\n\ndata(\"penguins\")\n\nTwo useful functions to examine it are glimpse() and View()\nLet’s glimpse() at it.\n\n\nYour turn: Replace #add code here with the code for “glimpse” ing at the data penguins data frame – glimpse(penguins). Render the document and view the output.\n\n\n# add code here\n\nNow, let’s View() it.\n\n\nYour turn: Replace #add code here with the code for “view” ing at the data penguins data frame – View(penguins).\n\n\n# add code here\n\nWhat information can you see from these two operations? How are they different?"
  },
  {
    "objectID": "ae/ae-01-github.html#some-r-fundamentals",
    "href": "ae/ae-01-github.html#some-r-fundamentals",
    "title": "AE 01: Meet the penguins",
    "section": "Some R Fundamentals",
    "text": "Some R Fundamentals\nYou just used some functions above - library(), data(), glimpse(), and view(). Let’s practice with some more!\nGetting Help\nThere is a function that tells you how many rows are in the data frame: nrow(). Perhaps this is your first time using it and you aren’t sure how it works: you can use ? to see the documentation.\n\n\nYour turn: Write code to get help with the nrow function\n\n\n#add code here\n\n(This works for any function, not just nrow!)\n\n\nYour Turn: Now, let’s compute the number of rows in the data frame:\n\n\n#add code here\n\nOh no!! Errors!!\nUnfortunately, not every time you run a function it will work correctly.\nWhat happens if you run mean() on the data frame? Does this even make sense???\n\n\nYour turn: try running this function on the penguins data frame and see what happens!\n\n\n# add code here\n\nAccessing Columns\nAs we saw with the mean example, not every function works on a full data frame. Sometimes, you need to access just one column. To do that, we can use $ as dataframe$column_name.\n\n\nYour turn: In the code chunk below, compute the mean of the bill_depth_mm variable in the penguins data frame.\n\n\n#add code here\n\nHmmm… something weird is still happening! What does this NA value mean?? Do you have any guesses??? How can we fix this?\n&gt;1 Argument\nTo fix our issue with mean, we need to tell the function something else (that is, use more than one argument).\n\n\nYour turn: First, get help with the ? . Then, try to compute the mean value, ignoring the NA values\n\n\n#add code here"
  },
  {
    "objectID": "ae/ae-01-github.html#how-is-the-document-looking",
    "href": "ae/ae-01-github.html#how-is-the-document-looking",
    "title": "AE 01: Meet the penguins",
    "section": "How is the document looking?",
    "text": "How is the document looking?\nClick render to see!"
  },
  {
    "objectID": "ae/ae-01-github.html#lets-push-our-changes-to-github",
    "href": "ae/ae-01-github.html#lets-push-our-changes-to-github",
    "title": "AE 01: Meet the penguins",
    "section": "Let’s push our changes to GitHub!",
    "text": "Let’s push our changes to GitHub!\nRemember:\n\nStage changes with the checkboxes\nCommit with a message\nPush!"
  },
  {
    "objectID": "ae/ae-01-github.html#miscellaneous",
    "href": "ae/ae-01-github.html#miscellaneous",
    "title": "AE 01: Meet the penguins",
    "section": "Miscellaneous:",
    "text": "Miscellaneous:\nIf there is extra time in class, we’ll add some other tips here!"
  },
  {
    "objectID": "lab/lab-1.html",
    "href": "lab/lab-1.html",
    "title": "Lab 1",
    "section": "",
    "text": "Coming Soon!"
  },
  {
    "objectID": "computing-cheatsheets.html",
    "href": "computing-cheatsheets.html",
    "title": "R cheatsheets",
    "section": "",
    "text": "The following cheatsheets come from https://www.rstudio.com/resources/cheatsheets. We haven’t covered every function and functionality listed on them, but you might still find them useful as references.",
    "crumbs": [
      "Computing",
      "Cheatsheets"
    ]
  },
  {
    "objectID": "course-faq.html",
    "href": "course-faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export… If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you’ve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder)."
  },
  {
    "objectID": "course-faq.html#how-do-i-export-my-assignment-pdf-from-rstudio-to-upload-to-gradescope",
    "href": "course-faq.html#how-do-i-export-my-assignment-pdf-from-rstudio-to-upload-to-gradescope",
    "title": "FAQ",
    "section": "",
    "text": "Go to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export… If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you’ve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder)."
  },
  {
    "objectID": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "href": "course-faq.html#how-can-i-submit-my-assignment-to-gradescope",
    "title": "FAQ",
    "section": "How can I submit my assignment to Gradescope?",
    "text": "How can I submit my assignment to Gradescope?\nThe instructions for submitting your assignment to Gradescope can be found here. In a nutshell, you’ll upload your PDF and them mark the page(s) where each question can be found. It’s OK if a question spans multiple pages, just mark them all. It’s also OK if a page includes multiple questions."
  },
  {
    "objectID": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "href": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "title": "FAQ",
    "section": "Can I use a local install of R and RStudio instead of using the RStudio containers?",
    "text": "Can I use a local install of R and RStudio instead of using the RStudio containers?\nThe short answer is, I’d rather you didn’t, to save yourself some headache. But, the long answer is, sure! But you will need to install a specific versions of R and RStudio for everything to work as expected. You will also need to install the R packages we’re using as well as have Git installed on your computer. These are not extremely challenging things to get right, but they are not trivial either, particularly on certain operating systems. Myself and the TAs are always happy to provide help with any computational questions when you’re working in the containers we have provided for you. If you’re working on your local setup, we can’t guarantee being able to resolve your issues, though we’re happy to try.\nIf you want to take this path, here is what you need to do:\n\nDownload and install R 4.4.1: https://cran.r-project.org/\nDownload and install RStudio: https://posit.co/download/rstudio-desktop/\nInstall Quarto 1.5.56 or higher: https://quarto.org/docs/get-started/\nInstall Git: https://happygitwithr.com/install-git.html\nInstall any necessary packages with install.packages(\"___\")\n\nAnd I’d like to reiterate again that successful installation of these software is not a learning goal of this course. So if any of this seems tedious or intimidating in any way, just use the computing environment we have set up for you. More on that here."
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course support",
    "section": "",
    "text": "It is quite possible that you will need help at some point, and we want to make sure you can identify where that is so that you don’t get too frustrated and feel comfortable seeking help."
  },
  {
    "objectID": "course-support.html#lectures-and-labs",
    "href": "course-support.html#lectures-and-labs",
    "title": "Course support",
    "section": "Lectures and labs",
    "text": "Lectures and labs\nIf you have a question during the lecture or lab, feel free to ask it! There are likely other students with the same question, so asking will create a learning opportunity for everyone."
  },
  {
    "objectID": "course-support.html#help-from-humans",
    "href": "course-support.html#help-from-humans",
    "title": "Course support",
    "section": "Help from humans",
    "text": "Help from humans\n\nOffice hours\nThe teaching team is here to help you be successful in the course. You are encouraged to attend office hours during the times posted on the home page to ask questions about the course content and assignments. Many questions are most effectively answered in person, so office hours are a valuable resource. I encourage each and every one of you to take advantage of this resource! Make a pledge to stop by during office hours at least once during the first three weeks of class. If you have no questions, stop by and say hi and introduce yourself. You can find a list of everyone’s office hours here.\nMy office hours will start in Week 1, TA office hours will start in Week 2.\n\n\nEd Discussion\nHave a question that can’t wait for office hours? Prefer to write out your question in detail rather than asking in person? The course discussion forum, Ed Discussion, is the best venue for these! There is a chance another student has already asked a similar question, so please check the other posts on before asking a new question. If you know the answer to a question that is posted, I encourage you to respond!\nYou can access this tool on the course website toolbar – just click on the lifesaver icon.\n\n\nPeer tutoring\nMINT Peer Tutoring (Meaningful Interactive Tutoring) are small groups of 2-5 students in the same course who meet weekly with a Peer Tutor. This semester, Peer Tutor who will be leading MINT Peer Tutoring for STA 199 is Stanley Borden (stanley.borden@duke.edu).\nThe peer tutoring groups are a resource focused on allowing students to receive additional support for questions they have on the course content while still being part of a community of fellow learners. Peer tutors communicate with students in advance of the meetings so that they can be responsive to student needs during the group meetings. Some groups meet in person and some meet virtually.\n\nIn person, Wednesday 7:00 pm\nVirtual, Wednesday 8:05 pm\n\nFor more details and to see what other courses we offer services for, please visit their website: https://arc.duke.edu/peer-education\nSignups for MINT Peer Tutoring open the morning of Thursday, September 5th and groups start meeting on Monday, September 9th.\nNote that peer tutors are not directly affiliated with the course, however they tend to be students who have taken the course in the past."
  },
  {
    "objectID": "course-support.html#help-from-ai-chatbot",
    "href": "course-support.html#help-from-ai-chatbot",
    "title": "Course support",
    "section": "Help from AI: Chatbot",
    "text": "Help from AI: Chatbot\nThe course has a chatbot that has been trained specifically on the course textbooks. If you’re looking for AI-help, we strongly recommend starting here.\nYou can access this tool on the course website toolbar – just click on the lifesaver icon."
  },
  {
    "objectID": "course-support.html#email",
    "href": "course-support.html#email",
    "title": "Course support",
    "section": "Email",
    "text": "Email\nPlease refrain from emailing any course content questions (those should go to Ed Discussion), and only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, accommodations, etc.). For such matters, you may email Dr. Mine Çetinkaya-Rundel at mc301@duke.edu.\nIf there is a question that’s not appropriate for the public forum, you are welcome to email me directly. If you email me, please include “STA 199” in the subject line. Barring extenuating circumstances, I will respond to STA 199 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday."
  },
  {
    "objectID": "course-support.html#academic-support",
    "href": "course-support.html#academic-support",
    "title": "Course support",
    "section": "Academic support",
    "text": "Academic support\nThere are times you may need help with the class that is beyond what can be provided by the teaching team. In those instances, I encourage you to visit the Academic Resource Center. The Academic Resource Center (ARC) offers free services to all students during their undergraduate careers at Duke. Services include Learning Consultations, Peer Tutoring and Study Groups, ADHD/LD Coaching, Outreach Workshops, and more. Because learning is a process unique to every individual, they work with each student to discover and develop their own academic strategy for success at Duke. Contact the ARC to schedule an appointment. Undergraduates in any year, studying any discipline can benefit! Contact ARC@duke.edu, 919-684-5917."
  },
  {
    "objectID": "course-support.html#mental-health-and-well-being",
    "href": "course-support.html#mental-health-and-well-being",
    "title": "Course support",
    "section": "Mental health and well-being",
    "text": "Mental health and well-being\nDuke is committed to holistic student well-being, including mental, emotional, and physical health. The university offers resources to help students manage daily stress, encourage intentional self-care, and access just-in-time support. If you find you need support, your mental and/or emotional health concerns are impacting your day-to-day activities and your academic performance, or you need someone to talk to, the resources below are available to you:\n\nDukeReach: DukeReach provides comprehensive outreach services to support students in managing all aspects of well-being, including referrals and follow-up services for students who are experiencing significant challenges related to mental health, physical health, social adjustment, and/or a variety of other stressors. You can reach the DukeReach team at dukereach@duke.edu.\nCounseling and Psychological Services (CAPS): CAPS services include individual and group counseling services, psychiatric services, and workshops. CAPS also provides referrals to off-campus resources for specialized care. You can reach CAPS at (919) 660-1000.\nTimelyCare1: TimelyCare is an online platform that is a convenient, confidential, and free way for Duke students to receive 24/7 mental health support through TalkNow and scheduled counseling.\nBC Fellows for Healthy Relationship: The BC Fellows meet with students individually and in groups, supporting the development of healthy relationships and building meaningful community in all areas of a student’s life.\nDukeLine: Students who want to connect anonymously with a Peer Coach can text 984-230-4888 from 5 to 11 p.m. daily. DukeLine offers in-the-moment anonymous, non-emergency text support from a peer.\nDuWell: DuWell provides Moments of Mindfulness (stress management and resilience building) and meditation programming (Koru workshop) to assist students in developing a daily emotional well-being practice. All are welcome, and no experience is necessary. You can reach DuWell at (919) 681-8421."
  },
  {
    "objectID": "course-support.html#course-costs",
    "href": "course-support.html#course-costs",
    "title": "Course support",
    "section": "Course costs",
    "text": "Course costs\n\nTextbooks: The textbooks for this course are freely available on the web.\nLaptops: Each student is expected to have a laptop they can bring to each lecture and lab.\n\nIf you are having difficulty with the costs associated with this course, here are some resources:\n\nKarsh Office of Undergraduate Support: Regardless of your aid package, Karsh offers loans and resources for connecting students with campus programs that might help alleviate course costs.\nDukeLIFE: The Course Material Assistance program offers assistance for eligible students, including through the LIFE Loaner Laptop Program. Students who are eligible for DukeLIFE benefits are notified before the start of the semester; program resources are limited.\nDuke Libraries: The library’s Top Textbook Program allows you to rent some textbooks for 3 hours at a time.\nDuke Link: You can reserve rental equipment from the Link for course-specific technology needs, such as a Digital Voice Recorder, HD Video Camera, TI-84 Plus CE, DSLR camera kit, Tripod, Shotgun Mic, iPad Mini 4, Handheld Projector, or GoPro."
  },
  {
    "objectID": "course-support.html#assistance-with-zoom-or-canvas",
    "href": "course-support.html#assistance-with-zoom-or-canvas",
    "title": "Course support",
    "section": "Assistance with Zoom or Canvas",
    "text": "Assistance with Zoom or Canvas\nFor technical help with Canvas or Zoom, contact the Duke OIT Service Desk at oit.duke.edu/help. You can also access the self-service help documentation for Zoom and Canvas.\nNote that we will be using Canvas minimally in this course (primarily for announcements and the grade book). All assignment submissions will take place on Gradescope and GitHub, and conversations will take place on Ed Discussion.\nZoom will be used for online office hours and as a backup option should we need to hold the course online instead of in person."
  },
  {
    "objectID": "course-support.html#footnotes",
    "href": "course-support.html#footnotes",
    "title": "Course support",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFormerly known as Blue Devils Care.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the semester! Entries for future dates are tentative; the timeline of topics, assignments, and due dates might be changed throughout the semester!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWEEK\nDATE\nTOPIC\nMATERIALS\nDUE\nPREPARE\n\n\n\n1\nWed, May 14\nWelcome\n🖥️ slides 00  ⌨️ ae 00\nGithub Survey - End of Lecture\n\n\n\n\nThu, May 15\nLab 0\n💻 lab 0\nLab 0 - End of Lecture\n\n\n\n\nThu, May 15\nMeet the Toolkit\n🖥️ slides 01  🗒️ notes 01  ⌨️ ae 01\n\n📗 r4ds - intro  📘 ims - chp 1  🎥 Meet the toolkit :: R and RStudio  🎥 Meet the toolkit :: Quarto \n\n\n\nFri, May 16\nGrammar of Data Vis\n🖥️ slides 02  🗒️ notes 02  ⌨️ ae 02\n\n📗 r4ds - chp 1  📘 ims - chp 4 \n\n\n2\nMon, May 19\nMore Data visualization\n\n\n📘 ims - chp 5 🎥 Visualizing Quantitative Data 🎥 Visualizing Categorical Data\n\n\n\nMon, May 19\nLab 1\n\n\n📗 r4ds - chp 2\n\n\n\nTue, May 20\nExploring Data I\n\n\n\n\n\n\nWed, May 21\nExploring Data II\n\nLab 1 - 11:59PM ET\n\n\n\n\nThu, May 22\nTidying Data\n\n\n\n\n\n\nThu, May 22\nLab 2\n\n\n\n\n\n\nFri, May 23\nJoining Data\n\n\n\n\n\n\nSun, May 25\n\n\n\n\n\n\n3\nMon, May 26\nNO CLASS - Memorial Day\n\n\n\n\n\n\nTue, May 27\nData Types and Classes\n\n\n\n\n\n\nWed, May 28\nImporting and Recoding Data\n\nLab 2 - 11:59PM ET\n\n\n\n\nThu, May 29\nWeb Scraping\n\n\n\n\n\n\nThu, May 29\nLab 3\n\n\n\n\n\n\nFri, May 30\nMidterm Review\n\n\n\n\n\n\nSun, Jun 1\n\n\nLab 3 - 11:59PM ET\n\n\n\n4\nMon, Jun 2\nData Science Ethics\n\n\n\n\n\n\nMon, Jun 2\nProject Milestone 1 - Collaboration\n\nProject Milestone 1 - 12:30PM ET\n\n\n\n\nTue, Jun 3\nMidterm\n\n\n\n\n\n\nWed, Jun 4\nThe Language of Models\n\nMidterm Takehome - 9:30AM ET\n\n\n\n\nThu, Jun 5\nSimple Linear Regression\n\n\n\n\n\n\nThu, Jun 5\nProject Milestone 2 - Proposals\n\nProject Milestone 2 - 12:30PM ET\n\n\n\n\nFri, Jun 6\nMultiple Linear Regression 1\n\n\n\n\n\n5\nMon, Jun 9\nMultiple Linear Regression 2\n\n\n\n\n\n\nMon, Jun 9\nLab 4\n\n\n\n\n\n\nTue, Jun 10\nModel Selection\n\n\n\n\n\n\nWed, Jun 11\nLogistic Regression1\n\nLab 4 - 11:59PM ET\n\n\n\n\nThu, Jun 12\nLogistic Regression 2\n\n\n\n\n\n\nThu, Jun 12\nLab 5\n\n\n\n\n\n\nFri, Jun 13\nIntervals\n\n\n\n\n\n\nSun, Jun 15\n\n\nLab 5 - 11:59PM ET\n\n\n\n6\nMon, Jun 16\nHypothesis Testing\n\n\n\n\n\n\nMon, Jun 16\nProject Milestone 4 - Peer Review\n\nProject Milestone 4 - 12:30PM ET\n\n\n\n\nTue, Jun 17\nMore Inference\n\n\n\n\n\n\nWed, Jun 18\nMore Inference\n\n\n\n\n\n\nThu, Jun 19\nNO CLASS - Juneteenth\n\n\n\n\n\n\nFri, Jun 20\nLab 6\n\n\n\n\n\n\nSun, Jun 22\n\n\nLab 6 - 11:59PM ET\n\n\n\n7\nMon, Jun 23\nProject Milestone 5 - Presentations + Final Review\n\nProject - 9:30 AM\n\n\n\n\nMon, Jun 23\nFinal Review\n\n\n\n\n\n\nThu, Jun 26\nFINAL EXAM",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "project/1-working-collaboratively.html",
    "href": "project/1-working-collaboratively.html",
    "title": "Working collaboratively",
    "section": "",
    "text": "Important\n\n\n\nYou must attend this lab in person and participate in the merge conflict activity to be eligible for the points for this milestone. Team members who are not in lab in person for this activity will not be eligible for these points, regardless of their contribution throughout the rest of the project.\nData science is a collaborative discipline. Pretty much no data scientist works alone, so neither should you! In this course you’ll collaborate with teammates on the project.\nThe first milestone of the project, today’s activity, will introduce you to the technical aspects of collaborating on a reproducible data science project that is version controlled by Git and hosted on GitHub in a repository shared by all teammates.\nYes, this means you and all of your teammates will be pushing to the same repository! Sometimes things will go swimmingly, and sometimes you’ll run into merge conflicts."
  },
  {
    "objectID": "project/1-working-collaboratively.html#activity",
    "href": "project/1-working-collaboratively.html#activity",
    "title": "Working collaboratively",
    "section": "Activity",
    "text": "Activity\n\nSetup\n\nClone the project repo and open the about.qmd file.\nAssign the numbers 1, 2, 3, 4, and 5 to each of the team members. If your team has fewer than 5 people, some people will need to have multiple numbers.\n\n\n\nLet’s cause a merge conflict!\nOur goal is to see two different types of merges: first we’ll see a type of merge that git can’t figure out on its own how to do on its own (a merge conflict) and requires human intervention, then another type of where that git can figure out how to do without human intervention.\nDoing this will require some tight choreography, so pay attention!\nTake turns in completing the exercise, only one member at a time. Others should just watch, not doing anything on their own projects (this includes not even pulling changes!) until they are instructed to. If you feel like you won’t be able to resist the urge to touch your computer when it’s not your turn, we recommend putting your hands in your pockets or sitting on them!\n\nBefore starting\nEveryone should have the repo cloned and know which role number(s) they are.\n\n\nRole 1\n\nGo to about.qmd in your project repo. Change the [team name] to your actual team name.\nRender the project by clicking on Render in the Build tab, commit (all changed files), and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 2\n\nChange the team name to some other word.\nRender the project by clicking on Render in the Build tab, commit (all changed files), and push. You should get an error.\nPull. Take a look at the document (about.qmd) with the merge conflict.\nClear the merge conflict by editing the document to choose the correct/preferred change.\nRender the project by clicking on Render in the Build tab.\nClick the Stage checkbox for all files in your Git tab. Make sure they all have check marks, not filled-in boxes.\nCommit and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 3\n\nChange the name of the first team member.\nRender the project by clicking on Render in the Build tab, commit, and push. You should get an error.\nPull. No merge conflicts should occur, but you should see a message about merging.\nNow push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 4\n\nChange the name of the first team member to something other than what the previous team member did.\nRender the project by clicking on Render in the Build tab, commit, and push. You should get an error.\nPull. Take a look at the document with the merge conflict. Clear the merge conflict by choosing the correct/preferred change. Render the project by clicking on Render in the Build tab, commit, and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 5\n\nChange the name of the rest of the team members and add descriptions for each person with the help of your team members. Role 5 should be the only one typing; the others should help verbally.\nRender the project by clicking on Render in the Build tab and commit. Discuss as a team what you expect to happen when you hit push. Should there be a merge conflict error or not?\nIf there is a merge conflict, fix it. If not, push your changes.\n\n\n\nEveryone\nPull, and observe the changes in your project."
  },
  {
    "objectID": "project/1-working-collaboratively.html#tips-for-collaborating-via-github",
    "href": "project/1-working-collaboratively.html#tips-for-collaborating-via-github",
    "title": "Working collaboratively",
    "section": "Tips for collaborating via GitHub",
    "text": "Tips for collaborating via GitHub\n\nAlways pull first before you start working.\nResolve a merge conflict (render and push) before continuing your work. Never do new work while resolving a merge conflict.\nRender, commit, and push often to minimize merge conflicts and/or to make merge conflicts easier to resolve.\nIf you find yourself in a situation that is difficult to resolve, ask questions ASAP. Don’t let it linger and get bigger."
  },
  {
    "objectID": "project/tips-resources.html",
    "href": "project/tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "The project is very open ended. For instance, in creating a compelling visualization(s) of your data in R, there is no limit on what tools or packages you may use. You do not need to visualize all of the data at once. A single high quality visualization will receive a much higher grade than a large number of poor quality visualizations.\nBefore you finalize your write up, make sure the printing of code chunks is turned off with the option echo: false. In addition to code chunks, ensure all messages are turned off with the options warning: false and message: false.\nFinally, pay attention to details in your write-up and presentation. Neatness, coherency, and clarity will count."
  },
  {
    "objectID": "project/tips-resources.html#suppress-code-and-warnings",
    "href": "project/tips-resources.html#suppress-code-and-warnings",
    "title": "Project tips + resources",
    "section": "Suppress code and warnings",
    "text": "Suppress code and warnings\n\nInclude the following in the YAML of your report.qmd to suppress all code, warnings, and other messages.\n\nexecute:\n  echo: false\n  warning: false"
  },
  {
    "objectID": "project/tips-resources.html#headers",
    "href": "project/tips-resources.html#headers",
    "title": "Project tips + resources",
    "section": "Headers",
    "text": "Headers\nUse headers to clearly label each section. Make sure there is a space between the previous line and the header. Use appropriate header levels."
  },
  {
    "objectID": "project/tips-resources.html#references",
    "href": "project/tips-resources.html#references",
    "title": "Project tips + resources",
    "section": "References",
    "text": "References\nInclude all references in a section called “References” at the end of the report. This course does not have specific requirements for formatting citations and references. Optional: Use Quarto’s citation support for generating your reference. See Citations & Footnotes on the Quarto documentation for more on that."
  },
  {
    "objectID": "project/tips-resources.html#appendix",
    "href": "project/tips-resources.html#appendix",
    "title": "Project tips + resources",
    "section": "Appendix",
    "text": "Appendix\nIf you have additional work that does not fit or does not belong in the body of the report, you may put it at the end of the document in section called “Appendix”. The items in the appendix should be properly labeled. The appendix should only be for additional material. The reader should be able to fully understand your report without viewing content in the appendix. We will not grade your appendix."
  },
  {
    "objectID": "project/tips-resources.html#resize-figures",
    "href": "project/tips-resources.html#resize-figures",
    "title": "Project tips + resources",
    "section": "Resize figures",
    "text": "Resize figures\nResize plots and figures, so you have more space for the narrative. Resize individual figures: Set fig-width and fig-height in chunk options, e.g.,\n#| echo: fenced\n#| label: code-cell-label\n#| fig-width: 5\n#| fig-asp: 0.628\nreplacing code-cell-label with a meaningful label and the height and width with values appropriate for your write up.\nResize all figures: Include the fig-width and fig-asp options in the YAML header as shown below:\nexecute:\n  fig-width: 5\n  fig-asp: 0.628\nReplace the height and width values with values appropriate for your write up."
  },
  {
    "objectID": "project/tips-resources.html#arranging-plots",
    "href": "project/tips-resources.html#arranging-plots",
    "title": "Project tips + resources",
    "section": "Arranging plots",
    "text": "Arranging plots\nArrange plots in a grid, instead of one after the other. This is especially useful when displaying plots for exploratory data analysis and to check assumptions.\nThe patchwork package makes it easy to arrange plots in a grid."
  },
  {
    "objectID": "project/4-peer-review.html",
    "href": "project/4-peer-review.html",
    "title": "Peer review",
    "section": "",
    "text": "During the peer feedback process, you will be provided read-only access to your partner team’s GitHub repo. You will provide your feedback in the form of GitHub issues to your partner team’s GitHub repo.\nGoals\nThe goals of this milestone are as follows:\n\nReview others’ project drafts as a team and provide feedback\nPost issues on GitHub using an issue template\nLearn from others’ projects and improve your own project based on their strengths and weaknesses\nInstructions\nReview two other teams’ projects. As a team you should spend ~30 minutes on each team’s project.\n\nFind the names of the teams whose projects you’re reviewing below. You should already have access to this team’s repo.\nEach team member should go to the repo of the team you’re reviewing.\n\nThen,\n\n1-2 team members clone the team’s project and renders it to check for reproducibility.\n1-2 team members open the team’s project in their browser and starts reading through the project draft.\n1 team member opens an issue on the team’s repo using the peer review template.\nAll team members discuss the project based on the prompts on the issue template and one team member records the feedback and submits the issue.\n\n\n\nTo open an issue in the repo you’re reviewing, click on New issue, and click on Get started for the Peer review issue. Fill out this issue, answering the following questions:\n\nPeer review by: [NAME OF TEAM DOING THE REVIEW]\nNames of team members that participated in this review: [FULL NAMES OF TEAM MEMBERS DOING THE REVIEW]\nDescribe the goal of the project.\nDescribe the data used or collected, if any. If the proposal does not include the use of a specific dataset, comment on whether the project would be strengthened by the inclusion of a dataset.\nDescribe the approaches, tools, and methods that will be used.\nProvide constructive feedback on how the team might be able to improve their project. Make sure your feedback includes at least one comment on the statistical reasoning aspect of the project, but do feel free to comment on aspects beyond the reasoning as well.\nWhat aspect of this project are you most interested in and would like to see highlighted in the presentation?\nWere you able to reproduce the project by clicking on Render Website once you cloned it? Were there any issues with reproducibility?\nProvide constructive feedback on any issues with file and/or code organization.\nWhat have you learned from this team’s project that you are considering implementing in your own project?\n(Optional) Any further comments or feedback?\n\n\nReview pairings\n\n\nWarning: package 'tidyr' was built under R version 4.4.1\n\n\n\n\nL1 - 8:30 am\nL2 - 10:05 am\nL3 - 10:05 am\nL4 - 11:45 am\nL5 - 11:45 am\nL6 - 1:25 pm\nL7 - 1:25 pm\nL8 - 3:05 pm\nL9 - 3:05 pm\nL10 - 4:40 pm\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\nGIVJA\ntheoutliers\ndatadinos\n\n\ntheoutliers\ndatadinos\ntheAteam\n\n\ndatadinos\ntheAteam\nflamingos\n\n\ntheAteam\nflamingos\nthebusybees\n\n\nflamingos\nthebusybees\ntheelephants\n\n\nthebusybees\ntheelephants\nGIVJA\n\n\ntheelephants\nGIVJA\ntheoutliers\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\ngithub_lit\ncommitment_issue\narctic_coders\n\n\ncommitment_issue\narctic_coders\nrendeers\n\n\narctic_coders\nrendeers\nsyntax_samurai\n\n\nrendeers\nsyntax_samurai\nkraft_kings\n\n\nsyntax_samurai\nkraft_kings\nmission_impossible\n\n\nkraft_kings\nmission_impossible\ngithub_lit\n\n\nmission_impossible\ngithub_lit\ncommitment_issue\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\njmeg\n3D-coders\nBASK\n\n\n3D-coders\nBASK\nthe_outliers\n\n\nBASK\nthe_outliers\ndebug_divas\n\n\nthe outliers\ndebug_divas\ndream_team\n\n\ndebug divas\ndream_team\nClustered_Chaos\n\n\ndream team\nClustered_Chaos\njmeg\n\n\nClustered Chaos\njmeg\n3D-coders\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\nVermillion_Alligators\nStats_Squad_4F\nDevils_R_Us\n\n\nStats_Squad_4F\nDevils_R_Us\nPickleball\n\n\nDevils_R_Us\nPickleball\nThe_DJs\n\n\nPickleball\nThe_DJs\nSpeedy_Statisticians\n\n\nThe_DJs\nSpeedy_Statisticians\nBlue\n\n\nSpeedy_Statisticians\nBlue\nVermillion_Alligators\n\n\nBlue\nVermillion_Alligators\nStats_Squad_4F\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\nteam_great\nvariable_chaos\nsaved_by_the_bell_curve\n\n\nvariable_chaos\nsaved_by_the_bell_curve\nedwards_ensemble\n\n\nsaved_by_the_bell_curve\nedwards_ensemble\ndata_jemms\n\n\nedwards_ensemble\ndata_jemms\nmean_girls\n\n\ndata_jemms\nmean_girls\nsuper_cool_team\n\n\nmean_girls\nsuper_cool_team\ndata_dorks\n\n\nsuper_cool_team\ndata_dorks\nfaang_fans\n\n\ndata_dorks\nfaang_fans\nteam_great\n\n\nfaang_fans\nteam_great\nvariable_chaos\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\ncoding-goats\naardvark\nggplotters\n\n\naardvark\nggplotters\namee\n\n\nggplotters\namee\nmjca\n\n\namee\nmjca\npivot_better\n\n\nmjca\npivot_better\nr-masters\n\n\npivot_better\nr-masters\ncoding-goats\n\n\nr-masters\ncoding-goats\naardvark\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\njamm\nlatte\njada\n\n\nlatte\njada\nmuchahos\n\n\njada\nmuchahos\nstatistical-significance\n\n\nmuchahos\nstatistical-significance\na-team\n\n\nstatistical-significance\na-team\nstandard-deviants\n\n\na-team\nstandard-deviants\nsultans-of-stats\n\n\nstandard-deviants\nsultans-of-stats\nranch\n\n\nsultans-of-stats\nranch\njamm\n\n\nranch\njamm\nlatte\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\nblue-cheese\ntop-of-the-bell-curve\nbluebears\n\n\ntop-of-the-bell-curve\nbluebears\ncodebreakers\n\n\nbluebears\ncodebreakers\ntidyverse-titans\n\n\ncodebreakers\ntidyverse-titans\nthe-pipe\n\n\ntidyverse-titans\nthe-pipe\ndigital-warriors\n\n\nthe-pipe\ndigital-warriors\nblue-cheese\n\n\ndigital-warriors\nblue-cheese\ntop-of-the-bell-curve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\nthe-data-devils\nquarto-crew\nblue-dolphins\n\n\nquarto-crew\nblue-dolphins\nr-studio-devils\n\n\nblue-dolphins\nr-studio-devils\nstats-stars\n\n\nr-studio-devils\nstats-stars\nspa-r-kles\n\n\nstats-stars\nspa-r-kles\ndyplr-maniacs\n\n\nspa-r-kles\ndyplr-maniacs\ntibble-twins\n\n\ndyplr-maniacs\ntibble-twins\nthe-data-devils\n\n\ntibble-twins\nthe-data-devils\nquarto-crew\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYour team name\nTeam to review 1\nTeam to review 2\n\n\n\nsigma-squad\nzebras\nstates199\n\n\nzebras\nstates199\nstats-shawties\n\n\nstates199\nstats-shawties\ndata-divas\n\n\nstats-shawties\ndata-divas\nstats-bros\n\n\ndata-divas\nstats-bros\nglobal-variables\n\n\nstats-bros\nglobal-variables\nsigma-squad\n\n\nglobal-variables\nsigma-squad\nzebras\n\n\n\n\n\n\n\n\n\nGrading\nPeer reviews will be graded on the extent to which it comprehensively and constructively addresses the components of the reviewee’s team’s report.\nOnly the team members participating in the review during the lab session are eligible for points for the peer review. If you’re unable to make it to lab in person, you should arrange to virtually connect with your team during your lab session.\n\n0 points: No peer review\n1 point: Feedback provided is not constructive or actionable\n2-4 points: Feedback provided is not sufficiently thorough\n5 points: Peer review is constructive, actionable, and sufficiently thorough\n\n\n\n\n\n\n\nNote\n\n\n\nThe feedback issue will come from one team member on GitHub since you can’t collectively edit an issue. However it must represent the opinions of the entire team. It is not a single team member’s responsibility to provide feedback, they’re just the record keeper for the team."
  },
  {
    "objectID": "project/description.html",
    "href": "project/description.html",
    "title": "Project",
    "section": "",
    "text": "TL;DR: Ask a question you’re curious about and answer it with a dataset of your choice. This is your project in a nutshell.\nThe project for this course will consist of analysis on a dataset of your own choosing. The dataset may already exist, or you may collect your own data using a survey or by conducting an experiment. You can choose the data based on your teams’ interests or based on work in other courses or research projects. The goal of this project is for you to demonstrate proficiency in the techniques we have covered in this course (and beyond, if you like) and apply them to a novel dataset in a meaningful way.\nThe goal is not to do an exhaustive data analysis i.e., do not calculate every statistic and procedure you have learned for every variable, but rather let me know that you are proficient at asking meaningful questions and answering them with results of data analysis, that you are proficient in using R, and that you are proficient at interpreting and presenting the results. Focus on methods that help you begin to answer your research questions. You do not have to apply every statistical procedure we learned. Also, critique your own methods and provide suggestions for improving your analysis. Issues pertaining to the reliability and validity of your data, and appropriateness of the statistical analysis should be discussed here.\nThe project is very open ended. You should create some kind of compelling visualization(s) of this data in R. There is no limit on what tools or packages you may use but sticking to packages we learned in the course is required. You do not need to visualize all of the data at once. A single high-quality visualization will receive a much higher grade than a large number of poor-quality visualizations. Also pay attention to your presentation. Neatness, coherency, and clarity will count. All analyses must be done in RStudio, using R, and all components of the project must be reproducible (with the exception of the slide deck).\nYou will work on the project with your lab teams.\nThe four milestones for the final project are\n\nMilestone 1 - Working collaboratively\nMilestone 2 - Proposals, with three dataset ideas\nMilestone 3 - Improvement and progress\nMilestone 4 - Peer review, on another team’s project\nMilestone 5 - Presentation with slides and a reproducible project write-up of your analysis, with a draft along the way.\n\nYou will not be submitting anything on Gradescope for the project. Submission of these deliverables will happen on GitHub and feedback will be provided as GitHub issues that you need to engage with and close. The collection of the documents in your GitHub repo will create a webpage for your project. To create the webpage go to the Build tab in RStudio, and click on Render Website.",
    "crumbs": [
      "Project"
    ]
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-the-team",
    "href": "slides/00-welcome-199-slides.html#meet-the-team",
    "title": "Welcome to STA 199!",
    "section": "Meet the team",
    "text": "Meet the team\n\nInstructorMarie Neubrander\nOld Chem 203\nmarie.neubrander@duke.edu\n\nCourse Coordinator, Lab InstructorDr. Mary Knox\nmary.knox@duke.edu"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-each-other",
    "href": "slides/00-welcome-199-slides.html#meet-each-other",
    "title": "Welcome to STA 199!",
    "section": "Meet each other!",
    "text": "Meet each other!\n\nName\nYear\nHometown\nSomething you plan to do this summer"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#meet-data-science",
    "href": "slides/00-welcome-199-slides.html#meet-data-science",
    "title": "Welcome to STA 199!",
    "section": "Meet data science",
    "text": "Meet data science\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#excel---not",
    "href": "slides/00-welcome-199-slides.html#excel---not",
    "title": "Welcome to STA 199!",
    "section": "Excel - not…",
    "text": "Excel - not…"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#r",
    "href": "slides/00-welcome-199-slides.html#r",
    "title": "Welcome to STA 199!",
    "section": "R",
    "text": "R"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#data-science-life-cycle-1",
    "href": "slides/00-welcome-199-slides.html#data-science-life-cycle-1",
    "title": "Welcome to STA 199!",
    "section": "Data science life cycle",
    "text": "Data science life cycle"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#import",
    "href": "slides/00-welcome-199-slides.html#import",
    "title": "Welcome to STA 199!",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#tidy-transform",
    "href": "slides/00-welcome-199-slides.html#tidy-transform",
    "title": "Welcome to STA 199!",
    "section": "Tidy + transform",
    "text": "Tidy + transform"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#visualize",
    "href": "slides/00-welcome-199-slides.html#visualize",
    "title": "Welcome to STA 199!",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#model",
    "href": "slides/00-welcome-199-slides.html#model",
    "title": "Welcome to STA 199!",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#understand",
    "href": "slides/00-welcome-199-slides.html#understand",
    "title": "Welcome to STA 199!",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#communicate",
    "href": "slides/00-welcome-199-slides.html#communicate",
    "title": "Welcome to STA 199!",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#understand-communicate",
    "href": "slides/00-welcome-199-slides.html#understand-communicate",
    "title": "Welcome to STA 199!",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#program",
    "href": "slides/00-welcome-199-slides.html#program",
    "title": "Welcome to STA 199!",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#activities",
    "href": "slides/00-welcome-199-slides.html#activities",
    "title": "Welcome to STA 199!",
    "section": "Activities",
    "text": "Activities\n\nIntroduce new content and prepare for lectures by watching the videos and completing the readings\nAttend and actively participate in lectures and labs, office hours, team meetings\nPractice with application exercises during lecture\nUse what you’ve learned to analyze real-world data\n\nLab assignments x 6\nExams x 2\nTerm project"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#application-exercises",
    "href": "slides/00-welcome-199-slides.html#application-exercises",
    "title": "Welcome to STA 199!",
    "section": "Application exercises",
    "text": "Application exercises\n\nDaily-ish in lecture\n“Graded” for attempt, not accuracy\nPractice this week; graded thereafter\nAt least one commit by 10:45am of the day of lecture\nTurn in at least 80% for full credit"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#labs",
    "href": "slides/00-welcome-199-slides.html#labs",
    "title": "Welcome to STA 199!",
    "section": "Labs",
    "text": "Labs\n\nMonday and Thursday; right after lecture\nStart in lab session, complete at home\n\nDue dates (typically):\n\nMonday Lab: Due Wednesday at 11:59 PM\nThursday Lab: Due Sunday at 11:59 PM\n\n\nDiscussion with classmates = 🤩 ; Copying = ❌\nLowest score dropped"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#exams",
    "href": "slides/00-welcome-199-slides.html#exams",
    "title": "Welcome to STA 199!",
    "section": "Exams",
    "text": "Exams\n\nTwo exams, each 20%\n\nMidterm (June 3) has two parts:\n\nIn class: 75 minute in-class exam. Closed book, one sheet of notes (“cheat sheet”) – 70% of the grade\nTake home: After the in class exam; analyze a dataset – 30% of the grade\n\n\nFinal (June 26): Closed book, one sheet of notes (“cheat sheet”).\n\n\n\n\n\n\n\nCaution\n\n\nExam dates cannot be changed. If you cannot take the exams on these dates, please have a discussion with me today."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#project",
    "href": "slides/00-welcome-199-slides.html#project",
    "title": "Welcome to STA 199!",
    "section": "Project",
    "text": "Project\n\nDataset of your choice, method of your choice\nTeamwork\nPresentation and write-up\nPresentations in the last lab (June 23)\nInterim deadlines, peer review on content, peer evaluation for team contribution\nSome lab sessions allocated to project progress\n\n\n\n\n\n\n\nCaution\n\n\nFinal presentation date cannot be changed; you must complete the project to pass this class."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#teams",
    "href": "slides/00-welcome-199-slides.html#teams",
    "title": "Welcome to STA 199!",
    "section": "Teams",
    "text": "Teams\n\nAssigned by me\nProject\nPeer evaluation during teamwork and after completion\nExpectations and roles\n\nEveryone is expected to contribute equal effort\n\nEveryone is expected to understand all code turned in\nIndividual contribution evaluated by peer evaluation, commits, etc."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#grading",
    "href": "slides/00-welcome-199-slides.html#grading",
    "title": "Welcome to STA 199!",
    "section": "Grading",
    "text": "Grading\n\n\nCategory\nPercentage\n\n\n\nLabs\n30%\n\n\nProject\n20%\n\n\nExam 1\n20%\n\n\nExam 2\n20%\n\n\nApplication Exercises\n5%\n\n\nLab attendance\n5%\n\n\n\n See course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#support",
    "href": "slides/00-welcome-199-slides.html#support",
    "title": "Welcome to STA 199!",
    "section": "Support",
    "text": "Support\n\nAttend office hours\nAsk and answer questions on the Ed discussion board\nReserve email for questions on personal matters and/or grades"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#office-hours",
    "href": "slides/00-welcome-199-slides.html#office-hours",
    "title": "Welcome to STA 199!",
    "section": "Office Hours",
    "text": "Office Hours\nMarie: Old Chem 203\n\nTuesday 3:30PM - 5:30PM\nFriday 1:00 - 3:00 PM\n\nMary: ZoomTime TBD"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#announcements",
    "href": "slides/00-welcome-199-slides.html#announcements",
    "title": "Welcome to STA 199!",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Canvas (Announcements tool) and sent via email, be sure to check both regularly\nAll information is on the course website - please refer to it often!"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#homepage",
    "href": "slides/00-welcome-199-slides.html#homepage",
    "title": "Welcome to STA 199!",
    "section": "Homepage",
    "text": "Homepage\nhttps://sta199-su25.github.io\n\nAll course materials\nLinks to Canvas, GitHub, RStudio containers, etc."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#course-toolkit",
    "href": "slides/00-welcome-199-slides.html#course-toolkit",
    "title": "Welcome to STA 199!",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nGitHub organization: github.com/sta199-su25\n\nRStudio containers: cmgr.oit.duke.edu/containers\n\nCommunication: Ed Discussion\nAssignment submission and feedback: Gradescope"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#accessibility",
    "href": "slides/00-welcome-199-slides.html#accessibility",
    "title": "Welcome to STA 199!",
    "section": "Accessibility",
    "text": "Accessibility\n\nThe Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments.\nI am committed to making all course materials accessible and I’m always learning how to do this better!"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#late-work-waivers-regrades-policy",
    "href": "slides/00-welcome-199-slides.html#late-work-waivers-regrades-policy",
    "title": "Welcome to STA 199!",
    "section": "Late work, waivers, regrades policy",
    "text": "Late work, waivers, regrades policy\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it\n\n\n\n\n\n\n\nIf you need testing accommodations\n\n\nMake sure I get a letter, and make your appointments in the Testing Center now."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#collaboration",
    "href": "slides/00-welcome-199-slides.html#collaboration",
    "title": "Welcome to STA 199!",
    "section": "Collaboration",
    "text": "Collaboration\n\nLabs: discussing and helping is fine. Sharing your solutions and copying others is not;\nExams: collaboration of any kind is completely forbidden on any part of any exam;\nProjects: collaboration of any kind is enthusiastically encouraged within your team. Between teams, it’s the same as labs; do not directly share your stuff or copy off of others."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#use-of-ai-tools",
    "href": "slides/00-welcome-199-slides.html#use-of-ai-tools",
    "title": "Welcome to STA 199!",
    "section": "Use of AI tools",
    "text": "Use of AI tools\n\n\n AI tools for code:\n\nSure, but be careful/critical! Working code != correct/good code.\nMust explicitly cite with a direct url linking to the conversation you had.\n\n\n AI tools for narrative: Absolutely not!\n AI tools for learning: Sure, but be careful/critical!"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#academic-integrity",
    "href": "slides/00-welcome-199-slides.html#academic-integrity",
    "title": "Welcome to STA 199!",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nTo uphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised."
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#what-is-github",
    "href": "slides/00-welcome-199-slides.html#what-is-github",
    "title": "Welcome to STA 199!",
    "section": "What is GitHub?",
    "text": "What is GitHub?\n\nMore on this tomorrow - basically, it is the Google Drive of coding!"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#ae0-make-your-github-account",
    "href": "slides/00-welcome-199-slides.html#ae0-make-your-github-account",
    "title": "Welcome to STA 199!",
    "section": "AE0: Make your GitHub account",
    "text": "AE0: Make your GitHub account\n Find AE0 on the course website!"
  },
  {
    "objectID": "slides/00-welcome-199-slides.html#this-weeks-tasks",
    "href": "slides/00-welcome-199-slides.html#this-weeks-tasks",
    "title": "Welcome to STA 199!",
    "section": "This week’s tasks",
    "text": "This week’s tasks\n\nComplete Lab 0\n\nComputational setup\nGetting to know you survey\n\n\nRead the syllabus\nGet started with data science!"
  },
  {
    "objectID": "slides/00-welcome-199.html",
    "href": "slides/00-welcome-199.html",
    "title": "Welcome to STA 199!",
    "section": "",
    "text": "InstructorMarie Neubrander\nOld Chem 203\nmarie.neubrander@duke.edu\n\nCourse Coordinator, Lab InstructorDr. Mary Knox\nmary.knox@duke.edu\n\n\nName\nYear\nHometown\nSomething you plan to do this summer\n\n\nData science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge."
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-the-team",
    "href": "slides/00-welcome-199.html#meet-the-team",
    "title": "Welcome to STA 199!",
    "section": "",
    "text": "InstructorMarie Neubrander\nOld Chem 203\nmarie.neubrander@duke.edu\n\nCourse Coordinator, Lab InstructorDr. Mary Knox\nmary.knox@duke.edu"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-each-other",
    "href": "slides/00-welcome-199.html#meet-each-other",
    "title": "Welcome to STA 199!",
    "section": "",
    "text": "Name\nYear\nHometown\nSomething you plan to do this summer"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-data-science",
    "href": "slides/00-welcome-199.html#meet-data-science",
    "title": "Welcome to STA 199!",
    "section": "",
    "text": "Data science is an exciting discipline that allows you to turn raw data into understanding, insight, and knowledge."
  },
  {
    "objectID": "slides/00-welcome-199.html#excel---not",
    "href": "slides/00-welcome-199.html#excel---not",
    "title": "Welcome to STA 199!",
    "section": "Excel - not…",
    "text": "Excel - not…"
  },
  {
    "objectID": "slides/00-welcome-199.html#r",
    "href": "slides/00-welcome-199.html#r",
    "title": "Welcome to STA 199!",
    "section": "R",
    "text": "R"
  },
  {
    "objectID": "slides/00-welcome-199.html#data-science-life-cycle-1",
    "href": "slides/00-welcome-199.html#data-science-life-cycle-1",
    "title": "Welcome to STA 199!",
    "section": "Data science life cycle",
    "text": "Data science life cycle"
  },
  {
    "objectID": "slides/00-welcome-199.html#import",
    "href": "slides/00-welcome-199.html#import",
    "title": "Welcome to STA 199!",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/00-welcome-199.html#tidy-transform",
    "href": "slides/00-welcome-199.html#tidy-transform",
    "title": "Welcome to STA 199!",
    "section": "Tidy + transform",
    "text": "Tidy + transform"
  },
  {
    "objectID": "slides/00-welcome-199.html#visualize",
    "href": "slides/00-welcome-199.html#visualize",
    "title": "Welcome to STA 199!",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/00-welcome-199.html#model",
    "href": "slides/00-welcome-199.html#model",
    "title": "Welcome to STA 199!",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/00-welcome-199.html#understand",
    "href": "slides/00-welcome-199.html#understand",
    "title": "Welcome to STA 199!",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/00-welcome-199.html#communicate",
    "href": "slides/00-welcome-199.html#communicate",
    "title": "Welcome to STA 199!",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/00-welcome-199.html#understand-communicate",
    "href": "slides/00-welcome-199.html#understand-communicate",
    "title": "Welcome to STA 199!",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/00-welcome-199.html#program",
    "href": "slides/00-welcome-199.html#program",
    "title": "Welcome to STA 199!",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/00-welcome-199.html#activities",
    "href": "slides/00-welcome-199.html#activities",
    "title": "Welcome to STA 199!",
    "section": "Activities",
    "text": "Activities\n\nIntroduce new content and prepare for lectures by watching the videos and completing the readings\nAttend and actively participate in lectures and labs, office hours, team meetings\nPractice with application exercises during lecture\nUse what you’ve learned to analyze real-world data\n\nLab assignments x 6\nExams x 2\nTerm project"
  },
  {
    "objectID": "slides/00-welcome-199.html#application-exercises",
    "href": "slides/00-welcome-199.html#application-exercises",
    "title": "Welcome to STA 199!",
    "section": "Application exercises",
    "text": "Application exercises\n\nDaily-ish in lecture\n“Graded” for attempt, not accuracy\nPractice this week; graded thereafter\nAt least one commit by 10:45am of the day of lecture\nTurn in at least 80% for full credit"
  },
  {
    "objectID": "slides/00-welcome-199.html#labs",
    "href": "slides/00-welcome-199.html#labs",
    "title": "Welcome to STA 199!",
    "section": "Labs",
    "text": "Labs\n\nMonday and Thursday; right after lecture\nStart in lab session, complete at home\n\nDue dates (typically):\n\nMonday Lab: Due Wednesday at 11:59 PM\nThursday Lab: Due Sunday at 11:59 PM\n\n\nDiscussion with classmates = 🤩 ; Copying = ❌\nLowest score dropped"
  },
  {
    "objectID": "slides/00-welcome-199.html#exams",
    "href": "slides/00-welcome-199.html#exams",
    "title": "Welcome to STA 199!",
    "section": "Exams",
    "text": "Exams\n\nTwo exams, each 20%\n\nMidterm (June 3) has two parts:\n\nIn class: 75 minute in-class exam. Closed book, one sheet of notes (“cheat sheet”) – 70% of the grade\nTake home: After the in class exam; analyze a dataset – 30% of the grade\n\n\nFinal (June 26): Closed book, one sheet of notes (“cheat sheet”).\n\n\n\n\n\n\n\nCaution\n\n\n\nExam dates cannot be changed. If you cannot take the exams on these dates, please have a discussion with me today."
  },
  {
    "objectID": "slides/00-welcome-199.html#project",
    "href": "slides/00-welcome-199.html#project",
    "title": "Welcome to STA 199!",
    "section": "Project",
    "text": "Project\n\nDataset of your choice, method of your choice\nTeamwork\nPresentation and write-up\nPresentations in the last lab (June 23)\nInterim deadlines, peer review on content, peer evaluation for team contribution\nSome lab sessions allocated to project progress\n\n\n\n\n\n\n\nCaution\n\n\n\nFinal presentation date cannot be changed; you must complete the project to pass this class."
  },
  {
    "objectID": "slides/00-welcome-199.html#teams",
    "href": "slides/00-welcome-199.html#teams",
    "title": "Welcome to STA 199!",
    "section": "Teams",
    "text": "Teams\n\nAssigned by me\nProject\nPeer evaluation during teamwork and after completion\nExpectations and roles\n\nEveryone is expected to contribute equal effort\n\nEveryone is expected to understand all code turned in\nIndividual contribution evaluated by peer evaluation, commits, etc."
  },
  {
    "objectID": "slides/00-welcome-199.html#grading",
    "href": "slides/00-welcome-199.html#grading",
    "title": "Welcome to STA 199!",
    "section": "Grading",
    "text": "Grading\n\n\nCategory\nPercentage\n\n\n\nLabs\n30%\n\n\nProject\n20%\n\n\nExam 1\n20%\n\n\nExam 2\n20%\n\n\nApplication Exercises\n5%\n\n\nLab attendance\n5%\n\n\n\n See course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/00-welcome-199.html#support",
    "href": "slides/00-welcome-199.html#support",
    "title": "Welcome to STA 199!",
    "section": "Support",
    "text": "Support\n\nAttend office hours\nAsk and answer questions on the Ed discussion board\nReserve email for questions on personal matters and/or grades"
  },
  {
    "objectID": "slides/00-welcome-199.html#office-hours",
    "href": "slides/00-welcome-199.html#office-hours",
    "title": "Welcome to STA 199!",
    "section": "Office Hours",
    "text": "Office Hours\nMarie: Old Chem 203\n\nTuesday 3:30PM - 5:30PM\nFriday 1:00 - 3:00 PM\n\nMary: ZoomTime TBD"
  },
  {
    "objectID": "slides/00-welcome-199.html#announcements",
    "href": "slides/00-welcome-199.html#announcements",
    "title": "Welcome to STA 199!",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Canvas (Announcements tool) and sent via email, be sure to check both regularly\nAll information is on the course website - please refer to it often!"
  },
  {
    "objectID": "slides/00-welcome-199.html#homepage",
    "href": "slides/00-welcome-199.html#homepage",
    "title": "Welcome to STA 199!",
    "section": "Homepage",
    "text": "Homepage\nhttps://sta199-su25.github.io\n\nAll course materials\nLinks to Canvas, GitHub, RStudio containers, etc."
  },
  {
    "objectID": "slides/00-welcome-199.html#course-toolkit",
    "href": "slides/00-welcome-199.html#course-toolkit",
    "title": "Welcome to STA 199!",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nGitHub organization: github.com/sta199-su25\n\nRStudio containers: cmgr.oit.duke.edu/containers\n\nCommunication: Ed Discussion\nAssignment submission and feedback: Gradescope"
  },
  {
    "objectID": "slides/00-welcome-199.html#accessibility",
    "href": "slides/00-welcome-199.html#accessibility",
    "title": "Welcome to STA 199!",
    "section": "Accessibility",
    "text": "Accessibility\n\nThe Student Disability Access Office (SDAO) is available to ensure that students are able to engage with their courses and related assignments.\nI am committed to making all course materials accessible and I’m always learning how to do this better!"
  },
  {
    "objectID": "slides/00-welcome-199.html#late-work-waivers-regrades-policy",
    "href": "slides/00-welcome-199.html#late-work-waivers-regrades-policy",
    "title": "Welcome to STA 199!",
    "section": "Late work, waivers, regrades policy",
    "text": "Late work, waivers, regrades policy\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it\n\n\n\n\n\n\n\nIf you need testing accommodations\n\n\n\nMake sure I get a letter, and make your appointments in the Testing Center now."
  },
  {
    "objectID": "slides/00-welcome-199.html#collaboration",
    "href": "slides/00-welcome-199.html#collaboration",
    "title": "Welcome to STA 199!",
    "section": "Collaboration",
    "text": "Collaboration\n\nLabs: discussing and helping is fine. Sharing your solutions and copying others is not;\nExams: collaboration of any kind is completely forbidden on any part of any exam;\nProjects: collaboration of any kind is enthusiastically encouraged within your team. Between teams, it’s the same as labs; do not directly share your stuff or copy off of others."
  },
  {
    "objectID": "slides/00-welcome-199.html#use-of-ai-tools",
    "href": "slides/00-welcome-199.html#use-of-ai-tools",
    "title": "Welcome to STA 199!",
    "section": "Use of AI tools",
    "text": "Use of AI tools\n\n\n AI tools for code:\n\nSure, but be careful/critical! Working code != correct/good code.\nMust explicitly cite with a direct url linking to the conversation you had.\n\n\n AI tools for narrative: Absolutely not!\n AI tools for learning: Sure, but be careful/critical!"
  },
  {
    "objectID": "slides/00-welcome-199.html#academic-integrity",
    "href": "slides/00-welcome-199.html#academic-integrity",
    "title": "Welcome to STA 199!",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nTo uphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised."
  },
  {
    "objectID": "slides/00-welcome-199.html#what-is-github",
    "href": "slides/00-welcome-199.html#what-is-github",
    "title": "Welcome to STA 199!",
    "section": "What is GitHub?",
    "text": "What is GitHub?\n\nMore on this tomorrow - basically, it is the Google Drive of coding!"
  },
  {
    "objectID": "slides/00-welcome-199.html#ae0-make-your-github-account",
    "href": "slides/00-welcome-199.html#ae0-make-your-github-account",
    "title": "Welcome to STA 199!",
    "section": "AE0: Make your GitHub account",
    "text": "AE0: Make your GitHub account\n Find AE0 on the course website!"
  },
  {
    "objectID": "slides/00-welcome-199.html#this-weeks-tasks",
    "href": "slides/00-welcome-199.html#this-weeks-tasks",
    "title": "Welcome to STA 199!",
    "section": "This week’s tasks",
    "text": "This week’s tasks\n\nComplete Lab 0\n\nComputational setup\nGetting to know you survey\n\n\nRead the syllabus\nGet started with data science!"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#announcementsreminders",
    "href": "slides/03-more-vis-slides.html#announcementsreminders",
    "title": "Visualizing Different Types of Data",
    "section": "Announcements/Reminders",
    "text": "Announcements/Reminders\n\nCheck the office hours schedule! Updates are on the course overview page.\nAnswers to your survey questions will come tomorrow!\nToday is your first ‘real’ lab … any questions?\nMake sure you push changes to AE03 today - more on that later.\nDo the preparation reading!!!"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#outline",
    "href": "slides/03-more-vis-slides.html#outline",
    "title": "Visualizing Different Types of Data",
    "section": "Outline",
    "text": "Outline\n\nLast Time: Learned how to plot with a focus on scatter plots.\n\nToday:\n\nDiscuss different methods for visualizing numerical and categorical data\nDemonstrate code to plot these data"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#types-of-data",
    "href": "slides/03-more-vis-slides.html#types-of-data",
    "title": "Visualizing Different Types of Data",
    "section": "Types of Data",
    "text": "Types of Data\n\n\nNumerical Data:\n\nTakes a wide range of numerical values\nMakes sense to add, subtract, etc.\n\n\n\nCategorical Data:\n\nValues can be thought of as distinct categories\nThe possible values are called levels"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#identifying-variable-types",
    "href": "slides/03-more-vis-slides.html#identifying-variable-types",
    "title": "Visualizing Different Types of Data",
    "section": "Identifying variable types",
    "text": "Identifying variable types\n\nFavorite food\nNumber of classes you’re in this semester\nZip code\nAge"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#numerical-data-some-key-terms",
    "href": "slides/03-more-vis-slides.html#numerical-data-some-key-terms",
    "title": "Visualizing Different Types of Data",
    "section": "Numerical Data: Some Key Terms",
    "text": "Numerical Data: Some Key Terms\n\n\nCenter: Shows a ‘typical’ value of a data entry\n\nMean, median, mode…\n\n\n\nVariability: How different are the data points from each other?\n\nQuartiles, IQR, Skew…\n\n\n\nAnd so much more!"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#visualizing-penguins",
    "href": "slides/03-more-vis-slides.html#visualizing-penguins",
    "title": "Visualizing Different Types of Data",
    "section": "Visualizing penguins\n",
    "text": "Visualizing penguins\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ──────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181\n 2 Adelie  Torgersen           39.5          17.4               186\n 3 Adelie  Torgersen           40.3          18                 195\n 4 Adelie  Torgersen           NA            NA                  NA\n 5 Adelie  Torgersen           36.7          19.3               193\n 6 Adelie  Torgersen           39.3          20.6               190\n 7 Adelie  Torgersen           38.9          17.8               181\n 8 Adelie  Torgersen           39.2          19.6               195\n 9 Adelie  Torgersen           34.1          18.1               193\n10 Adelie  Torgersen           42            20.2               190\n# ℹ 334 more rows\n# ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\n\n\n\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "slides/03-more-vis-slides.html#univariate-analysis-1",
    "href": "slides/03-more-vis-slides.html#univariate-analysis-1",
    "title": "Visualizing Different Types of Data",
    "section": "Univariate analysis",
    "text": "Univariate analysis\nAnalyzing a single variable:\n\nNumerical: histogram, box plot, density plot, etc.\nCategorical: bar plot, pie chart, etc."
  },
  {
    "objectID": "slides/03-more-vis-slides.html#histogram---step-1",
    "href": "slides/03-more-vis-slides.html#histogram---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 1",
    "text": "Histogram - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#histogram---step-2",
    "href": "slides/03-more-vis-slides.html#histogram---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 2",
    "text": "Histogram - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#histogram---step-3",
    "href": "slides/03-more-vis-slides.html#histogram---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 3",
    "text": "Histogram - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#histogram---step-4",
    "href": "slides/03-more-vis-slides.html#histogram---step-4",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#histogram---step-4-1",
    "href": "slides/03-more-vis-slides.html#histogram---step-4-1",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 1000\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#histogram---step-5",
    "href": "slides/03-more-vis-slides.html#histogram---step-5",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 5",
    "text": "Histogram - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  ) +\n  labs(\n    title = \"Weights of penguins\",\n    x = \"Weight (grams)\",\n    y = \"Count\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#boxplot---step-1",
    "href": "slides/03-more-vis-slides.html#boxplot---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 1",
    "text": "Boxplot - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#boxplot---step-2",
    "href": "slides/03-more-vis-slides.html#boxplot---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 2",
    "text": "Boxplot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#boxplot---step-3",
    "href": "slides/03-more-vis-slides.html#boxplot---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#boxplot---step-3-1",
    "href": "slides/03-more-vis-slides.html#boxplot---step-3-1",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(y = body_mass_g)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#boxplot---step-3-2",
    "href": "slides/03-more-vis-slides.html#boxplot---step-3-2",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#boxplot---step-4",
    "href": "slides/03-more-vis-slides.html#boxplot---step-4",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 4",
    "text": "Boxplot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = \"Weight (grams)\",\n    y = NULL\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plot---step-1",
    "href": "slides/03-more-vis-slides.html#density-plot---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 1",
    "text": "Density plot - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plot---step-2",
    "href": "slides/03-more-vis-slides.html#density-plot---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 2",
    "text": "Density plot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plot---step-3",
    "href": "slides/03-more-vis-slides.html#density-plot---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 3",
    "text": "Density plot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plot---step-4",
    "href": "slides/03-more-vis-slides.html#density-plot---step-4",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 4",
    "text": "Density plot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"lightblue1\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plot---step-5",
    "href": "slides/03-more-vis-slides.html#density-plot---step-5",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 5",
    "text": "Density plot - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"lightblue1\",\n    linewidth = 2\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plot---step-6",
    "href": "slides/03-more-vis-slides.html#density-plot---step-6",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 6",
    "text": "Density plot - Step 6\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"lightblue1\",\n    linewidth = 2,\n    color = \"darkorchid3\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#lets-discuss",
    "href": "slides/03-more-vis-slides.html#lets-discuss",
    "title": "Visualizing Different Types of Data",
    "section": "Let’s Discuss",
    "text": "Let’s Discuss"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#bar-charts---step-1",
    "href": "slides/03-more-vis-slides.html#bar-charts---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts - Step 1",
    "text": "Bar Charts - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#bar-charts---step-2",
    "href": "slides/03-more-vis-slides.html#bar-charts---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts - Step 2",
    "text": "Bar Charts - Step 2\n\n\n\nggplot(\n  penguins, \n  aes(x = species)\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#bar-charts---step-3",
    "href": "slides/03-more-vis-slides.html#bar-charts---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts - Step 3",
    "text": "Bar Charts - Step 3\n\n\n\nggplot(\n  penguins, \n  aes(x = species)\n  ) +\ngeom_bar()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#bivariate-analysis-1",
    "href": "slides/03-more-vis-slides.html#bivariate-analysis-1",
    "title": "Visualizing Different Types of Data",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\nAnalyzing the relationship between two variables:\n\nNumerical + numerical: scatterplot\nNumerical + categorical: side-by-side box plots, violin plots, etc.\nCategorical + categorical: stacked bar plots\nUsing an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#side-by-side-box-plots",
    "href": "slides/03-more-vis-slides.html#side-by-side-box-plots",
    "title": "Visualizing Different Types of Data",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    y = species\n    )\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plots",
    "href": "slides/03-more-vis-slides.html#density-plots",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plots-1",
    "href": "slides/03-more-vis-slides.html#density-plots-1",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plots-2",
    "href": "slides/03-more-vis-slides.html#density-plots-2",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#density-plots-3",
    "href": "slides/03-more-vis-slides.html#density-plots-3",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#bar-charts",
    "href": "slides/03-more-vis-slides.html#bar-charts",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts",
    "text": "Bar Charts\n\n\n\nggplot(\n  penguins, \n  aes(x = species, \n      fill = island)\n  ) +\ngeom_bar()"
  },
  {
    "objectID": "slides/03-more-vis-slides.html#how-to-push",
    "href": "slides/03-more-vis-slides.html#how-to-push",
    "title": "Visualizing Different Types of Data",
    "section": "How to push",
    "text": "How to push\n\nYou must commit and push changes to the current AE document before the end of class\nToday, check your github folder for changes to AE-03 with a commit message by you!!"
  },
  {
    "objectID": "slides/03-more-vis.html",
    "href": "slides/03-more-vis.html",
    "title": "Visualizing Different Types of Data",
    "section": "",
    "text": "Check the office hours schedule! Updates are on the course overview page.\nAnswers to your survey questions will come tomorrow!\nToday is your first ‘real’ lab … any questions?\nMake sure you push changes to AE03 today - more on that later.\nDo the preparation reading!!!"
  },
  {
    "objectID": "slides/03-more-vis.html#announcementsreminders",
    "href": "slides/03-more-vis.html#announcementsreminders",
    "title": "Visualizing Different Types of Data",
    "section": "",
    "text": "Check the office hours schedule! Updates are on the course overview page.\nAnswers to your survey questions will come tomorrow!\nToday is your first ‘real’ lab … any questions?\nMake sure you push changes to AE03 today - more on that later.\nDo the preparation reading!!!"
  },
  {
    "objectID": "slides/03-more-vis.html#outline",
    "href": "slides/03-more-vis.html#outline",
    "title": "Visualizing Different Types of Data",
    "section": "Outline",
    "text": "Outline\n\nLast Time: Learned how to plot with a focus on scatter plots.\n\nToday:\n\nDiscuss different methods for visualizing numerical and categorical data\nDemonstrate code to plot these data"
  },
  {
    "objectID": "slides/03-more-vis.html#types-of-data",
    "href": "slides/03-more-vis.html#types-of-data",
    "title": "Visualizing Different Types of Data",
    "section": "Types of Data",
    "text": "Types of Data\n\n\nNumerical Data:\n\nTakes a wide range of numerical values\nMakes sense to add, subtract, etc.\n\n\n\nCategorical Data:\n\nValues can be thought of as distinct categories\nThe possible values are called levels"
  },
  {
    "objectID": "slides/03-more-vis.html#identifying-variable-types",
    "href": "slides/03-more-vis.html#identifying-variable-types",
    "title": "Visualizing Different Types of Data",
    "section": "Identifying variable types",
    "text": "Identifying variable types\n\nFavorite food\nNumber of classes you’re in this semester\nZip code\nAge"
  },
  {
    "objectID": "slides/03-more-vis.html#numerical-data-some-key-terms",
    "href": "slides/03-more-vis.html#numerical-data-some-key-terms",
    "title": "Visualizing Different Types of Data",
    "section": "Numerical Data: Some Key Terms",
    "text": "Numerical Data: Some Key Terms\n\n\nCenter: Shows a ‘typical’ value of a data entry\n\nMean, median, mode…\n\n\n\nVariability: How different are the data points from each other?\n\nQuartiles, IQR, Skew…\n\n\n\nAnd so much more!"
  },
  {
    "objectID": "slides/03-more-vis.html#visualizing-penguins",
    "href": "slides/03-more-vis.html#visualizing-penguins",
    "title": "Visualizing Different Types of Data",
    "section": "Visualizing penguins\n",
    "text": "Visualizing penguins\n\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ──────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\n   &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;\n 1 Adelie  Torgersen           39.1          18.7               181\n 2 Adelie  Torgersen           39.5          17.4               186\n 3 Adelie  Torgersen           40.3          18                 195\n 4 Adelie  Torgersen           NA            NA                  NA\n 5 Adelie  Torgersen           36.7          19.3               193\n 6 Adelie  Torgersen           39.3          20.6               190\n 7 Adelie  Torgersen           38.9          17.8               181\n 8 Adelie  Torgersen           39.2          19.6               195\n 9 Adelie  Torgersen           34.1          18.1               193\n10 Adelie  Torgersen           42            20.2               190\n# ℹ 334 more rows\n# ℹ 3 more variables: body_mass_g &lt;int&gt;, sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\n\n\n\n\n\n\n\n\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "slides/03-more-vis.html#univariate-analysis-1",
    "href": "slides/03-more-vis.html#univariate-analysis-1",
    "title": "Visualizing Different Types of Data",
    "section": "Univariate analysis",
    "text": "Univariate analysis\nAnalyzing a single variable:\n\nNumerical: histogram, box plot, density plot, etc.\nCategorical: bar plot, pie chart, etc."
  },
  {
    "objectID": "slides/03-more-vis.html#histogram---step-1",
    "href": "slides/03-more-vis.html#histogram---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 1",
    "text": "Histogram - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#histogram---step-2",
    "href": "slides/03-more-vis.html#histogram---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 2",
    "text": "Histogram - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#histogram---step-3",
    "href": "slides/03-more-vis.html#histogram---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 3",
    "text": "Histogram - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram()"
  },
  {
    "objectID": "slides/03-more-vis.html#histogram---step-4",
    "href": "slides/03-more-vis.html#histogram---step-4",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#histogram---step-4-1",
    "href": "slides/03-more-vis.html#histogram---step-4-1",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 1000\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#histogram---step-5",
    "href": "slides/03-more-vis.html#histogram---step-5",
    "title": "Visualizing Different Types of Data",
    "section": "Histogram - Step 5",
    "text": "Histogram - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  ) +\n  labs(\n    title = \"Weights of penguins\",\n    x = \"Weight (grams)\",\n    y = \"Count\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#boxplot---step-1",
    "href": "slides/03-more-vis.html#boxplot---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 1",
    "text": "Boxplot - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#boxplot---step-2",
    "href": "slides/03-more-vis.html#boxplot---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 2",
    "text": "Boxplot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#boxplot---step-3",
    "href": "slides/03-more-vis.html#boxplot---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis.html#boxplot---step-3-1",
    "href": "slides/03-more-vis.html#boxplot---step-3-1",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(y = body_mass_g)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis.html#boxplot---step-3-2",
    "href": "slides/03-more-vis.html#boxplot---step-3-2",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis.html#boxplot---step-4",
    "href": "slides/03-more-vis.html#boxplot---step-4",
    "title": "Visualizing Different Types of Data",
    "section": "Boxplot - Step 4",
    "text": "Boxplot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = \"Weight (grams)\",\n    y = NULL\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plot---step-1",
    "href": "slides/03-more-vis.html#density-plot---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 1",
    "text": "Density plot - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plot---step-2",
    "href": "slides/03-more-vis.html#density-plot---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 2",
    "text": "Density plot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plot---step-3",
    "href": "slides/03-more-vis.html#density-plot---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 3",
    "text": "Density plot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plot---step-4",
    "href": "slides/03-more-vis.html#density-plot---step-4",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 4",
    "text": "Density plot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"lightblue1\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plot---step-5",
    "href": "slides/03-more-vis.html#density-plot---step-5",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 5",
    "text": "Density plot - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"lightblue1\",\n    linewidth = 2\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plot---step-6",
    "href": "slides/03-more-vis.html#density-plot---step-6",
    "title": "Visualizing Different Types of Data",
    "section": "Density plot - Step 6",
    "text": "Density plot - Step 6\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"lightblue1\",\n    linewidth = 2,\n    color = \"darkorchid3\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#lets-discuss",
    "href": "slides/03-more-vis.html#lets-discuss",
    "title": "Visualizing Different Types of Data",
    "section": "Let’s Discuss",
    "text": "Let’s Discuss"
  },
  {
    "objectID": "slides/03-more-vis.html#bar-charts---step-1",
    "href": "slides/03-more-vis.html#bar-charts---step-1",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts - Step 1",
    "text": "Bar Charts - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#bar-charts---step-2",
    "href": "slides/03-more-vis.html#bar-charts---step-2",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts - Step 2",
    "text": "Bar Charts - Step 2\n\n\n\nggplot(\n  penguins, \n  aes(x = species)\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#bar-charts---step-3",
    "href": "slides/03-more-vis.html#bar-charts---step-3",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts - Step 3",
    "text": "Bar Charts - Step 3\n\n\n\nggplot(\n  penguins, \n  aes(x = species)\n  ) +\ngeom_bar()"
  },
  {
    "objectID": "slides/03-more-vis.html#bivariate-analysis-1",
    "href": "slides/03-more-vis.html#bivariate-analysis-1",
    "title": "Visualizing Different Types of Data",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\nAnalyzing the relationship between two variables:\n\nNumerical + numerical: scatterplot\nNumerical + categorical: side-by-side box plots, violin plots, etc.\nCategorical + categorical: stacked bar plots\nUsing an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot"
  },
  {
    "objectID": "slides/03-more-vis.html#side-by-side-box-plots",
    "href": "slides/03-more-vis.html#side-by-side-box-plots",
    "title": "Visualizing Different Types of Data",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    y = species\n    )\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plots",
    "href": "slides/03-more-vis.html#density-plots",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plots-1",
    "href": "slides/03-more-vis.html#density-plots-1",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density()"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plots-2",
    "href": "slides/03-more-vis.html#density-plots-2",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#density-plots-3",
    "href": "slides/03-more-vis.html#density-plots-3",
    "title": "Visualizing Different Types of Data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "slides/03-more-vis.html#bar-charts",
    "href": "slides/03-more-vis.html#bar-charts",
    "title": "Visualizing Different Types of Data",
    "section": "Bar Charts",
    "text": "Bar Charts\n\n\n\nggplot(\n  penguins, \n  aes(x = species, \n      fill = island)\n  ) +\ngeom_bar()"
  },
  {
    "objectID": "slides/03-more-vis.html#how-to-push",
    "href": "slides/03-more-vis.html#how-to-push",
    "title": "Visualizing Different Types of Data",
    "section": "How to push",
    "text": "How to push\n\nYou must commit and push changes to the current AE document before the end of class\nToday, check your github folder for changes to AE-03 with a commit message by you!!"
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "",
    "text": "By the end of the semester, you will…\n\nlearn to explore, visualize, and analyze data in a reproducible and shareable manner using R and RStudio\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to communicate results through written assignments and project presentation effectively",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-learning-objectives",
    "href": "course-syllabus.html#course-learning-objectives",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "",
    "text": "By the end of the semester, you will…\n\nlearn to explore, visualize, and analyze data in a reproducible and shareable manner using R and RStudio\ngain experience in data wrangling and munging, exploratory data analysis, predictive modeling, and data visualization\nwork on problems and case studies inspired by and based on real-world questions and data\nlearn to communicate results through written assignments and project presentation effectively",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-materials",
    "href": "course-syllabus.html#course-materials",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Course materials",
    "text": "Course materials\n\nTextbooks\nAll books are freely available online.\n\nR for Data Science, 2e, Wickham, Çetinkaya-Rundel, Grolemund. O’Reilly, 2nd edition, 2023. Hard copy available on Amazon.\nIntroduction to Modern Statistics, Çetinkaya-Rundel, Hardin. OpenIntro Inc., 2nd Edition, 2023. Hard copy available on Amazon.\n\n\n\nComputing\nYou will need a laptop you can bring to lecture and lab for this course. We will use the statistical software R. Students will be able to access R through Docker containers provided by Duke Office of Information Technology. See the computing page for more information.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-components",
    "href": "course-syllabus.html#course-components",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Course components",
    "text": "Course components\n\nLectures and labs\nLectures and labs are designed to be interactive, so you gain experience applying new concepts and learning from each other. My role as instructor is to introduce you to new methods, tools, and techniques, but it is up to you to take them and use them. A lot of what you do in this course will involve writing code, and coding is a skill that is best learned by doing. Therefore, as much as possible, you will work on various tasks and activities throughout each lecture and lab. You are expected to prepare for class by completing assigned readings, attending lectures and lab sessions, and meaningfully contributing to in-class exercises and discussions. Additionally, most lectures will feature application exercises that will be graded based on completing what we do in class.\nYou are expected to bring a laptop (or Chromebook) to each class so that you can participate in the in-class exercises. Please ensure your device is fully charged before you come to class, as the number of outlets in the classroom will not be sufficient to accommodate everyone. A tablet also works, but the user experience will be much smoother on a laptop.\n\n\nActivities & Assessment\nYou will be assessed based on five components: application exercises, labs, exams, project, and teamwork.\n\nLabs\nIn labs, you will apply what you’ve learned in the videos and during lectures to complete data analysis tasks. You may discuss lab assignments with other students; however, the lab should be completed and submitted individually. Lab assignments must be typed up using Quarto, all work must be pushed to your GitHub repository for the lab, and the lab’s PDF output must be submitted on Gradescope by the deadline.\nLabs are due at 11:59pm ET on the indicated due date. Generally, for Monday labs, this is the following Wednesday; for Thursday labs, this is the following Sunday.\nThe lowest lab grade will be dropped at the end of the semester.\n\n\nExams\nThis course will have two exams: a midterm and a final. The midterm will include an in-class component (with a cheat sheet) and an open-note take-home component, while the final will include only an in-class component (with a cheat sheet).\nYou can demonstrate what you’ve learned in the course thus far through these exams. The exams will focus on both conceptual understanding of the content and application through analysis and computational tasks. The exam’s content will be related to the content in videos and reading assignments, lectures, application exercises, and labs.\nMore details about the exams will be given during the semester.\n\n\nProject\nThe project aims to apply what you’ve learned throughout the semester to analyze an interesting data-driven research question. The project will be completed in teams, and each team will present their work in the last lab session of the semester. The write-up will be due on the same day.\nYou cannot pass this course if you have not completed the project.\nMore information about the project will be provided during the semester.\n\n\nApplication exercises\nParts of some lectures will be dedicated to working on Application Exercises (AEs). These exercises allow you to apply the statistical concepts and code introduced in the preparation materials. These AEs are due by 10:45 am ET on the day of the lecture they are covered. To submit the AEs, you only need to push your work to your GitHub repo.\nBecause these AEs are for practice, they will be graded based on attempt, i.e., a good-faith effort has been made in attempting all parts.\nSuccessful on-time completion of at least 80% of AEs will result in full credit for AEs in the final course grade.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#grading",
    "href": "course-syllabus.html#grading",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Grading",
    "text": "Grading\nThe final course grade will be calculated as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nLabs\n30%\n\n\nProject\n20%\n\n\nMidterm\n20%\n\n\nFinal\n20%\n\n\nApplication Exercises\n5%\n\n\nLab Attendance\n5%\n\n\n\nThe final letter grade will be determined based on the following thresholds:\n\n\n\nLetter Grade\nFinal Course Grade\n\n\n\n\nA\n&gt;= 93\n\n\nA-\n90 - 92.99\n\n\nB+\n87 - 89.99\n\n\nB\n83 - 86.99\n\n\nB-\n80 - 82.99\n\n\nC+\n77 - 79.99\n\n\nC\n73 - 76.99\n\n\nC-\n70 - 72.99\n\n\nD+\n67 - 69.99\n\n\nD\n63 - 66.99\n\n\nD-\n60 - 62.99\n\n\nF\n&lt; 60",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-community",
    "href": "course-syllabus.html#course-community",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Course community",
    "text": "Course community\n\nInclusive community\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength, and benefit. I intend to present materials and activities that respect diversity and align with Duke’s Commitment to Diversity and Inclusion. Furthermore, I would like to create a learning environment for my students that supports a diversity of thoughts, perspectives, and experiences and honors their identities. To help accomplish this:\n\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me. If you prefer to speak with someone outside of the course, your academic dean is an excellent resource.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If anything was said in class (by anyone) that made you feel uncomfortable, please let me or a teaching team member know.\n\n\n\nPersonal pronouns\nPronouns are meaningful tools to communicate identities and experiences, and using pronouns supports a campus environment where all community members can thrive. You can update your gender pronouns in Duke Hub and learn more about personal pronouns at the Center for Sexual and Gender Diversity’s website.\n\n\nAccessibility\nIf any portion of the course is not accessible to you due to challenges with technology or the course format, please let me know so we can make appropriate accommodations.\nThe Student Disability Access Office (SDAO) is available to ensure that students can engage with their courses and related assignments. Students should contact the SDAO to request or update accommodations under these circumstances.\n\n\nCommunication\nAll lecture notes, assignment instructions, an up-to-date schedule, and other course materials may be found on the course website: sta199-su25.github.io.\nAnnouncements will periodically be emailed through Canvas Announcements. Please check your email regularly to ensure you have the latest announcements for the course.\n\n\nEmail\nIf you have questions about assignment extensions, accommodations, or any other matter not appropriate for the class discussion forum, please email me directly at marie.neubrander@duke.edu. If you do so, please include “STA 199” in the subject line. Barring extenuating circumstances, I will respond to STA 199 emails within 48 hours, Monday through Friday. Response time may be slower for emails sent Friday evening through Sunday.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#five-tips-for-success",
    "href": "course-syllabus.html#five-tips-for-success",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Five tips for success",
    "text": "Five tips for success\nYour success in this course depends very much on you and the effort you put into it. The course team will help you by providing you with materials answering questions, and setting a pace, but for this to work, you must do the following:\n\nComplete all the preparation work before class.\nAsk questions. As often as you can. In class, out of class. Ask me, ask your friends, ask the person sitting next to you. This will help you more than anything else. If you get a question wrong on an assessment, ask us why. If you’re not sure about the lab, ask. If you hear something on the news that sounds related to what we discussed, ask. If the reading is confusing, ask.\nDo the readings!\nDo the lab! The earlier you start, the better. It’s not enough to just mechanically plow through the exercises. You should ask yourself how these exercises relate to earlier material and imagine how they might be changed (to make questions for an exam, for example).\nDon’t procrastinate. The content builds upon what was taught in previous weeks, so if something is confusing to you in Week 2, Week 3 will become more confusing, Week 4 even worse, etc. Don’t let the week end with unanswered questions. But if you find yourself falling behind and not knowing where to begin asking, come to office hours and work with a member of the teaching team to help you identify a good (re)starting point.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#getting-help",
    "href": "course-syllabus.html#getting-help",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Getting help",
    "text": "Getting help\n\nIf you have a question during the lecture or lab, feel free to ask it! There are likely other students with the same question, so by asking, you will create a learning opportunity for everyone.\nThe teaching team is here to help you be successful in the course. You are encouraged to attend office hours to ask questions about the course content and assignments. Many questions are most effectively answered as you discuss them with others, so office hours are a valuable resource. Please use them!\nOutside of class and office hours, any general questions about course content or assignments should be posted on the class discussion forum, Ed Discussion. There is a chance another student has already asked a similar question, so please check the other posts on the forum before adding a new question. If you know the answer to a question, I encourage you to respond!\n\nCheck out the Support tab for more resources.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-policies",
    "href": "course-syllabus.html#course-policies",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Course policies",
    "text": "Course policies\n\nDuke Community Standard\nAs a student in this course, you have agreed to uphold the Duke Community Standard (video here!) and the practices specific to this course.\n\n\nAcademic honesty\nTL;DR: Don’t cheat!\nPlease abide by the following as you work on assignments in this course:\n\nCollaboration: Only work that is clearly assigned as teamwork should be completed collaboratively.\n\nYou may discuss lab assignments with other students; however, you may not directly share (or copy) code or write-up with other students. For team assignments, you may collaborate freely within your team. You may discuss the assignment with other teams; however, you may not directly share (or copy) code or write-up with another team. Unauthorized sharing (or copying) of the code or write-up will be considered a violation for all students involved.\nYou may not discuss or otherwise work with others on the exams. Unauthorized collaboration or using unauthorized materials will be considered a violation for all students involved. More details will be given closer to the exam date.\nCollaboration within teams is not only allowed but expected for the project. Communication between teams at a high level is also allowed; however, you may not share code or project components across teams.\nOn individual assignments, you may not directly share work (including code) with another student in this class; on team assignments, you may not directly share work (including code) with another team.\n\nOnline resources: I know that a huge volume of code is available online to solve any number of problems. Unless I explicitly tell you not to use something, the course’s policy is that you may make use of any online resources (e.g., StackOverflow), but you must explicitly cite where you obtained any code you directly use (or use as inspiration). Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism.\nUse of generative artificial intelligence (AI): You should treat generative AI, such as ChatGPT, like other online resources. Two guiding principles govern how to use AI in this course:\n\nCognitive dimension: Working with AI should not reduce your thinking ability. We will practice using AI to facilitate—rather than hinder—learning.\nEthical dimension: Students using AI should be transparent about their use and ensure it aligns with academic integrity.\n\n\n AI tools for code: You may use the technology for coding examples on assignments; if you do so, you must explicitly cite where you obtained the code. Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism. You may use these guidelines to cite AI-generated content. The bare minimum citation must include the AI tool you’re using (e.g., ChatGPT) and your prompt. The prompt you use cannot be copied and pasted directly from the assignment; you must create a prompt yourself.\n AI tools for narrative: Unless instructed otherwise, you may not use generative AI to generate a narrative that you then copy-paste verbatim into an assignment or edit and then insert into your assignment.\n AI tools for learning: You’re welcomed to ask AI tools questions that might help your learning and understanding in this course.\n\nIn general, you may use generative AI as a resource as you complete assignments but not to answer the exercises for you. You are ultimately responsible for the work you turn in; it should reflect your understanding of the course content. Identifying AI-generated content is fairly straightforward. Any code identified as AI-generated but not cited as such and any narrative identified as AI-generated will be considered plagiarism and treated as such.\n\nIf you are unsure if using a particular resource complies with the academic honesty policy, please ask a teaching team member.\nRegardless of course delivery format, it is the responsibility of all students to understand and follow all Duke policies, including academic integrity (e.g., completing one’s own work, following proper citation of sources, adhering to guidance around group work projects, and more). Ignoring these requirements is a violation of the Duke Community Standard. Any questions and/or concerns regarding academic integrity can be directed to the Office of Student Conduct and Community Standards at conduct@duke.edu.\nAny violations in academic honesty standards as outlined in the Duke Community Standard and those specific to this course will\n\nautomatically results in a 0 for the relevant portion or the entire assignment,\ncan further impact your overall course grade, and\nwill be reported to the Office of Student Conduct & Community Standards for further action.\n\n\n\nLate work & extensions\nThe due dates for assignments are there to help you keep up with the course material and to ensure the teaching team can provide feedback in a timely manner. We understand that things come up periodically that could make it difficult to submit an assignment by the deadline. Note that the lowest lab assignment will be dropped to accommodate such circumstances.\n\nLabs may be submitted up to 3 days late. A 5% deduction will be applied for each 24-hour period during which the assignment is late.\nNo late work is accepted for application exercises since these are designed to help you prepare for other assessments in the course.\nNo late work is accepted for exams.\nNo late work is accepted for projects.\n\n\n\nWaiver for extenuating circumstances\nIf circumstances prevent you from completing a lab by the stated due date, you may email the course coordinator, Dr. Mary Knox, before the deadline to waive the late penalty. In your email, you only need to request the waiver; you do not need to provide an explanation. This waiver may only be used once a semester, so only use it for a truly extenuating circumstance.\nIf circumstances have a longer-term impact on your academic performance, please let your academic dean know. They can be a resource. Please let me know if you need help contacting your academic dean.\n\n\nRegrade requests\nRegrade requests must be submitted on Gradescope within a week after an assignment is returned. Regrade requests will be considered if there was an error in the grade calculation or if a correct answer was mistakenly marked as incorrect. Requests to dispute the number of points deducted for an incorrect response will not be considered. Regrade requests are also not a mechanism for asking for clarification on feedback, those questions should be brought to office hours. Note that by submitting a regrade request, the entire assignment may be regraded, which could potentially result in losing points.\nNo grades will be changed after the final exam has been administered.\n\n\nAttendance policy\nEvery student is expected to attend and participate in lecture and labs. There may be times, however, when you cannot attend class. If you miss a lecture, make sure to review the material and complete the application exercise, if applicable, before the next lecture. Labs are dedicated to completing the lab assignment and collaborating with your classmates and lab instructor. If you miss a lab session, make sure to communicate with your lab instructor about how you can make up your contribution. If you know you’re going to miss a lab session and you’re feeling well enough to do so, notify your lab TA and teammates ahead of time.\nMore details on Trinity attendance policies are available here.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#accommodations",
    "href": "course-syllabus.html#accommodations",
    "title": "STA 199: Intro to Data Science and Statistical Thinking",
    "section": "Accommodations",
    "text": "Accommodations\n\nAcademic accommodations\nIf you need accommodations for this class, you will need to register with the Student Disability Access Office (SDAO) and provide them with documentation related to your needs. SDAO will work with you to determine what accommodations are appropriate for your situation. Please note that accommodations are not retroactive and disability accommodations cannot be provided until a Faculty Accommodation Letter has been given to me. Please contact SDAO for more information: sdao@duke.edu or access.duke.edu.\n\n\nReligious accommodations\nStudents are permitted by university policy to be absent from class to observe a religious holiday. Accordingly, Trinity College of Arts & Sciences and the Pratt School of Engineering have established procedures to be followed by students for notifying their instructors of an absence necessitated by the observance of a religious holiday. Please submit requests for religious accommodations at the beginning of the semester so that we can work to make suitable arrangements well ahead of time. You can find the policy and relevant notification form here: trinity.duke.edu/undergraduate/academic-policies/religious-holidays",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Course GitHub organization\n🔗 on GitHub\n\n\n\nRStudio containers\n🔗 on Duke Container Manager\n\n\n\nEd Discussion\n🔗 on Canvas\n\n\n\nGradescope\n🔗 on Canvas\n\n\n\nTexbooks\n🔗 R for Data Science\n🔗 Introduction to Modern Statistics\n\n\n\nPackage documentation\n🔗 ggplot2: ggplot2.tidyverse.org\n🔗 dplyr: dplyr.tidyverse.org\n🔗 tidyr: tidyr.tidyverse.org\n🔗 forcats: forcats.tidyverse.org\n🔗 stringr: stringr.tidyverse.org\n🔗 lubridate: lubridate.tidyverse.org\n🔗 readr: readr.tidyverse.org\n🔗 readxl: readxl.tidyverse.org",
    "crumbs": [
      "Course information",
      "Useful links"
    ]
  },
  {
    "objectID": "lab.html",
    "href": "lab.html",
    "title": "Labs",
    "section": "",
    "text": "More labs to be added as the semester progresses.\n\n\n\n\n\n\n\n\n\nNo.\n\n\nTitle\n\n\nDue date\n\n\n\n\n\n\nLab 0\n\n\nHello, World and STA 199!\n\n\nEnd of lab on May 15\n\n\n\n\nLab 1\n\n\nFrom the Midwest to North Carolina\n\n\nDue Wed. May 21 11:59 PM\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Labs"
    ]
  },
  {
    "objectID": "computing-troubleshooting.html",
    "href": "computing-troubleshooting.html",
    "title": "Computing troubleshooting",
    "section": "",
    "text": "If you’re having difficulty launching an RStudio session from your reserved container, go to status.oit.duke.edu and scroll down to Teaching and Learning Tools. Under this heading you’ll find an entry called Container Manager (CMGR Coursework Containers).\n\nIf the status shows something other than Operational, this means there is a known incident with the containers. Check back later to see if it’s been resolved. If there’s a deadline coming up soon, post on the Ed Discussions to let us know that there’s an issue. We can look into how quickly it might get resolved and decide on what to do about the deadline accordingly. Note: We don’t anticipate this to happen regularly, the systems are Operational a huge majority of the time!\nIf the status shows Operational, this means the system is expected to be working. If you’re still having trouble, follow the steps in the order given below:\n\nRestart your browser.\nMake sure there are no updates pending for your browser. If there are, install those updates and restart your browser again.\nRequest a restart of your container – To do so, select your container as you usually do and then, instead of Login, click on Request Restart. Read the warning in the next page, and then click once more to restart your container.\nClear your browser cache and restart your browser again.\nRestart your computer to ensure a fresh new connection.\nIf your issue persists, post on the course forum with details on what you’ve tried and the errors you see (including verbatim errors and/or screenshots).",
    "crumbs": [
      "Computing",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "slides/02-data-grammar.html",
    "href": "slides/02-data-grammar.html",
    "title": "Grammar of data visualization",
    "section": "",
    "text": "I have office hours today! 1:00-3:00 PM in Old Chemistry 203/203B.\nWe will start grading your ae repositories next week - make sure you have them ready to go.\nFirst ‘real’ lab is on Monday; the topic will be data visualization (what we are starting today)."
  },
  {
    "objectID": "slides/02-data-grammar.html#reminders",
    "href": "slides/02-data-grammar.html#reminders",
    "title": "Grammar of data visualization",
    "section": "",
    "text": "I have office hours today! 1:00-3:00 PM in Old Chemistry 203/203B.\nWe will start grading your ae repositories next week - make sure you have them ready to go.\nFirst ‘real’ lab is on Monday; the topic will be data visualization (what we are starting today)."
  },
  {
    "objectID": "slides/02-data-grammar.html#outline",
    "href": "slides/02-data-grammar.html#outline",
    "title": "Grammar of data visualization",
    "section": "Outline",
    "text": "Outline\n\n\nLast time:\n\nWe introduced you to the course toolkit.\nYou cloned your ae repositories and started making some updates in your Quarto documents.\nYou commited and pushed your changes back.\n\n\n\n. . .\n\n\nToday:\n\nWe will introduce data visualization.\nYou will pull to get today’s application exercise file.\nYou will work on the new application exercise on data visualization, commit your changes, and push them."
  },
  {
    "objectID": "slides/02-data-grammar.html#ae-01-meet-the-penguins",
    "href": "slides/02-data-grammar.html#ae-01-meet-the-penguins",
    "title": "Grammar of data visualization",
    "section": "ae-01-meet-the-penguins",
    "text": "ae-01-meet-the-penguins\n\nGo to RStudio, confirm that you’re in the ae project, and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/02-data-grammar.html#common-problems",
    "href": "slides/02-data-grammar.html#common-problems",
    "title": "Grammar of data visualization",
    "section": "Common problems:",
    "text": "Common problems:\n\nThe environment used by Quarto when rendering starts EMPTY - it does not see what you see in your environment.\nUsing functions that cause a popup (like View() ) are not going to work when you render a document. Either use a comment (with #) to remove them, or just delete before rendering!\nMake sure you commit and then PUSH! Just committing is not enough!"
  },
  {
    "objectID": "slides/02-data-grammar.html#thoughts-on-this-plot",
    "href": "slides/02-data-grammar.html#thoughts-on-this-plot",
    "title": "Grammar of data visualization",
    "section": "Thoughts on this plot?",
    "text": "Thoughts on this plot?"
  },
  {
    "objectID": "slides/02-data-grammar.html#more-penguins",
    "href": "slides/02-data-grammar.html#more-penguins",
    "title": "Grammar of data visualization",
    "section": "More Penguins",
    "text": "More Penguins"
  },
  {
    "objectID": "slides/02-data-grammar.html#start-plotting",
    "href": "slides/02-data-grammar.html#start-plotting",
    "title": "Grammar of data visualization",
    "section": "Start plotting!",
    "text": "Start plotting!\nHow can you create something like this???\n\n\n\n\n\nThe ggplot2 package has the plotting functions you need!\nggplot2 is a part of the tidyverse package - when you load tidyverse, you also load ggplot2"
  },
  {
    "objectID": "slides/02-data-grammar.html#load-packages",
    "href": "slides/02-data-grammar.html#load-packages",
    "title": "Grammar of data visualization",
    "section": "Load Packages",
    "text": "Load Packages\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/02-data-grammar.html#look-at-the-data",
    "href": "slides/02-data-grammar.html#look-at-the-data",
    "title": "Grammar of data visualization",
    "section": "Look at the data",
    "text": "Look at the data"
  },
  {
    "objectID": "slides/02-data-grammar.html#visualize-the-data",
    "href": "slides/02-data-grammar.html#visualize-the-data",
    "title": "Grammar of data visualization",
    "section": "Visualize the data",
    "text": "Visualize the data\nWhat are some steps you can take to visualize a data set?\n\nWhat do you want on the x-axis?\nWhat do you want on the y-axis?"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-1.-prepare-a-canvas-for-plotting",
    "href": "slides/02-data-grammar.html#step-1.-prepare-a-canvas-for-plotting",
    "title": "Grammar of data visualization",
    "section": "Step 1. Prepare a canvas for plotting",
    "text": "Step 1. Prepare a canvas for plotting\n\nggplot(data = penguins)"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-2.-map-variables-to-aesthetics",
    "href": "slides/02-data-grammar.html#step-2.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 2. Map variables to aesthetics",
    "text": "Step 2. Map variables to aesthetics\nMap year to the x aesthetic\n\nggplot(data = penguins, mapping = aes(x = bill_length_mm))"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-3.-map-variables-to-aesthetics",
    "href": "slides/02-data-grammar.html#step-3.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic\n\nggplot(data = penguins, mapping = aes(x = bill_length_mm, y = body_mass_g))"
  },
  {
    "objectID": "slides/02-data-grammar.html#argument-names",
    "href": "slides/02-data-grammar.html#argument-names",
    "title": "Grammar of data visualization",
    "section": "Argument names",
    "text": "Argument names\nIt’s common practice in R to omit the names of first two arguments of a function:\n. . .\n\nInstead of\n\nggplot(data = your_data, mapping = aes(x = x_variable, y = y_variable))\n\nUse\n\nggplot(your_data, aes(x = x_variable, y = y_variable))"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-3.-map-variables-to-aesthetics-1",
    "href": "slides/02-data-grammar.html#step-3.-map-variables-to-aesthetics-1",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic\n\nggplot(data = penguins, mapping = aes(x = bill_length_mm, y = body_mass_g))"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-3.-map-variables-to-aesthetics-2",
    "href": "slides/02-data-grammar.html#step-3.-map-variables-to-aesthetics-2",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic\n\nggplot(penguins, aes(x = bill_length_mm, y = body_mass_g))"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-4.-represent-data-on-your-canvas",
    "href": "slides/02-data-grammar.html#step-4.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\nwith a geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale\nrange (`geom_point()`)."
  },
  {
    "objectID": "slides/02-data-grammar.html#step-4.-represent-data-on-your-canvas-1",
    "href": "slides/02-data-grammar.html#step-4.-represent-data-on-your-canvas-1",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\n\nAdding geom_point() resulted in the following warning:\n\nWarning: Removed 2 rows containing missing values or values outside the scale\nrange (`geom_point()`)"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-4.-represent-data-on-your-canvas-2",
    "href": "slides/02-data-grammar.html#step-4.-represent-data-on-your-canvas-2",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\nwith a geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g)) +\n  geom_point()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-5.-map-variables-to-aesthetics",
    "href": "slides/02-data-grammar.html#step-5.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 5. Map variables to aesthetics",
    "text": "Step 5. Map variables to aesthetics\nMap species to the color aesthetic\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-5.-map-variables-to-aesthetics-1",
    "href": "slides/02-data-grammar.html#step-5.-map-variables-to-aesthetics-1",
    "title": "Grammar of data visualization",
    "section": "Step 5. Map variables to aesthetics",
    "text": "Step 5. Map variables to aesthetics\nMap species to the color aesthetic\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\n\n\n\nWhat exactly are aesthetics? They map from a variable to a plot feature.\n\nx and y axes\ncolor, shape, size of points"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-6.-represent-data-on-your-canvas",
    "href": "slides/02-data-grammar.html#step-6.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 6. Represent data on your canvas",
    "text": "Step 6. Represent data on your canvas\nwith another geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale\nrange (`geom_point()`)."
  },
  {
    "objectID": "slides/02-data-grammar.html#warnings-and-messages",
    "href": "slides/02-data-grammar.html#warnings-and-messages",
    "title": "Grammar of data visualization",
    "section": "Warnings and messages",
    "text": "Warnings and messages\n\nAdding geom_smooth() resulted in the following warning:\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n. . .\n\nIt tells us the type of smoothing ggplot2 does under the hood when drawing the smooth curves that represent trends for each species.\n\n. . .\n\nGoing forward we’ll suppress this warning to save some space."
  },
  {
    "objectID": "slides/02-data-grammar.html#step-6.-represent-data-on-your-canvas-1",
    "href": "slides/02-data-grammar.html#step-6.-represent-data-on-your-canvas-1",
    "title": "Grammar of data visualization",
    "section": "Step 6. Represent data on your canvas",
    "text": "Step 6. Represent data on your canvas\nwith another geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-7.-split-plot-into-facets",
    "href": "slides/02-data-grammar.html#step-7.-split-plot-into-facets",
    "title": "Grammar of data visualization",
    "section": "Step 7. Split plot into facets",
    "text": "Step 7. Split plot into facets\nUse facet_wrap to make sub-plots\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  facet_wrap(~island)"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-7.-split-plot-into-facets-1",
    "href": "slides/02-data-grammar.html#step-7.-split-plot-into-facets-1",
    "title": "Grammar of data visualization",
    "section": "Step 7. Split plot into facets",
    "text": "Step 7. Split plot into facets\nWe can facet by other variables!\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  facet_wrap(~species)"
  },
  {
    "objectID": "slides/02-data-grammar.html#a-note-on-facets",
    "href": "slides/02-data-grammar.html#a-note-on-facets",
    "title": "Grammar of data visualization",
    "section": "A note on facets:",
    "text": "A note on facets:\nWhich plot do you think made it easier to compare between penguin species?\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-8.-use-a-different-color-scale",
    "href": "slides/02-data-grammar.html#step-8.-use-a-different-color-scale",
    "title": "Grammar of data visualization",
    "section": "Step 8. Use a different color scale",
    "text": "Step 8. Use a different color scale\nWith a scale_color_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_grey()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-8.-use-a-different-color-scale-1",
    "href": "slides/02-data-grammar.html#step-8.-use-a-different-color-scale-1",
    "title": "Grammar of data visualization",
    "section": "Step 8. Use a different color scale",
    "text": "Step 8. Use a different color scale\nWith another scale_color_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() #this is from ggthemes"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-9.-apply-a-different-theme",
    "href": "slides/02-data-grammar.html#step-9.-apply-a-different-theme",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-9.-apply-a-different-theme-1",
    "href": "slides/02-data-grammar.html#step-9.-apply-a-different-theme-1",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_classic()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-9.-apply-a-different-theme-2",
    "href": "slides/02-data-grammar.html#step-9.-apply-a-different-theme-2",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_solarized() #this is from ggthemes"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-9.-apply-a-different-theme-3",
    "href": "slides/02-data-grammar.html#step-9.-apply-a-different-theme-3",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-10.-add-labels",
    "href": "slides/02-data-grammar.html#step-10.-add-labels",
    "title": "Grammar of data visualization",
    "section": "Step 10. Add labels",
    "text": "Step 10. Add labels\nWith labs() function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\", title = \"Penguin Body Mass vs. Bill Length\")"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-11.-set-transparency-of-points",
    "href": "slides/02-data-grammar.html#step-11.-set-transparency-of-points",
    "title": "Grammar of data visualization",
    "section": "Step 11. Set transparency of points",
    "text": "Step 11. Set transparency of points\nwith alpha\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\")"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-11.-set-transparency-of-points-1",
    "href": "slides/02-data-grammar.html#step-11.-set-transparency-of-points-1",
    "title": "Grammar of data visualization",
    "section": "Step 11. Set transparency of points",
    "text": "Step 11. Set transparency of points\nwith alpha\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\")"
  },
  {
    "objectID": "slides/02-data-grammar.html#step-12.-hide-standard-errors-of-curves",
    "href": "slides/02-data-grammar.html#step-12.-hide-standard-errors-of-curves",
    "title": "Grammar of data visualization",
    "section": "Step 12. Hide standard errors of curves",
    "text": "Step 12. Hide standard errors of curves\nwith se = FALSE\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(se = FALSE) +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\")"
  },
  {
    "objectID": "slides/02-data-grammar.html#how-am-i-supposed-to-remember-all-of-this",
    "href": "slides/02-data-grammar.html#how-am-i-supposed-to-remember-all-of-this",
    "title": "Grammar of data visualization",
    "section": "How am I supposed to remember all of this?!",
    "text": "How am I supposed to remember all of this?!\nYou aren’t!!!\n\n\nIt’s important to (eventually) know and remember the key ideas: what does changing a theme do? What are aesthetics? What is a geom?\nYou do not need to memorize a comprehensive list of all of the different geoms, themes, color scales, etc.\nThere will be a few fundamentals we expect you to know – more on that later!\n\nhttps://ggplot2.tidyverse.org is super helpful!"
  },
  {
    "objectID": "slides/02-data-grammar.html#grammar-of-graphics",
    "href": "slides/02-data-grammar.html#grammar-of-graphics",
    "title": "Grammar of data visualization",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\n\n\nWe built a plot layer-by-layer\n\njust like described in the book The Grammar of Graphics and\nimplemented in the ggplot2 package, the data visualization package of the tidyverse."
  },
  {
    "objectID": "slides/02-data-grammar.html#application-exercise-1",
    "href": "slides/02-data-grammar.html#application-exercise-1",
    "title": "Grammar of data visualization",
    "section": "Application exercise",
    "text": "Application exercise\nWhat if we want to use our own data?\n\nread_csv(\"data_file.csv\") (assuming the data is in a CSV format)"
  },
  {
    "objectID": "slides/02-data-grammar.html#ae-02-bechdel-dataviz",
    "href": "slides/02-data-grammar.html#ae-02-bechdel-dataviz",
    "title": "Grammar of data visualization",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\nWe will be looking at data on movies and the Bechdel test."
  },
  {
    "objectID": "slides/02-data-grammar.html#ae-02-bechdel-dataviz-1",
    "href": "slides/02-data-grammar.html#ae-02-bechdel-dataviz-1",
    "title": "Grammar of data visualization",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there’s nothing left in your Git pane.\nIf you haven’t yet done so, click Pull to get today’s application exercise file.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/02-data-grammar.html#recap",
    "href": "slides/02-data-grammar.html#recap",
    "title": "Grammar of data visualization",
    "section": "Recap",
    "text": "Recap\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()"
  },
  {
    "objectID": "slides/02-data-grammar.html#coming-up",
    "href": "slides/02-data-grammar.html#coming-up",
    "title": "Grammar of data visualization",
    "section": "Coming Up…",
    "text": "Coming Up…\n\nWhat are some other types of plots you can make?\nHow can you talk about the information conveyed by plots?"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#reminders",
    "href": "slides/02-data-grammar-slides.html#reminders",
    "title": "Grammar of data visualization",
    "section": "Reminders",
    "text": "Reminders\n\nI have office hours today! 1:00-3:00 PM in Old Chemistry 203/203B.\nWe will start grading your ae repositories next week - make sure you have them ready to go.\nFirst ‘real’ lab is on Monday; the topic will be data visualization (what we are starting today)."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#outline",
    "href": "slides/02-data-grammar-slides.html#outline",
    "title": "Grammar of data visualization",
    "section": "Outline",
    "text": "Outline\n\n\nLast time:\n\nWe introduced you to the course toolkit.\nYou cloned your ae repositories and started making some updates in your Quarto documents.\nYou commited and pushed your changes back.\n\n\n\n\n\n\nToday:\n\nWe will introduce data visualization.\nYou will pull to get today’s application exercise file.\nYou will work on the new application exercise on data visualization, commit your changes, and push them."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#ae-01-meet-the-penguins",
    "href": "slides/02-data-grammar-slides.html#ae-01-meet-the-penguins",
    "title": "Grammar of data visualization",
    "section": "ae-01-meet-the-penguins",
    "text": "ae-01-meet-the-penguins\n\nGo to RStudio, confirm that you’re in the ae project, and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#common-problems",
    "href": "slides/02-data-grammar-slides.html#common-problems",
    "title": "Grammar of data visualization",
    "section": "Common problems:",
    "text": "Common problems:\n\nThe environment used by Quarto when rendering starts EMPTY - it does not see what you see in your environment.\nUsing functions that cause a popup (like View() ) are not going to work when you render a document. Either use a comment (with #) to remove them, or just delete before rendering!\nMake sure you commit and then PUSH! Just committing is not enough!"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#thoughts-on-this-plot",
    "href": "slides/02-data-grammar-slides.html#thoughts-on-this-plot",
    "title": "Grammar of data visualization",
    "section": "Thoughts on this plot?",
    "text": "Thoughts on this plot?"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#more-penguins",
    "href": "slides/02-data-grammar-slides.html#more-penguins",
    "title": "Grammar of data visualization",
    "section": "More Penguins",
    "text": "More Penguins"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#start-plotting",
    "href": "slides/02-data-grammar-slides.html#start-plotting",
    "title": "Grammar of data visualization",
    "section": "Start plotting!",
    "text": "Start plotting!\nHow can you create something like this???\n\n\n\n\n\nThe ggplot2 package has the plotting functions you need!\nggplot2 is a part of the tidyverse package - when you load tidyverse, you also load ggplot2"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#load-packages",
    "href": "slides/02-data-grammar-slides.html#load-packages",
    "title": "Grammar of data visualization",
    "section": "Load Packages",
    "text": "Load Packages\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#look-at-the-data",
    "href": "slides/02-data-grammar-slides.html#look-at-the-data",
    "title": "Grammar of data visualization",
    "section": "Look at the data",
    "text": "Look at the data"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#visualize-the-data",
    "href": "slides/02-data-grammar-slides.html#visualize-the-data",
    "title": "Grammar of data visualization",
    "section": "Visualize the data",
    "text": "Visualize the data\nWhat are some steps you can take to visualize a data set?\n\nWhat do you want on the x-axis?\nWhat do you want on the y-axis?"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-1.-prepare-a-canvas-for-plotting",
    "href": "slides/02-data-grammar-slides.html#step-1.-prepare-a-canvas-for-plotting",
    "title": "Grammar of data visualization",
    "section": "Step 1. Prepare a canvas for plotting",
    "text": "Step 1. Prepare a canvas for plotting\n\nggplot(data = penguins)"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-2.-map-variables-to-aesthetics",
    "href": "slides/02-data-grammar-slides.html#step-2.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 2. Map variables to aesthetics",
    "text": "Step 2. Map variables to aesthetics\nMap year to the x aesthetic\n\nggplot(data = penguins, mapping = aes(x = bill_length_mm))"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-3.-map-variables-to-aesthetics",
    "href": "slides/02-data-grammar-slides.html#step-3.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic\n\nggplot(data = penguins, mapping = aes(x = bill_length_mm, y = body_mass_g))"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#argument-names",
    "href": "slides/02-data-grammar-slides.html#argument-names",
    "title": "Grammar of data visualization",
    "section": "Argument names",
    "text": "Argument names\nIt’s common practice in R to omit the names of first two arguments of a function:\n\n\nInstead of\n\nggplot(data = your_data, mapping = aes(x = x_variable, y = y_variable))\n\nUse\n\nggplot(your_data, aes(x = x_variable, y = y_variable))"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-3.-map-variables-to-aesthetics-1",
    "href": "slides/02-data-grammar-slides.html#step-3.-map-variables-to-aesthetics-1",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic\n\nggplot(data = penguins, mapping = aes(x = bill_length_mm, y = body_mass_g))"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-3.-map-variables-to-aesthetics-2",
    "href": "slides/02-data-grammar-slides.html#step-3.-map-variables-to-aesthetics-2",
    "title": "Grammar of data visualization",
    "section": "Step 3. Map variables to aesthetics",
    "text": "Step 3. Map variables to aesthetics\nMap percent_yes to the y aesthetic\n\nggplot(penguins, aes(x = bill_length_mm, y = body_mass_g))"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-4.-represent-data-on-your-canvas",
    "href": "slides/02-data-grammar-slides.html#step-4.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\nwith a geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale\nrange (`geom_point()`)."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-4.-represent-data-on-your-canvas-1",
    "href": "slides/02-data-grammar-slides.html#step-4.-represent-data-on-your-canvas-1",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\n\nAdding geom_point() resulted in the following warning:\n\nWarning: Removed 2 rows containing missing values or values outside the scale\nrange (`geom_point()`)"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-4.-represent-data-on-your-canvas-2",
    "href": "slides/02-data-grammar-slides.html#step-4.-represent-data-on-your-canvas-2",
    "title": "Grammar of data visualization",
    "section": "Step 4. Represent data on your canvas",
    "text": "Step 4. Represent data on your canvas\nwith a geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g)) +\n  geom_point()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-5.-map-variables-to-aesthetics",
    "href": "slides/02-data-grammar-slides.html#step-5.-map-variables-to-aesthetics",
    "title": "Grammar of data visualization",
    "section": "Step 5. Map variables to aesthetics",
    "text": "Step 5. Map variables to aesthetics\nMap species to the color aesthetic\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-5.-map-variables-to-aesthetics-1",
    "href": "slides/02-data-grammar-slides.html#step-5.-map-variables-to-aesthetics-1",
    "title": "Grammar of data visualization",
    "section": "Step 5. Map variables to aesthetics",
    "text": "Step 5. Map variables to aesthetics\nMap species to the color aesthetic\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point()\n\n\n\n\n\n\n\nWhat exactly are aesthetics? They map from a variable to a plot feature.\n\nx and y axes\ncolor, shape, size of points"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-6.-represent-data-on-your-canvas",
    "href": "slides/02-data-grammar-slides.html#step-6.-represent-data-on-your-canvas",
    "title": "Grammar of data visualization",
    "section": "Step 6. Represent data on your canvas",
    "text": "Step 6. Represent data on your canvas\nwith another geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale\nrange (`geom_point()`)."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#warnings-and-messages",
    "href": "slides/02-data-grammar-slides.html#warnings-and-messages",
    "title": "Grammar of data visualization",
    "section": "Warnings and messages",
    "text": "Warnings and messages\n\nAdding geom_smooth() resulted in the following warning:\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nIt tells us the type of smoothing ggplot2 does under the hood when drawing the smooth curves that represent trends for each species.\n\n\n\n\nGoing forward we’ll suppress this warning to save some space."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-6.-represent-data-on-your-canvas-1",
    "href": "slides/02-data-grammar-slides.html#step-6.-represent-data-on-your-canvas-1",
    "title": "Grammar of data visualization",
    "section": "Step 6. Represent data on your canvas",
    "text": "Step 6. Represent data on your canvas\nwith another geom\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-7.-split-plot-into-facets",
    "href": "slides/02-data-grammar-slides.html#step-7.-split-plot-into-facets",
    "title": "Grammar of data visualization",
    "section": "Step 7. Split plot into facets",
    "text": "Step 7. Split plot into facets\nUse facet_wrap to make sub-plots\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  facet_wrap(~island)"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-7.-split-plot-into-facets-1",
    "href": "slides/02-data-grammar-slides.html#step-7.-split-plot-into-facets-1",
    "title": "Grammar of data visualization",
    "section": "Step 7. Split plot into facets",
    "text": "Step 7. Split plot into facets\nWe can facet by other variables!\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  facet_wrap(~species)"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#a-note-on-facets",
    "href": "slides/02-data-grammar-slides.html#a-note-on-facets",
    "title": "Grammar of data visualization",
    "section": "A note on facets:",
    "text": "A note on facets:\nWhich plot do you think made it easier to compare between penguin species?\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-8.-use-a-different-color-scale",
    "href": "slides/02-data-grammar-slides.html#step-8.-use-a-different-color-scale",
    "title": "Grammar of data visualization",
    "section": "Step 8. Use a different color scale",
    "text": "Step 8. Use a different color scale\nWith a scale_color_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_grey()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-8.-use-a-different-color-scale-1",
    "href": "slides/02-data-grammar-slides.html#step-8.-use-a-different-color-scale-1",
    "title": "Grammar of data visualization",
    "section": "Step 8. Use a different color scale",
    "text": "Step 8. Use a different color scale\nWith another scale_color_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() #this is from ggthemes"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme",
    "href": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme-1",
    "href": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme-1",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_classic()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme-2",
    "href": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme-2",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_solarized() #this is from ggthemes"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme-3",
    "href": "slides/02-data-grammar-slides.html#step-9.-apply-a-different-theme-3",
    "title": "Grammar of data visualization",
    "section": "Step 9. Apply a different theme",
    "text": "Step 9. Apply a different theme\nWith a theme_ function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-10.-add-labels",
    "href": "slides/02-data-grammar-slides.html#step-10.-add-labels",
    "title": "Grammar of data visualization",
    "section": "Step 10. Add labels",
    "text": "Step 10. Add labels\nWith labs() function\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\", title = \"Penguin Body Mass vs. Bill Length\")"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-11.-set-transparency-of-points",
    "href": "slides/02-data-grammar-slides.html#step-11.-set-transparency-of-points",
    "title": "Grammar of data visualization",
    "section": "Step 11. Set transparency of points",
    "text": "Step 11. Set transparency of points\nwith alpha\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point(alpha = 0.1) +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\")"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-11.-set-transparency-of-points-1",
    "href": "slides/02-data-grammar-slides.html#step-11.-set-transparency-of-points-1",
    "title": "Grammar of data visualization",
    "section": "Step 11. Set transparency of points",
    "text": "Step 11. Set transparency of points\nwith alpha\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point(alpha = 0.7) +\n  geom_smooth() +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\")"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#step-12.-hide-standard-errors-of-curves",
    "href": "slides/02-data-grammar-slides.html#step-12.-hide-standard-errors-of-curves",
    "title": "Grammar of data visualization",
    "section": "Step 12. Hide standard errors of curves",
    "text": "Step 12. Hide standard errors of curves\nwith se = FALSE\n\nggplot(penguins, mapping = aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(se = FALSE) +\n  scale_color_colorblind() +\n  theme_minimal() +\n  labs(x = \"Bill Length (mm)\", y = \"Body Mass (g)\", color = \"Species\")"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#how-am-i-supposed-to-remember-all-of-this",
    "href": "slides/02-data-grammar-slides.html#how-am-i-supposed-to-remember-all-of-this",
    "title": "Grammar of data visualization",
    "section": "How am I supposed to remember all of this?!",
    "text": "How am I supposed to remember all of this?!\nYou aren’t!!!\n\n\nIt’s important to (eventually) know and remember the key ideas: what does changing a theme do? What are aesthetics? What is a geom?\nYou do not need to memorize a comprehensive list of all of the different geoms, themes, color scales, etc.\nThere will be a few fundamentals we expect you to know – more on that later!\n\nhttps://ggplot2.tidyverse.org is super helpful!"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#grammar-of-graphics",
    "href": "slides/02-data-grammar-slides.html#grammar-of-graphics",
    "title": "Grammar of data visualization",
    "section": "Grammar of graphics",
    "text": "Grammar of graphics\n\n\nWe built a plot layer-by-layer\n\njust like described in the book The Grammar of Graphics and\nimplemented in the ggplot2 package, the data visualization package of the tidyverse."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#application-exercise-1",
    "href": "slides/02-data-grammar-slides.html#application-exercise-1",
    "title": "Grammar of data visualization",
    "section": "Application exercise",
    "text": "Application exercise\nWhat if we want to use our own data?\n\nread_csv(\"data_file.csv\") (assuming the data is in a CSV format)"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#ae-02-bechdel-dataviz",
    "href": "slides/02-data-grammar-slides.html#ae-02-bechdel-dataviz",
    "title": "Grammar of data visualization",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\nWe will be looking at data on movies and the Bechdel test."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#ae-02-bechdel-dataviz-1",
    "href": "slides/02-data-grammar-slides.html#ae-02-bechdel-dataviz-1",
    "title": "Grammar of data visualization",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nGo to your ae project in RStudio.\nMake sure all of your changes up to this point are committed and pushed, i.e., there’s nothing left in your Git pane.\nIf you haven’t yet done so, click Pull to get today’s application exercise file.\nWork through the application exercise in class, and render, commit, and push your edits by the end of class."
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#recap",
    "href": "slides/02-data-grammar-slides.html#recap",
    "title": "Grammar of data visualization",
    "section": "Recap",
    "text": "Recap\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()"
  },
  {
    "objectID": "slides/02-data-grammar-slides.html#coming-up",
    "href": "slides/02-data-grammar-slides.html#coming-up",
    "title": "Grammar of data visualization",
    "section": "Coming Up…",
    "text": "Coming Up…\n\nWhat are some other types of plots you can make?\nHow can you talk about the information conveyed by plots?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html",
    "href": "slides/01-meet-the-toolkit.html",
    "title": "Meet the Toolkit",
    "section": "",
    "text": "If you have not yet finished the Getting to Know You survey, please do so ASAP!\nMake your appointments in the Testing Center now!\nAny questions about the syllabus??"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#reminders",
    "href": "slides/01-meet-the-toolkit.html#reminders",
    "title": "Meet the Toolkit",
    "section": "",
    "text": "If you have not yet finished the Getting to Know You survey, please do so ASAP!\nMake your appointments in the Testing Center now!\nAny questions about the syllabus??"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#course-toolkit",
    "href": "slides/01-meet-the-toolkit.html#course-toolkit",
    "title": "Meet the Toolkit",
    "section": "Course toolkit",
    "text": "Course toolkit\n\n\nCourse operation\n\nMaterials: sta199-f24.github.io\n\nSubmission: Gradescope\nDiscussion: Ed Discussion\nGradebook: Canvas\n\n\n\nDoing data science\n\nComputing:\n\nR\n\nRStudio\n\ntidyverse\n\nQuarto\n\n\n\nVersion control and collaboration:\n\nGit\n\nGitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#learning-goals",
    "href": "slides/01-meet-the-toolkit.html#learning-goals",
    "title": "Meet the Toolkit",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\n\ngain insight from data, reproducibly, using modern programming tools and techniques\n\ngain insight from data, reproducibly and collaboratively, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control) and collaboratively, using modern programming tools and techniques"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#reproducibility-checklist",
    "href": "slides/01-meet-the-toolkit.html#reproducibility-checklist",
    "title": "Meet the Toolkit",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nHow do we make sure a data analysis is “reproducible”?\n\n. . .\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\n. . .\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#toolkit-for-reproducibility",
    "href": "slides/01-meet-the-toolkit.html#toolkit-for-reproducibility",
    "title": "Meet the Toolkit",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n- Scriptability \\(\\rightarrow\\) R\n- Literate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\n- Version control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#an-analogy-to-english",
    "href": "slides/01-meet-the-toolkit.html#an-analogy-to-english",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#an-analogy-to-english-1",
    "href": "slides/01-meet-the-toolkit.html#an-analogy-to-english-1",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#an-analogy-to-english-2",
    "href": "slides/01-meet-the-toolkit.html#an-analogy-to-english-2",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#an-analogy-to-english-3",
    "href": "slides/01-meet-the-toolkit.html#an-analogy-to-english-3",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#an-analogy-to-english-4",
    "href": "slides/01-meet-the-toolkit.html#an-analogy-to-english-4",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#what-are-r-and-rstudio",
    "href": "slides/01-meet-the-toolkit.html#what-are-r-and-rstudio",
    "title": "Meet the Toolkit",
    "section": "What are R and RStudio?",
    "text": "What are R and RStudio?\n\n\n\n\n\n\n\nR is an open-source statistical programming language\n\nR is also an environment for statistical computing and graphics\n\nPackages make R easily extensible\n\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\n\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-vs.-rstudio-another-analogy",
    "href": "slides/01-meet-the-toolkit.html#r-vs.-rstudio-another-analogy",
    "title": "Meet the Toolkit",
    "section": "R vs. RStudio: Another Analogy",
    "text": "R vs. RStudio: Another Analogy\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-r-rstudio",
    "href": "slides/01-meet-the-toolkit.html#tour-r-rstudio",
    "title": "Meet the Toolkit",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to your container and launch RStudio."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-r-rstudio",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-r-rstudio",
    "title": "Meet the Toolkit",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/01-meet-the-toolkit.html#a-short-list-for-now-of-r-essentials",
    "title": "Meet the Toolkit",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-essentials-continued",
    "href": "slides/01-meet-the-toolkit.html#r-essentials-continued",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\nData frames: like the spreadsheets of R\n\nEach row of a data frame is an observation\n\nEach column of a data frame is a variable"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-essentials-continued-1",
    "href": "slides/01-meet-the-toolkit.html#r-essentials-continued-1",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nUse the question mark ? to get help with objects (like data frames and functions):\n\n\n?function_name\n\n\nUse the dollar sign $ to access columns\n\n\ndataframe$column\n\n\n\n\n\n\n\nNote\n\n\n\nGenerally, you need to use the $ to tell R where to find that column."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-essentials-continued-2",
    "href": "slides/01-meet-the-toolkit.html#r-essentials-continued-2",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nUse the arrow &lt;- or equals sign = to save objects\n\n\nx = some_thing\ny &lt;- some_other_thing\n\n\n\n\n\n\n\nNote\n\n\n\nCheck your environment pane for the saved object!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-essentials-continued-3",
    "href": "slides/01-meet-the-toolkit.html#r-essentials-continued-3",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nLook out for warning and error messages!!!\n\n\n\nThese are essential for figuring out where your code is going wrong.\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you have trouble understanding what a message is saying, there is a high chance someone has explained the message online."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-packages",
    "href": "slides/01-meet-the-toolkit.html#r-packages",
    "title": "Meet the Toolkit",
    "section": "R packages",
    "text": "R packages\n\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of 27 August 2024, there are 21,168 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n\n1 Wickham and Bryan, R Packages.\n2CRAN contributed packages."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tidyverse",
    "href": "slides/01-meet-the-toolkit.html#tidyverse",
    "title": "Meet the Toolkit",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is a collection of R packages designed for data science\n\n\n\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#what-is-quarto",
    "href": "slides/01-meet-the-toolkit.html#what-is-quarto",
    "title": "Meet the Toolkit",
    "section": "What is Quarto?",
    "text": "What is Quarto?\n\n\nFully reproducible reports – each time you render the analysis is ran from the beginning\nCode goes in chunks; narrative (normal text) goes outside of chunks\nA visual editor for a familiar / Google docs-like editing experience"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-quarto",
    "href": "slides/01-meet-the-toolkit.html#tour-quarto",
    "title": "Meet the Toolkit",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to RStudio and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-quarto",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-quarto",
    "title": "Meet the Toolkit",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-quarto",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-quarto",
    "title": "Meet the Toolkit",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou’ll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#what-are-git-and-github",
    "href": "slides/01-meet-the-toolkit.html#what-are-git-and-github",
    "title": "Meet the Toolkit",
    "section": "What are Git and GitHub?",
    "text": "What are Git and GitHub?\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#versioning---done-badly",
    "href": "slides/01-meet-the-toolkit.html#versioning---done-badly",
    "title": "Meet the Toolkit",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#versioning---done-better",
    "href": "slides/01-meet-the-toolkit.html#versioning---done-better",
    "title": "Meet the Toolkit",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#versioning---done-even-better",
    "href": "slides/01-meet-the-toolkit.html#versioning---done-even-better",
    "title": "Meet the Toolkit",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\n\nwith human readable messages"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-1",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-1",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-2",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-2",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-3",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-git-and-github-3",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#git-and-github-tips",
    "href": "slides/01-meet-the-toolkit.html#git-and-github-tips",
    "title": "Meet the Toolkit",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are so many and very few people know them all. 99% of the time you will use git to commit, push, and pull:\n\ncommit: tell git to keep track of what changes you’ve made - use a message!!\npush: add the changes to the repository (folder)\npull: get changes from the repository (folder)\n\n\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-git-github",
    "href": "slides/01-meet-the-toolkit.html#tour-git-github",
    "title": "Meet the Toolkit",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to the course GitHub organization and clone ae-your_github_name repo to your container."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-git-github",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-git-github",
    "title": "Meet the Toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\n\nFind your application repo, that will always be named using the naming convention assignment_title-your_github_name\nClick on the green “Code” button, make sure SSH is selected, copy the repo URL"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-git-github-1",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-git-github-1",
    "title": "Meet the Toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\nOnce we made changes to our Quarto document, we\n\nwent to the Git pane in RStudio\nstaged our changes by clicking the checkboxes next to the relevant files\ncommitted our changes with an informative commit message\npushed our changes to our application exercise repos\nconfirmed on GitHub that we could see our changes pushed from RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#lets-practice-ae01",
    "href": "slides/01-meet-the-toolkit.html#lets-practice-ae01",
    "title": "Meet the Toolkit",
    "section": "Let’s Practice: AE01",
    "text": "Let’s Practice: AE01"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#reminders",
    "href": "slides/01-meet-the-toolkit-slides.html#reminders",
    "title": "Meet the Toolkit",
    "section": "Reminders",
    "text": "Reminders\n\nIf you have not yet finished the Getting to Know You survey, please do so ASAP!\nMake your appointments in the Testing Center now!\nAny questions about the syllabus??"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#course-toolkit",
    "href": "slides/01-meet-the-toolkit-slides.html#course-toolkit",
    "title": "Meet the Toolkit",
    "section": "Course toolkit",
    "text": "Course toolkit\n\n\nCourse operation\n\nMaterials: sta199-f24.github.io\n\nSubmission: Gradescope\nDiscussion: Ed Discussion\nGradebook: Canvas\n\n\n\nDoing data science\n\nComputing:\n\nR\n\nRStudio\n\ntidyverse\n\nQuarto\n\n\n\nVersion control and collaboration:\n\nGit\n\nGitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#learning-goals",
    "href": "slides/01-meet-the-toolkit-slides.html#learning-goals",
    "title": "Meet the Toolkit",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\n\ngain insight from data, reproducibly, using modern programming tools and techniques\n\ngain insight from data, reproducibly and collaboratively, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control) and collaboratively, using modern programming tools and techniques"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#reproducibility-checklist",
    "href": "slides/01-meet-the-toolkit-slides.html#reproducibility-checklist",
    "title": "Meet the Toolkit",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nHow do we make sure a data analysis is “reproducible”?\n\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\n\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#toolkit-for-reproducibility",
    "href": "slides/01-meet-the-toolkit-slides.html#toolkit-for-reproducibility",
    "title": "Meet the Toolkit",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n- Scriptability \\(\\rightarrow\\) R\n- Literate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\n- Version control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english",
    "href": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-1",
    "href": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-1",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-2",
    "href": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-2",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-3",
    "href": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-3",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-4",
    "href": "slides/01-meet-the-toolkit-slides.html#an-analogy-to-english-4",
    "title": "Meet the Toolkit",
    "section": "An Analogy to English",
    "text": "An Analogy to English"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#what-are-r-and-rstudio",
    "href": "slides/01-meet-the-toolkit-slides.html#what-are-r-and-rstudio",
    "title": "Meet the Toolkit",
    "section": "What are R and RStudio?",
    "text": "What are R and RStudio?\n\n\n\n\n\n\n\nR is an open-source statistical programming language\n\nR is also an environment for statistical computing and graphics\n\nPackages make R easily extensible\n\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\n\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-vs.-rstudio-another-analogy",
    "href": "slides/01-meet-the-toolkit-slides.html#r-vs.-rstudio-another-analogy",
    "title": "Meet the Toolkit",
    "section": "R vs. RStudio: Another Analogy",
    "text": "R vs. RStudio: Another Analogy\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-r-rstudio",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-r-rstudio",
    "title": "Meet the Toolkit",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to your container and launch RStudio."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-r-rstudio",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-r-rstudio",
    "title": "Meet the Toolkit",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/01-meet-the-toolkit-slides.html#a-short-list-for-now-of-r-essentials",
    "title": "Meet the Toolkit",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued",
    "href": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\nData frames: like the spreadsheets of R\n\nEach row of a data frame is an observation\n\nEach column of a data frame is a variable"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued-1",
    "href": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued-1",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nUse the question mark ? to get help with objects (like data frames and functions):\n\n\n?function_name\n\n\nUse the dollar sign $ to access columns\n\n\ndataframe$column\n\n\n\n\n\n\n\nNote\n\n\nGenerally, you need to use the $ to tell R where to find that column."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued-2",
    "href": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued-2",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nUse the arrow &lt;- or equals sign = to save objects\n\n\nx = some_thing\ny &lt;- some_other_thing\n\n\n\n\n\n\n\nNote\n\n\nCheck your environment pane for the saved object!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued-3",
    "href": "slides/01-meet-the-toolkit-slides.html#r-essentials-continued-3",
    "title": "Meet the Toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nLook out for warning and error messages!!!\n\n\n\nThese are essential for figuring out where your code is going wrong.\n\n\n\n\n\n\n\n\nNote\n\n\nIf you have trouble understanding what a message is saying, there is a high chance someone has explained the message online."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#r-packages",
    "href": "slides/01-meet-the-toolkit-slides.html#r-packages",
    "title": "Meet the Toolkit",
    "section": "R packages",
    "text": "R packages\n\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of 27 August 2024, there are 21,168 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n\n1 Wickham and Bryan, R Packages.\n2CRAN contributed packages."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tidyverse",
    "href": "slides/01-meet-the-toolkit-slides.html#tidyverse",
    "title": "Meet the Toolkit",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is a collection of R packages designed for data science\n\n\n\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#what-is-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#what-is-quarto",
    "title": "Meet the Toolkit",
    "section": "What is Quarto?",
    "text": "What is Quarto?\n\n\nFully reproducible reports – each time you render the analysis is ran from the beginning\nCode goes in chunks; narrative (normal text) goes outside of chunks\nA visual editor for a familiar / Google docs-like editing experience"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-quarto",
    "title": "Meet the Toolkit",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to RStudio and open the document ae-01-meet-the-penguins.qmd."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-quarto",
    "title": "Meet the Toolkit",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-quarto",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-quarto",
    "title": "Meet the Toolkit",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou’ll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#what-are-git-and-github",
    "href": "slides/01-meet-the-toolkit-slides.html#what-are-git-and-github",
    "title": "Meet the Toolkit",
    "section": "What are Git and GitHub?",
    "text": "What are Git and GitHub?\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#versioning---done-badly",
    "href": "slides/01-meet-the-toolkit-slides.html#versioning---done-badly",
    "title": "Meet the Toolkit",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#versioning---done-better",
    "href": "slides/01-meet-the-toolkit-slides.html#versioning---done-better",
    "title": "Meet the Toolkit",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#versioning---done-even-better",
    "href": "slides/01-meet-the-toolkit-slides.html#versioning---done-even-better",
    "title": "Meet the Toolkit",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\n\nwith human readable messages"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-1",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-1",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-2",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-2",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-3",
    "href": "slides/01-meet-the-toolkit-slides.html#how-will-we-use-git-and-github-3",
    "title": "Meet the Toolkit",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#git-and-github-tips",
    "href": "slides/01-meet-the-toolkit-slides.html#git-and-github-tips",
    "title": "Meet the Toolkit",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are so many and very few people know them all. 99% of the time you will use git to commit, push, and pull:\n\ncommit: tell git to keep track of what changes you’ve made - use a message!!\npush: add the changes to the repository (folder)\npull: get changes from the repository (folder)\n\n\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-git-github",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-git-github",
    "title": "Meet the Toolkit",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nGo to the course GitHub organization and clone ae-your_github_name repo to your container."
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github",
    "title": "Meet the Toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\n\nFind your application repo, that will always be named using the naming convention assignment_title-your_github_name\nClick on the green “Code” button, make sure SSH is selected, copy the repo URL"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github-1",
    "href": "slides/01-meet-the-toolkit-slides.html#tour-recap-git-github-1",
    "title": "Meet the Toolkit",
    "section": "Tour recap: Git + GitHub",
    "text": "Tour recap: Git + GitHub\nOnce we made changes to our Quarto document, we\n\nwent to the Git pane in RStudio\nstaged our changes by clicking the checkboxes next to the relevant files\ncommitted our changes with an informative commit message\npushed our changes to our application exercise repos\nconfirmed on GitHub that we could see our changes pushed from RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit-slides.html#lets-practice-ae01",
    "href": "slides/01-meet-the-toolkit-slides.html#lets-practice-ae01",
    "title": "Meet the Toolkit",
    "section": "Let’s Practice: AE01",
    "text": "Let’s Practice: AE01"
  },
  {
    "objectID": "coding-principles-oh.html",
    "href": "coding-principles-oh.html",
    "title": "Intro to Coding Principles",
    "section": "",
    "text": "library(tidyverse)",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#definition",
    "href": "coding-principles-oh.html#definition",
    "title": "Intro to Coding Principles",
    "section": "Definition",
    "text": "Definition\nSo what even is a variable, in the first place? There are many possible definitions:\n\nAnything you assign!\nPractically speaking, variables are a way for you to store data without having to type it out every time.\nThey allow you to manipulate data with the help of pre-built functions (more on that later).\nThey can also be changed - hence the name “variable”.\n\nWhat are some examples of variables?\n\nThe simplest is a single value - like in math. I could say “x = 10”.\nIt might also be a vector - essentially a list of values. For example, I might just store every name in this class in a vector.\nMost frequently, your variables will be your entire data frames.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#assignment-saving",
    "href": "coding-principles-oh.html#assignment-saving",
    "title": "Intro to Coding Principles",
    "section": "Assignment & Saving",
    "text": "Assignment & Saving\nOk, these seem pretty useful - so how do we use them? In math and most programming languages, you use the “=” operator. This is also possible to do in R:\n\nx = 10\nx\n\n[1] 10\n\n\nHowever, in R, we prefer to use the “&lt;-” operator, to avoid confusion between variable assignment and function arguments. Here’s how that looks:\n\ny &lt;- 15\ny\n\n[1] 15\n\n\nSaving Changes\nSuppose you run a function on a variable. By default, R will show you the output of this function, but it will not actually modify your variable. For example, let’s look at the midwest data set:\n\nmidwest\n\n# A tibble: 437 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 427 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow, let’s run a function that “changes” the data frame. We can use select() to look only at the county column:\n\nmidwest |&gt;\n  select(county)\n\n# A tibble: 437 × 1\n   county   \n   &lt;chr&gt;    \n 1 ADAMS    \n 2 ALEXANDER\n 3 BOND     \n 4 BOONE    \n 5 BROWN    \n 6 BUREAU   \n 7 CALHOUN  \n 8 CARROLL  \n 9 CASS     \n10 CHAMPAIGN\n# ℹ 427 more rows\n\n\nCool change! So, just to make sure, let’s look at the midwest data frame one more time.\n\nmidwest\n\n# A tibble: 437 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 427 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow wait a minute - what happened here? I clearly told it to select the county column, and it did! So why is it that, when I went to look at the midwest data frame again, it had all of the columns, not just the one that I selected?\nThe answer is that we never saved midwest back to a variable! By default, R will show the output, but not modify the data frame unless I want it to. Let’s look at a couple ways we can do that:\n\nmidwest &lt;- midwest |&gt;\n  select(county)\n\nmidwest\n\n# A tibble: 437 × 1\n   county   \n   &lt;chr&gt;    \n 1 ADAMS    \n 2 ALEXANDER\n 3 BOND     \n 4 BOONE    \n 5 BROWN    \n 6 BUREAU   \n 7 CALHOUN  \n 8 CARROLL  \n 9 CASS     \n10 CHAMPAIGN\n# ℹ 427 more rows\n\n\nThe first option is to simply overwrite the variable. This is useful if you’re never going to need those data in their original form - it saves you some confusion in that case.\nHowever, what if later on I decide I did need those data after all? Perhaps I wanted population density data. I go to try and find this variable in the midwest data set, because that’s where I know it’s stored…\n\nmidwest |&gt;\n  select(popdensity)\n\nError in `select()`:\n! Can't select columns that don't exist.\n✖ Column `popdensity` doesn't exist.\n\n\n…but the variable is gone! This is a common point of confusion for students in STA 199, so it’s important to understand what you’re doing whenever you modify your data in-place like this - you’re overwriting the existing data.\nWe have a couple of options here. If we were loading these data from a .csv file, we could go back to the top of the document. Or, we could do something more effective: Go to Environment, click the little broom icon, and select “yes”.\n\nmidwest\n\n# A tibble: 437 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 427 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow the second option: let’s try making the modification a little more carefully: saving the data to a new variable.\n\nmidwest_counties &lt;- midwest |&gt;\n  select(county)\n\nmidwest_counties\n\n# A tibble: 437 × 1\n   county   \n   &lt;chr&gt;    \n 1 ADAMS    \n 2 ALEXANDER\n 3 BOND     \n 4 BOONE    \n 5 BROWN    \n 6 BUREAU   \n 7 CALHOUN  \n 8 CARROLL  \n 9 CASS     \n10 CHAMPAIGN\n# ℹ 427 more rows\n\nmidwest\n\n# A tibble: 437 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 427 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow we have two data frames: the new data frame midwest_counties, which contains our modifications from the data pipeline above, and the original data frame midwest, which has not been changed. Both of these are useful operations, and you will undoubtedly use both this semester! However, keep this distinction in mind when you’re mutating your data - don’t remove anything you think you’ll need later.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#variable-examples",
    "href": "coding-principles-oh.html#variable-examples",
    "title": "Intro to Coding Principles",
    "section": "Variable Examples",
    "text": "Variable Examples\n\nx &lt;- 10\nx\n\n[1] 10\n\ny &lt;- c(3, 5)\ny\n\n[1] 3 5\n\nz &lt;- midwest\nz\n\n# A tibble: 437 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 427 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#examples",
    "href": "coding-principles-oh.html#examples",
    "title": "Intro to Coding Principles",
    "section": "Examples",
    "text": "Examples\nEvery column in a data frame will have a particular data type - sort of a way that R recognizes, classifies, and interacts with the data. Let’s look at an example, using the convenient glimpse function:\n\nglimpse(midwest)\n\nRows: 437\nColumns: 28\n$ PID                  &lt;int&gt; 561, 562, 563, 564, 565, 566, 567, 568, 569, 570,…\n$ county               &lt;chr&gt; \"ADAMS\", \"ALEXANDER\", \"BOND\", \"BOONE\", \"BROWN\", \"…\n$ state                &lt;chr&gt; \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"IL\", \"…\n$ area                 &lt;dbl&gt; 0.052, 0.014, 0.022, 0.017, 0.018, 0.050, 0.017, …\n$ poptotal             &lt;int&gt; 66090, 10626, 14991, 30806, 5836, 35688, 5322, 16…\n$ popdensity           &lt;dbl&gt; 1270.9615, 759.0000, 681.4091, 1812.1176, 324.222…\n$ popwhite             &lt;int&gt; 63917, 7054, 14477, 29344, 5264, 35157, 5298, 165…\n$ popblack             &lt;int&gt; 1702, 3496, 429, 127, 547, 50, 1, 111, 16, 16559,…\n$ popamerindian        &lt;int&gt; 98, 19, 35, 46, 14, 65, 8, 30, 8, 331, 51, 26, 17…\n$ popasian             &lt;int&gt; 249, 48, 16, 150, 5, 195, 15, 61, 23, 8033, 89, 3…\n$ popother             &lt;int&gt; 124, 9, 34, 1139, 6, 221, 0, 84, 6, 1596, 20, 7, …\n$ percwhite            &lt;dbl&gt; 96.71206, 66.38434, 96.57128, 95.25417, 90.19877,…\n$ percblack            &lt;dbl&gt; 2.57527614, 32.90043290, 2.86171703, 0.41225735, …\n$ percamerindan        &lt;dbl&gt; 0.14828264, 0.17880670, 0.23347342, 0.14932156, 0…\n$ percasian            &lt;dbl&gt; 0.37675897, 0.45172219, 0.10673071, 0.48691813, 0…\n$ percother            &lt;dbl&gt; 0.18762294, 0.08469791, 0.22680275, 3.69733169, 0…\n$ popadults            &lt;int&gt; 43298, 6724, 9669, 19272, 3979, 23444, 3583, 1132…\n$ perchsd              &lt;dbl&gt; 75.10740, 59.72635, 69.33499, 75.47219, 68.86152,…\n$ percollege           &lt;dbl&gt; 19.63139, 11.24331, 17.03382, 17.27895, 14.47600,…\n$ percprof             &lt;dbl&gt; 4.355859, 2.870315, 4.488572, 4.197800, 3.367680,…\n$ poppovertyknown      &lt;int&gt; 63628, 10529, 14235, 30337, 4815, 35107, 5241, 16…\n$ percpovertyknown     &lt;dbl&gt; 96.27478, 99.08714, 94.95697, 98.47757, 82.50514,…\n$ percbelowpoverty     &lt;dbl&gt; 13.151443, 32.244278, 12.068844, 7.209019, 13.520…\n$ percchildbelowpovert &lt;dbl&gt; 18.011717, 45.826514, 14.036061, 11.179536, 13.02…\n$ percadultpoverty     &lt;dbl&gt; 11.009776, 27.385647, 10.852090, 5.536013, 11.143…\n$ percelderlypoverty   &lt;dbl&gt; 12.443812, 25.228976, 12.697410, 6.217047, 19.200…\n$ inmetro              &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0…\n$ category             &lt;chr&gt; \"AAR\", \"LHR\", \"AAR\", \"ALU\", \"AAR\", \"AAR\", \"LAR\", …\n\n\nNext to the data, we can see various designations - &lt;int&gt;, &lt;dbl&gt;, &lt;chr&gt;, etc. These are data types. But what exactly is the difference?\nDouble/Numeric\nThe dbl data type, which is the default implementation of the numeric class, stands for double - meaning “double-precision floating-point format”. It’s pretty clear that double is an easier word to remember! This allows you to store numbers with a lot of decimal points (but not infinite!). For example, let’s look at \\(\\pi\\), which is built in as pi in R:\n\npi\n\n[1] 3.141593\n\nclass(pi)\n\n[1] \"numeric\"\n\n\nHere, we use the class() function to determine what data type R is using to store our variables. In this case, we can see that R stores pi as a default numeric variable, which is implemented as a double. In general, whenever you work with numbers, they will be doubles, and for purposes of STA 199 there is no issue with this.\nInteger\nThe int data type means integer - as in, the mathematical concept of an integer. All data represented as integers will be whole numbers. This data type is not capable of storing decimal places, so if you try to do decimal operations with it, R will implicitly cast it to another data type. Implicitly means that it does this without us telling it to. Let’s take a look at a couple of examples:\n\na &lt;- 3\nclass(a)\n\n[1] \"numeric\"\n\n\nBy default, R will treat all numbers as the numeric class. If you want to explicitly tell R that your number is an integer, follow the number with “L”:\n\na &lt;- 3L\nclass(a)\n\n[1] \"integer\"\n\n\nNow, let’s say we want to divide this number by 2:\n\nb &lt;- a / 2\nclass(b)\n\n[1] \"numeric\"\n\n\nSince 3 is not divisible by 2, the output is a decimal. However, since we have performed a decimal operation, rather than trying to guess whether to round up or down, R simply implicitly casts it back to numeric.\nLogical/Boolean\nWhile there isn’t an example in this data frame, there is a data type called logical - which represents true/false.\n\nc &lt;- TRUE\nclass(c)\n\n[1] \"logical\"\n\n\nIn R, you need to type out TRUE/FALSE in all caps for it to be recognized. Under the hood, R stores these values as “FALSE = 0” and “TRUE = 1”, which means that if you want to find the percentage of TRUE in your data, you can just take the average:\n\nd &lt;- c(TRUE, FALSE, TRUE)\nmean(d)\n\n[1] 0.6666667\n\n\nCharacter/String\nThe chr data type represents all characters and strings in R. Unlike some languages, R does not differentiate between these. In general, strings are used to represent words and categorical data, for example:\n\nplace &lt;- \"Durham, NC\"\nclass(place)\n\n[1] \"character\"\n\n\nHowever, there is an important point of caution here. Sometimes, when you load in a data frame, there will be columns that should be represented as numbers, but are accidentally represented as strings. If you’re not careful, this can have consequences. For example, consider the following:\n\n0 == 00\n\n[1] TRUE\n\n\"0\" == \"00\"\n\n[1] FALSE\n\n\nIn R, the numbers 0 and 00 represent the same thing! However, when they are strings, they do not. R treats numbers differently than it does strings, so it’s important to pay attention to which one you are actually implementing. You might also run into issues with some of your operations - for example, if you try to take the average of a column of strings, R has no idea what to do and will throw an error.\nNote: pay attention to the usage of two equal signs here, rather than just one. Why did we do this? (More on this shortly.)",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#casting",
    "href": "coding-principles-oh.html#casting",
    "title": "Intro to Coding Principles",
    "section": "Casting",
    "text": "Casting\nSo what is the solution to this problem? The answer is called casting, which means changing the data type. You do this using the as.character(), as.numeric(), and as.logical() commands. Let’s look at an example:\n\ne &lt;- \"00\"\nclass(e)\n\n[1] \"character\"\n\ne\n\n[1] \"00\"\n\ne &lt;- as.numeric(e)\nclass(e)\n\n[1] \"numeric\"\n\ne\n\n[1] 0\n\ne &lt;- as.logical(e)\nclass(e)\n\n[1] \"logical\"\n\ne\n\n[1] FALSE\n\ne &lt;- as.character(e)\nclass(e)\n\n[1] \"character\"\n\ne\n\n[1] \"FALSE\"\n\ne &lt;- as.numeric(e) # What happened?\n\nWarning: NAs introduced by coercion\n\ne\n\n[1] NA\n\n\nBe mindful with your casting - you can lose information along the way!\nNote: NA is a specific type in R. It essentially means “nothing” or “this value has not been declared”. You cannot use == to check whether a value is NA. Instead, you must use is.na().",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#equals",
    "href": "coding-principles-oh.html#equals",
    "title": "Intro to Coding Principles",
    "section": "Equals",
    "text": "Equals\nThe first Boolean operator is “equals”. This is a place where it is easy to get confused. We use the single equals sign, =, to denote assignment - essentially, telling R “this thing takes this value.” We use the double equals sign, ==, to denote comparison - essentially, asking R “are these two values equal?” It is important to keep these two things distinct - if you want to check equality, or filter for a specific value, you always need to use the double equals sign!\n\nmidwest |&gt;\n  filter(county = \"Cook\")\n\nError in `filter()`:\n! We detected a named input.\nℹ This usually means that you've used `=` instead of `==`.\nℹ Did you mean `county == \"Cook\"`?\n\n\nHere’s an example of where a single equals sign is incorrect, and R returns an error. Fortunately, it has a very helpful suggestion in the error message! Let’s replace that with the double equals:\n\nmidwest |&gt;\n  filter(county == \"Cook\")\n\n# A tibble: 0 × 28\n# ℹ 28 variables: PID &lt;int&gt;, county &lt;chr&gt;, state &lt;chr&gt;, area &lt;dbl&gt;,\n#   poptotal &lt;int&gt;, popdensity &lt;dbl&gt;, popwhite &lt;int&gt;, popblack &lt;int&gt;,\n#   popamerindian &lt;int&gt;, popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;, …\n\n\nNow there’s no error message, but we also didn’t return any values. Why did this happen? When I use ==, I am checking whether these two strings are exactly equivalent, and that includes being case sensitive. If I view the data in the data frame, I see that all of the county names are actually in all caps. I can fix the string in my example…\n\nmidwest |&gt;\n  filter(county == \"COOK\")\n\n# A tibble: 1 × 28\n    PID county state  area poptotal popdensity popwhite popblack popamerindian\n  &lt;int&gt; &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n1   576 COOK   IL    0.058  5105067     88018.  3204947  1317147         10289\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\n…and finally find Chicago!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#and",
    "href": "coding-principles-oh.html#and",
    "title": "Intro to Coding Principles",
    "section": "And",
    "text": "And\nThe second Boolean operator is “and”. We use this when we want multiple conditions to be true. In R, to denote and, we use the single ampersand & (in some other languages, you use a double ampersand). When R sees this, it checks both statements, and only returns TRUE if both statements are true. Let’s look at an example, again using filter():\n\nmidwest |&gt;\n  filter(state == \"IL\")\n\n# A tibble: 102 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   561 ADAMS   IL    0.052    66090      1271.    63917     1702            98\n 2   562 ALEXAN… IL    0.014    10626       759      7054     3496            19\n 3   563 BOND    IL    0.022    14991       681.    14477      429            35\n 4   564 BOONE   IL    0.017    30806      1812.    29344      127            46\n 5   565 BROWN   IL    0.018     5836       324.     5264      547            14\n 6   566 BUREAU  IL    0.05     35688       714.    35157       50            65\n 7   567 CALHOUN IL    0.017     5322       313.     5298        1             8\n 8   568 CARROLL IL    0.027    16805       622.    16519      111            30\n 9   569 CASS    IL    0.024    13437       560.    13384       16             8\n10   570 CHAMPA… IL    0.058   173025      2983.   146506    16559           331\n# ℹ 92 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nUsing our == operator, we can find all of the counties in Illinois. Now, let’s find only the ones with a population density over 30,000:\n\nmidwest |&gt;\n  filter(state == \"IL\" & popdensity &gt;= 30000)\n\n# A tibble: 2 × 28\n    PID county  state  area poptotal popdensity popwhite popblack popamerindian\n  &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n1   576 COOK    IL    0.058  5105067     88018.  3204947  1317147         10289\n2   582 DU PAGE IL    0.02    781666     39083.   714905    15462           962\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow, the filter() statement is returning all of the rows from this data frame where BOTH the state is “IL” AND the population density is \\(\\geq\\) 30,000.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#or",
    "href": "coding-principles-oh.html#or",
    "title": "Intro to Coding Principles",
    "section": "Or",
    "text": "Or\nThe third Boolean operator is “or”. We use this when we want at least one condition to be true. In R, to denote or, we use the vertical line | (again, in some other languages, you use a double line). When R sees this, it checks both statements, and returns TRUE if either (or both) of the statements are true. Let’s go back to our example:\n\nmidwest |&gt;\n  filter(state == \"IL\" | popdensity &gt;= 30000) |&gt;\n  arrange(desc(popdensity))\n\n# A tibble: 107 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1   576 COOK    IL    0.058  5105067     88018.  3204947  1317147         10289\n 2  3021 MILWAU… WI    0.015   959275     63952.   718918   195470          6994\n 3  1278 WAYNE   MI    0.035  2111687     60334.  1212007   849109          8048\n 4  2026 CUYAHO… OH    0.026  1412140     54313.  1025756   350185          2533\n 5   582 DU PAGE IL    0.02    781666     39083.   714905    15462           962\n 6   711 MARION  IN    0.023   797159     34659.   615039   169654          1698\n 7  2039 HAMILT… OH    0.025   866228     34649.   672972   181145          1204\n 8   609 LAKE    IL    0.028   516418     18444.   450666    34771          1198\n 9   605 KANE    IL    0.029   317471     10947.   269675    19006           620\n10   661 Winneb… IL    0.03    252913      8430.   222439    23256           651\n# ℹ 97 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nNow, R returns all of the rows that are in Illinois, as well as all of the rows that are not in Illinois, but have a population density of at least 30,000.\nNote: Keep in mind that | is not exclusive. That means that | will return true if only one condition is true, but it will also return true if both conditions are true. If you want exactly one condition to be true, look up the operator XOR.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#not",
    "href": "coding-principles-oh.html#not",
    "title": "Intro to Coding Principles",
    "section": "Not",
    "text": "Not\nThe fourth Boolean operator is “not”. We use this when we want to exclude certain values from the data or prevent something from happening. In R, to denote not, we use the exclamation mark !. Specifically, you place the !, also known as a bang sign, in front of the statement that you want to be false. The most frequent use of this is to say “not equals”, which is denoted != (note that it is only one equals sign now, not two!) Let’s look at an example:\n\nmidwest |&gt;\n  filter(state != \"IL\") |&gt;\n  arrange(desc(popdensity))\n\n# A tibble: 335 × 28\n     PID county  state  area poptotal popdensity popwhite popblack popamerindian\n   &lt;int&gt; &lt;chr&gt;   &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;\n 1  3021 MILWAU… WI    0.015   959275     63952.   718918   195470          6994\n 2  1278 WAYNE   MI    0.035  2111687     60334.  1212007   849109          8048\n 3  2026 CUYAHO… OH    0.026  1412140     54313.  1025756   350185          2533\n 4   711 MARION  IN    0.023   797159     34659.   615039   169654          1698\n 5  2039 HAMILT… OH    0.025   866228     34649.   672972   181145          1204\n 6  2033 FRANKL… OH    0.034   961437     28278.   783714   152840          2056\n 7  1246 MACOMB  MI    0.028   717400     25621.   693686    10400          2639\n 8  2056 LUCAS   OH    0.021   462361     22017.   380155    68456          1164\n 9  2085 SUMMIT  OH    0.024   514990     21458.   446902    61185          1065\n10  2065 MONTGO… OH    0.027   573809     21252.   463551   101817          1065\n# ℹ 325 more rows\n# ℹ 19 more variables: popasian &lt;int&gt;, popother &lt;int&gt;, percwhite &lt;dbl&gt;,\n#   percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;,\n#   popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;,\n#   percchildbelowpovert &lt;dbl&gt;, percadultpoverty &lt;dbl&gt;,\n#   percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\nIn these data, all rows from Illinois have been removed. You can check this by commenting out the filter line, and observing the difference, or just noting that Cook County, IL (home of Chicago, the densest city in the midwest) is absent!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#combining-boolean-operators",
    "href": "coding-principles-oh.html#combining-boolean-operators",
    "title": "Intro to Coding Principles",
    "section": "Combining Boolean Operators",
    "text": "Combining Boolean Operators\nYou can also combine multiple Boolean operators in more complex logical statements. We will not look at any examples here, because they can get very confusing, very quickly (and are generally unnecessary for this course). However, if you do want to combine Boolean operators, here are some things to keep in mind:\n\nParentheses: Just like in math, any statements that you put in parentheses will execute first. If I say “A and B or C”, it’s unclear exactly what I mean. If I would accept either (A and B) or (A and C), I would write A & (B | C), meaning I need at least one of B or C to be true. If I would accept either (A and B) or C, I would write (A & B) | C, meaning I need either (A and B) or C to be true.\nOrder of operations: Pay attention to the order in which your statements evaluate! If I write !(A & B), that means I need at least one of A or B to be false. If I write !A & !B, that means I need both A and B to be false. This can get confusing, so it’s best to write out your logic fully and work through a few examples by hand (or avoid layering these operators entirely).",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#definition-1",
    "href": "coding-principles-oh.html#definition-1",
    "title": "Intro to Coding Principles",
    "section": "Definition",
    "text": "Definition\nWhat is a function? A function is, essentially, a block of code that does something (so that you don’t have to implement it!). A function will always have a name, followed by open and closed parentheses (). Some functions do not take arguments. However, if they do, these arguments will go within the parentheses. Once R sees an opening parenthesis, it will not execute the code until it sees a closing parenthesis. Beware - when you start layering functions, such as using aes() inside of ggplot(), you need to pay attention to what your parentheses are around and make sure that they all close!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#arguments",
    "href": "coding-principles-oh.html#arguments",
    "title": "Intro to Coding Principles",
    "section": "Arguments",
    "text": "Arguments\nArguments are the commands that you give to a function that tell it what to do. Most functions take at least one argument, and some can take arbitrarily many. Functions have a default order for (some of) their arguments. If you know this order, you do not have to explicitly name the arguments. If not, you must list them explicitly. Here are two examples:\n\n# Named Arguments\nggplot(\n  data = midwest, \n  mapping = aes(x = poptotal, y = popdensity, color = percwhite)\n  ) +\n  geom_point()\n\n\n\n\n\n\n# Unnamed Arguments\nggplot(\n  midwest, \n  aes(poptotal, popdensity, percwhite)\n  ) +\n  geom_point()\n\n\n\n\n\n\n\nIn ggplot, the first two arguments are always data and mapping, so it is common to drop these. However, in the second plot here, we lost our fill aesthetic. Why?\nWhen we look at the aes() documentation, we see that x is the first named argument and y is the second, but after that there are no named arguments. That means, while you can add more aesthetics, you must name them explicitly, since they do not appear by default.\nPipe Operator\nMany times in this class, you will see the symbol |&gt; used. This is known as the pipe operator, and it allows us to have a so-called “data pipeline”. This helps make code a lot more readable! Let’s take a look at why:\n\nhead(arrange(mutate(select(filter(midwest, state == \"IL\"), county, state, area, poptotal, inmetro), inmetro = as.logical(inmetro)), desc(poptotal)), 10)\n\n# A tibble: 10 × 5\n   county    state  area poptotal inmetro\n   &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt; &lt;lgl&gt;  \n 1 COOK      IL    0.058  5105067 TRUE   \n 2 DU PAGE   IL    0.02    781666 TRUE   \n 3 LAKE      IL    0.028   516418 TRUE   \n 4 WILL      IL    0.05    357313 TRUE   \n 5 KANE      IL    0.029   317471 TRUE   \n 6 ST CLAIR  IL    0.04    262852 TRUE   \n 7 Winnebago IL    0.03    252913 TRUE   \n 8 MADISON   IL    0.045   249238 TRUE   \n 9 MCHENRY   IL    0.036   183241 TRUE   \n10 PEORIA    IL    0.038   182827 TRUE   \n\n\nTechnically, we can write our code in this manner! Strictly speaking, under the hood, the pipe operator is reconstructing your code into this format. However, this is nearly impossible to read (I’ve been coding in R for years, and I still ran into multiple errors trying to write this).\nWith the pipe operator, we can skip this and execute each function on its own line. By default, the pipe operator “pipes” your data into the first argument of a function - which, in the tidyverse, is almost always the “data” argument. This lets us write our data in a much neater pipeline, where you can see step-by-step what is happening to the data:\n\nmidwest |&gt;   # Operate on the midwest data frame\n  filter(state == \"IL\") |&gt;   # Filter for only the counties in Illinois\n  select(county, state, area, poptotal, inmetro) |&gt;   # Select only these five columns, and drop all others\n  mutate(inmetro = as.logical(inmetro)) |&gt;   # Cast inmetro to a logical type\n  arrange(desc(poptotal)) |&gt;   # Arrange the data frame by poptotal in descending order\n  head(10)   # Select the top 10 rows\n\n# A tibble: 10 × 5\n   county    state  area poptotal inmetro\n   &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt; &lt;lgl&gt;  \n 1 COOK      IL    0.058  5105067 TRUE   \n 2 DU PAGE   IL    0.02    781666 TRUE   \n 3 LAKE      IL    0.028   516418 TRUE   \n 4 WILL      IL    0.05    357313 TRUE   \n 5 KANE      IL    0.029   317471 TRUE   \n 6 ST CLAIR  IL    0.04    262852 TRUE   \n 7 Winnebago IL    0.03    252913 TRUE   \n 8 MADISON   IL    0.045   249238 TRUE   \n 9 MCHENRY   IL    0.036   183241 TRUE   \n10 PEORIA    IL    0.038   182827 TRUE   \n\n\nMuch better, right? Remember, whenever you’re using the pipe operator (or the +, in ggplot, which is different!), you should start a new line of code. As long as you have a pipe operator, R is expecting another function, so it won’t execute only part of your code.\nNote: In this class, we focus on the base R pipe, which is denoted by |&gt;. However, when you’re debugging on the internet, you may come across the symbol %&gt;%, which is the magrittr pipe. There are some technical differences in these that generally go beyond the scope of this class, but they essentially serve the same purpose. Don’t be scared by the magrittr pipe when you’re doing your debugging!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#definition-2",
    "href": "coding-principles-oh.html#definition-2",
    "title": "Intro to Coding Principles",
    "section": "Definition",
    "text": "Definition\nEvery time we start programming in this class, we run library(tidyverse). Why do we do this?\nLibraries are collections of functions, and running them means that we are loading those functions into our current R session. If you try to open up a fresh R session and run ggplot() immediately, you will get an error, because that function is not found. However, with the library, you can load in everything that you need, all at once. The tidyverse is especially cool, because it is actually a collection of libraries - libraryception!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#environment",
    "href": "coding-principles-oh.html#environment",
    "title": "Intro to Coding Principles",
    "section": "Environment",
    "text": "Environment\nYour environment in R is basically the current instance of your program. When you run a library, it is part of your environment until you restart R, meaning you can call any of its functions at any time. When you create a variable, it is part of your environment until you restart R, meaning you can reference those variables at any time.\nWhen you use the containers, they do not regularly restart R. This can be a problem sometimes, when old code gets tangled up with new code! It is my personal recommendation that you (at a minimum) restart R and clear your environment every time you start a new project (AE, lab, etc). You can restart R by going to Session -&gt; Restart R, and clear your environment by going to the environment pane and clicking the broom icon.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#rendering-quarto",
    "href": "coding-principles-oh.html#rendering-quarto",
    "title": "Intro to Coding Principles",
    "section": "Rendering Quarto",
    "text": "Rendering Quarto\nWhen you click the “Render” button for your .qmd file, what happens? R executes a program, called a “compiler”, that runs your entire .qmd file in a new environment. In other words, if you have loaded a library, or edited a variable, or done any number of things in the console (or even later in the .qmd file) without saving them in the .qmd file, and then you try to render, you will get an error because that function/variable/etc has not been defined in the rendering environment. This forces you to write reproducible code, and it’s the first thing to think about when you run into errors while rendering!",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#documentation",
    "href": "coding-principles-oh.html#documentation",
    "title": "Intro to Coding Principles",
    "section": "Documentation",
    "text": "Documentation\nUnless you have a function and its usage entirely memorized, you are going to be reading documentation. Documentation is useful, but it is dense, and can be hard to parse. Let’s look at an example of how we can look through documentation.\n\n?if_else\n\n?geom_point",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#errors",
    "href": "coding-principles-oh.html#errors",
    "title": "Intro to Coding Principles",
    "section": "Errors",
    "text": "Errors\nUnless you are the Roman God of Programming (and even then, I’m not too sure), you are going to encounter errors in your programming. These are completely natural, and nothing to be ashamed of - sometimes I write partial code, just to see where it will catch errors. However, some error messages are easier to understand than others. Let’s look through a couple of examples of common errors, and what I would do to interpret and fix them.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#example-1",
    "href": "coding-principles-oh.html#example-1",
    "title": "Intro to Coding Principles",
    "section": "Example 1",
    "text": "Example 1\n\nmidwest |&gt;\n  sumarize(avg_pop_dens = mean(popdensity))\n\nError in sumarize(midwest, avg_pop_dens = mean(popdensity)): could not find function \"sumarize\"\n\n\n\n\n\n\n\n\nWhat’s wrong with this code?\n\n\n\n\n\nIn this case, we just have a simple spelling error! It may seem trivial, but this will constitute at least half of the errors that you have. Make this the first thing you check - you will never meet a programmer who doesn’t have a story of the time they spent at least 30 minutes debugging a function, just to realize it was a typo all along.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#example-2",
    "href": "coding-principles-oh.html#example-2",
    "title": "Intro to Coding Principles",
    "section": "Example 2",
    "text": "Example 2\n\nggplot(midwest, aes(x = poptotal, y = popdensity,)) |&gt;\n  geom_point() |&gt;\n  labs(x = \"Total Population\", y = \"Population Density\")\n\nError in `geom_point()`:\n! `mapping` must be created by `aes()`.\nℹ Did you use `%&gt;%` or `|&gt;` instead of `+`?\n\n\n\n\n\n\n\n\nWhat’s wrong with this code?\n\n\n\n\n\nThis one should be pretty obvious, since it’s a common enough error that R gives an extremely helpful error message. When you’re building a ggplot object, you use + rather than |&gt; to add additional lines!\nThere’s a second error here, that R knew well enough to handle here, but which could become an issue in more complicated code chunks. Did anyone spot it?",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "coding-principles-oh.html#example-3",
    "href": "coding-principles-oh.html#example-3",
    "title": "Intro to Coding Principles",
    "section": "Example 3",
    "text": "Example 3\n\nggplot(midwest, aes(x = state, y = poptotal, fill = state)) +\n  geom_bar() +\n  theme_bw() +\n  scale_y_continuous(labels = scales::unit_format(unit = \"M\", scale = 1e-6)) +\n  labs(\n    x = \"State\",\n    y = \"Total Population\\n(Millions)\",\n    title = \"Total Population by State\"\n  ) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    panel.grid.major.x = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_fill_viridis_d()\n\nError in `geom_bar()`:\n! Problem while computing stat.\nℹ Error occurred in the 1st layer.\nCaused by error in `setup_params()`:\n! `stat_count()` must only have an x or y aesthetic.\n\n\nThere’s a lot going on here, so it might not be obvious at first where the issue is! The error has something to do with the function stat_count(), but that’s not a function we used (explicitly) anywhere in this code. This is why you should iterate on your code, running it intermittently, so that you can catch errors when they pop up.\nMy first thought would be to run rlang::last_trace(), as suggested by the error message. This is sometimes helpful - it can reference certain functions and even lines of code, especially when you’re executing something more complex. Frequently, though, it’s too complicated to understand. In this case, I would certainly say I can’t make any sense of that.\nMy next thought is to google the error message. It can be a little tricky to know what to google from the error message. You want to look for anything that seems general enough that other people might have asked, but specific enough that it will apply to your situation. Let’s go line by line:\n\n“Error in geom_bar()”: Probably too general to bother googling. There are a lot of possible errors with geom_bar(), and it would take too long to look through them all to get to your specific problem!\n“Problem while computing stat.”: This is more helpful, because it gives a little more direction as to the source of the error, but it is still too general - what stat are we computing? What problem?\n“Error occured in the 1st layer”: This can be helpful for you, if you know the order of ggplot layers. However, it is probably not helpful to google, since people could have built their layers in a different order before encountering this error.\n“Caused by error in setup_params()”: Closer! This is getting more and more specific, and this might be good enough to google. However, it still doesn’t say what the error is, it just says that there was one.\n“stat_count() must only have an x or y aesthetic”: Bingo! This is the one we’re looking for, which tells us exactly what the issue is. Now, it may be possible to interpret manually, but let’s say you can’t. Here’s where we go now:\n\nI would copy-paste the entire final line into google. You don’t want to copy-paste the full error message, since that’s probably too specific, and you might not find any results. At the same time, you don’t want to copy-paste only a couple of words, since that might not be specific enough, and you could be stuck looking through a lot of links. If you google just that line, you are likely to find someone on stack exchange who has posted a question with this exact (or almost this exact) error message. You can also help your google out by throwing in some relevant key words:\n\nggplot\nR\nerror\n\nTake a couple minutes to google this, and see if you can figure out what’s wrong with the code! Then, remember to cite the source where you found this answer! In general, it’s okay to google your error messages for help, but not to use someone else’s solution without credit.\n\n\n\n\n\n\nWhat’s wrong with this code?\n\n\n\n\n\nI looked at https://stackoverflow.com/questions/61068031/error-stat-count-can-only-have-an-x-or-y-aesthetic for my answer. There’s a few different suggestions on this page, all of which could be useful! This page definitely suggests to me that the issue with my plot is in the geom_bar() line - which makes sense, since this is layer 1 of the plot. While they have a couple simple fixes, here’s the actual error I wrote: geom_bar() is expecting only one variable. If you want two variables, like this, you should use geom_col() instead.",
    "crumbs": [
      "Computing",
      "Coding principles"
    ]
  },
  {
    "objectID": "project/3-improvement-progress.html",
    "href": "project/3-improvement-progress.html",
    "title": "Improvement and progress",
    "section": "",
    "text": "By this point you’ve received feedback on your proposal and you should be working on incorporating that feedback to improve your project and making further progress on it. This milestone ensures you’re keeping on task and doing these things.\n\nGoals\nThe goals of this milestone are as follows:\n\nIncorporate feedback from your proposal\nMake progress on your project prior to the peer review\n\n\n\nInstructions\nMake some progress, evidenced by commits to your repo since project milestone 2. These commits should\n\nexplicitly closing issues opened as proposal feedback, and\nmake further progress on the project.\n\n\n\nGrading\nThis milestone will be graded for completion, not accuracy. We will check to see if the team has made commits to their repo since project milestone 2 and closed all issues that were opened as part of proposal feedback.\n\n0 points: No commits since project milestone 2\n1 point: Only a single commit since project milestone 2, regardless of how many issues closed\n2-4 points: More than 1 commit since project milestone 2 and but not all issues closed\n5 points: More than 1 commit since project milestone 2 and all issues closed\n\n\n\n\n\n\n\nNote\n\n\n\nThere won’t be a lab session dedicated to this milestone. You are to work with your team outside of class time to complete this task."
  },
  {
    "objectID": "project/2-proposal.html",
    "href": "project/2-proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "The goals of this milestone are as follows:\n\nDiscuss topics you’re interested in investigating and find data sets on those topics.\nIdentify 2 data sets you’re interested in potentially using for the project.\nGet these datasets into R.\nWrite up reasons and justifications for why you want to work with these datasets.\nReview your team contract.\n\n\n\n\n\n\n\nImportant\n\n\n\nYou must use one of the data sets in the proposal for the final project, unless instructed otherwise when given feedback."
  },
  {
    "objectID": "project/2-proposal.html#criteria-for-datasets",
    "href": "project/2-proposal.html#criteria-for-datasets",
    "title": "Proposal",
    "section": "Criteria for datasets",
    "text": "Criteria for datasets\nThe data sets should meet the following criteria:\n\nAt least 500 observations.\nAt least 8 columns.\nAt least 6 of the columns must be useful and unique explanatory variables.\n\nIdentifier variables such as “name”, “social security number”, etc. are not useful explanatory variables.\nIf you have multiple columns with the same information (e.g. “state abbreviation” and “state name”), then they are not unique explanatory variables.\n\nYou may not use data that has previously been used in any course materials, or any derivation of data that has been used in course materials.\nYou can curate one of your datasets via web scraping.\n\nPlease ask a member of the teaching team if you’re unsure whether your data set meets the criteria.\nIf you set your hearts on a dataset that has fewer observations or variables than what’s suggested here, that might still be ok; use these numbers as guidance for a successful proposal, not as minimum requirements."
  },
  {
    "objectID": "project/2-proposal.html#resources-for-datasets",
    "href": "project/2-proposal.html#resources-for-datasets",
    "title": "Proposal",
    "section": "Resources for datasets",
    "text": "Resources for datasets\nYou can find data wherever you like, but here are some recommendations to get you started. You shouldn’t feel constrained to datasets that are already in a tidy format, you can start with data that needs cleaning and tidying, scrape data off the web, or collect your own data.\n\nUNICEF Data\nYouth Risk Behavior Surveillance System (YRBSS)\nGoogle Dataset Search\nData is Plural\nElection Studies\nUS Census Data\nWorld Bank Data\nCDC\nEuropean Statistics\nCORGIS: The Collection of ReallyGreat, Interesting, Situated Datasets\nGeneral Social Survey\nHarvard Dataverse\nInternational Monetary Fund\nIPUMS survey data from around the world\nLos Angeles Open Data\nNHS Scotland Open Data\nNYC OpenData\nOpen access to Scotland’s official statistics\nPew Research\nPRISM Data Archive Project\nResponsible Datasets in Context\nStatistics Canada\nTidyTuesday\nThe National Bureau of Economic Research\nUCI Machine Learning Repository\nUK Government Data\nUnited Nations Data\nUnited Nations Statistics Division\nUS Government Data\nFRED Economic Data\nData.gov\nAwesome public datasets\nDurham Open Data Portal\nEdinburgh Open Data\nFiveThirtyEight"
  },
  {
    "objectID": "project/2-proposal.html#introduction-and-data",
    "href": "project/2-proposal.html#introduction-and-data",
    "title": "Proposal",
    "section": "Introduction and data",
    "text": "Introduction and data\nFor each data set:\n\nIdentify the source of the data.\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\nWrite a brief description of the observations.\nAddress ethical concerns about the data, if any."
  },
  {
    "objectID": "project/2-proposal.html#research-question",
    "href": "project/2-proposal.html#research-question",
    "title": "Proposal",
    "section": "Research question",
    "text": "Research question\nYour research question should contain at least three variables, and should be a mix of categorical and quantitative variables. When writing a research question, please think about the following:\n\nWhat is your target population?\nIs the question original?\nCan the question be answered?\n\nFor each data set, include the following:\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\nStatement on why this question is important.\nA description of the research topic along with a concise statement of your hypotheses on this topic.\nIdentify the types of variables in your research question. Categorical? Quantitative?"
  },
  {
    "objectID": "project/2-proposal.html#glimpse-of-data",
    "href": "project/2-proposal.html#glimpse-of-data",
    "title": "Proposal",
    "section": "Glimpse of data",
    "text": "Glimpse of data\nFor each data set:\n\nPlace the file containing your data in the data folder of the project repo.\nUse the glimpse() function to provide a glimpse of the data set."
  },
  {
    "objectID": "project/2-proposal.html#data-dictionary",
    "href": "project/2-proposal.html#data-dictionary",
    "title": "Proposal",
    "section": "Data dictionary",
    "text": "Data dictionary\nFor each data set, add a data dictionary to the README.md file in the data folder describing each variable."
  },
  {
    "objectID": "project/5-writeup-presentation.html",
    "href": "project/5-writeup-presentation.html",
    "title": "Write-up and presentation",
    "section": "",
    "text": "Your written report must be completed in the index.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo: false in the YAML.\nThe mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long (if it were to be printed). There is no minimum page requirement; however, you should comprehensively address all of the analysis in your report.\nTo check how many pages your report is, open it in your browser and go to File &gt; Print &gt; Save as PDF and review the number of pages.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit.\n\n\n\n\n\nThis section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won’t fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The exploratory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\n\nThis section includes a brief description of your analysis process. Explain the reasoning for the types of analyses you do, exploratory, inferential, or modeling. If you’ve chosen to do inference, make sure to include a justification for why that inferential approach is appropriate. If you’ve chosen to do modeling, describe the model(s) you’re fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\n\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to determine analyses types and addressed any concerns over appropriateness of analyses chosen.\n\n\n\n\nThis is where you will discuss your overall finding and describe the key results from your analysis. The goal is not to interpret every single element of an output shown, but instead to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\n\nThe analysis results are clearly assesses and interesting findings from the analysis are described. Interpretations are used to to support the key findings and conclusions, rather than merely listing, e.g., the interpretation of every model coefficient.\n\n\n\n\nIn this section you’ll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\n\nOverall conclusions from analysis are clearly described, and the analysis results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\n\nThis is an assessment of the overall presentation and formatting of the written report.\n\n\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages.\n\n\n\n\n\nThe write-up is worth 35 points, broken down as follows:\n\n\n\nTotal\n35 pts\n\n\n\n\nIntroduction/data\n4 pts\n\n\nMethodology\n10 pts\n\n\nResults\n15 pts\n\n\nDiscussion\n3 pts\n\n\nOrganization + formatting\n3 pts"
  },
  {
    "objectID": "project/5-writeup-presentation.html#expectations",
    "href": "project/5-writeup-presentation.html#expectations",
    "title": "Write-up and presentation",
    "section": "",
    "text": "Your written report must be completed in the index.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo: false in the YAML.\nThe mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long (if it were to be printed). There is no minimum page requirement; however, you should comprehensively address all of the analysis in your report.\nTo check how many pages your report is, open it in your browser and go to File &gt; Print &gt; Save as PDF and review the number of pages.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit."
  },
  {
    "objectID": "project/5-writeup-presentation.html#components",
    "href": "project/5-writeup-presentation.html#components",
    "title": "Write-up and presentation",
    "section": "",
    "text": "This section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won’t fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The exploratory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\n\nThis section includes a brief description of your analysis process. Explain the reasoning for the types of analyses you do, exploratory, inferential, or modeling. If you’ve chosen to do inference, make sure to include a justification for why that inferential approach is appropriate. If you’ve chosen to do modeling, describe the model(s) you’re fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\n\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to determine analyses types and addressed any concerns over appropriateness of analyses chosen.\n\n\n\n\nThis is where you will discuss your overall finding and describe the key results from your analysis. The goal is not to interpret every single element of an output shown, but instead to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\n\nThe analysis results are clearly assesses and interesting findings from the analysis are described. Interpretations are used to to support the key findings and conclusions, rather than merely listing, e.g., the interpretation of every model coefficient.\n\n\n\n\nIn this section you’ll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\n\nOverall conclusions from analysis are clearly described, and the analysis results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\n\nThis is an assessment of the overall presentation and formatting of the written report.\n\n\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages."
  },
  {
    "objectID": "project/5-writeup-presentation.html#grading",
    "href": "project/5-writeup-presentation.html#grading",
    "title": "Write-up and presentation",
    "section": "",
    "text": "The write-up is worth 35 points, broken down as follows:\n\n\n\nTotal\n35 pts\n\n\n\n\nIntroduction/data\n4 pts\n\n\nMethodology\n10 pts\n\n\nResults\n15 pts\n\n\nDiscussion\n3 pts\n\n\nOrganization + formatting\n3 pts"
  },
  {
    "objectID": "project/5-writeup-presentation.html#slides",
    "href": "project/5-writeup-presentation.html#slides",
    "title": "Write-up and presentation",
    "section": "Slides",
    "text": "Slides\nIn addition to the written report, your team will also create presentation slides and record a presentation that summarize and showcase your project. Introduce your research question and data set, showcase visualizations, and discuss the primary conclusions. These slides should serve as a brief visual addition to your written report and will be graded for content and quality.\nYou can create your slides with any software you like (Keynote, PowerPoint, Google Slides, etc.). We recommend choosing an option that’s easy to collaborate with, e.g., Google Slides. If you choose this option, save the slides as PDF and upload it to your repo as presentation.pdf.\nYou can also use Quarto to make your slides! While we won’t be covering making slides with Quarto in the class, we would be happy to help you with it in office hours. It’s no different than writing other documents with Quarto, so the learning curve will not be steep!\nThe slide deck should be roughly 6 content slides + 1 title slide. Here is a suggested outline as you think through the slides; you do not have to use this exact format for the 6 slides.\n\nTitle Slide\nSlide 1: Introduce the topic and motivation\nSlide 2: Introduce the data\nSlide 3: Highlights from EDA\nSlide 4-5: Inference/modeling/other analysis\nSlide 6: Conclusions + future work"
  },
  {
    "objectID": "project/5-writeup-presentation.html#presentation",
    "href": "project/5-writeup-presentation.html#presentation",
    "title": "Write-up and presentation",
    "section": "Presentation",
    "text": "Presentation\nPresentations will be recorded and uploaded to Warpwire or YouTube. The presentation must be no longer than 5 minutes. During grading, we will stop watching your video at the 5-minute mark.\n\nRecording your presentation\nFor recording your presentation, you may use can use any platform that works best for your group to record your presentation. Below are a few resources on recording videos:\n\nRecording presentations in Zoom\nApple Quicktime for screen recording\nWindows 10 built-in screen recording functionality\nKap for screen recording\n\n\n\nUploading your presentation\nOnce your video is ready, upload it to Warpwire or another video platform (e.g., YouTube).\nTo upload your video to Warpwire:\n\nClick the Warpwire tab on the course Canvas site.\nClick the “+” and select “Upload files”.\nLocate the video on your computer and click to upload.\n\nThe instructions should be a lot more straightforward for YouTube. See https://support.google.com/youtube/answer/57407?hl=en&co=GENIE.Platform%3DDesktop for step-by-step instructions. You can make it “Unlisted”, which means it will only be available to those you’ve shared the link with.\n\n\nSharing your presentation\nThis step is essential – if you don’t share your video by the deadline, it will be as if you haven’t recorded it in the first place.\nYou must share your video with the teaching team and with other students in the class.\n\nSharing with the teaching team (formal submission): Add a link to your video in your repo’s README.\nSharing with other students in the class: Post a link to your video on Ed Discussion. Title it “Your team name: Your project title” and use the “Presentation” tag.\n\nMake sure that your video is accessible to others. You should test this by sharing the link with a teammate or checking it in Incognito mode in your browser."
  },
  {
    "objectID": "project/5-writeup-presentation.html#grading-1",
    "href": "project/5-writeup-presentation.html#grading-1",
    "title": "Write-up and presentation",
    "section": "Grading",
    "text": "Grading\nThe presentation is worth 25 points, broken down as follows:\n\n\n\nTotal\n25 pts\n\n\n\n\nSlides\n10 pts\n\n\nPresentation\n15 pts\n\n\n\n\nSlides\nAre the slides well organized, readable, not full of text, featuring figures with legible labels, legends, etc.?\n\n\nPresentation\n\nTime management: Did the team divide the time well amongst themselves or got cut off going over time?\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Did everyone get a chance to say something meaningful about the project?\nTeamwork: Did the team present a unified story, or did it seem like independent pieces of work patched together?\nCreativity and critical thought: Is the project carefully thought out? Does it appear that time and effort went into the planning and implementation of the project?\nContent: Including, but not limited to the following:\n\nIs the question well articulated in the presentation?\nCan the question be answered with the data?\nDoes the analysis answer the question?\nAre the conclusion(s) made based on the analysis justifiable?\nAre the limitations carefully considered and articulated?"
  },
  {
    "objectID": "computing-code-alongs.html",
    "href": "computing-code-alongs.html",
    "title": "Code alongs",
    "section": "",
    "text": "The following videos feature “code alongs” as an additional resource for getting coding practice."
  },
  {
    "objectID": "computing-code-alongs.html#data-visualization-and-transformation",
    "href": "computing-code-alongs.html#data-visualization-and-transformation",
    "title": "Code alongs",
    "section": "Data visualization and transformation",
    "text": "Data visualization and transformation\n\nUN Votes\nFirst look at R amd RStudio.\n\n\n\nFirst look at Palmer Penguins\nFirst look at data science with the tidyverse.\n\n\n\nFlights and pipes\nData transformation\n\n\n\nStarwars characters\nData visualization\n\n\n\nDiving deeper with Palmer Penguins\nData visualization and transformation"
  },
  {
    "objectID": "ae.html",
    "href": "ae.html",
    "title": "Application exercises",
    "section": "",
    "text": "All application exercises (AEs) are due by the end of lecture (or, precisely, by 10:45 am) on the day they’re covered in lecture. To submit your AE, make at least one change to your AE, commit and then push your change to your AE repo. AEs are graded for engagement, not accuracy.\nMore AEs to be added as the semester progresses.\n\n\n\n\n\n\nTitle\n\n\nSubtitle\n\n\n\n\n\n\nAE 00: Make a Github\n\n\n \n\n\n\n\nAE 01: Meet the penguins\n\n\n \n\n\n\n\nAE 02: Bechdel Data Vis\n\n\n \n\n\n\n\nAE 03: Duke Forest\n\n\n \n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Application exercises"
    ]
  },
  {
    "objectID": "computing-access.html",
    "href": "computing-access.html",
    "title": "Computing access",
    "section": "",
    "text": "To access computing resources for the introductory data science courses offered by the Duke University Department of Statistical Science, go to the Duke Container Manager website, cmgr.oit.duke.edu/containers.\nIf this is your first time accessing the containers, click on reserve STA198-199 on the Reservations available menu on the right. You only need to do this once, and when you do, you’ll see this container moved to the My reservations menu on the left.\nNext, click on STA198-199 under My reservations to access the RStudio instance you’ll use for the course.",
    "crumbs": [
      "Computing",
      "Access"
    ]
  },
  {
    "objectID": "course-team.html",
    "href": "course-team.html",
    "title": "Teaching team",
    "section": "",
    "text": "Marie Neubrander is a second year Ph.D. student in the Department of Statistical Science at Duke University and is the instructor for this course. Marie’s research is focused on developing statistical methods with various applications in political science.\nYou can contact her at marie.neubrander@duke.edu) with any questions regarding this course.\nOffice hours: Tuesdays 3:30 - 5:30 pm, Fridays 1 - 3 pm in Old Chem 203",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "course-team.html#instructor",
    "href": "course-team.html#instructor",
    "title": "Teaching team",
    "section": "",
    "text": "Marie Neubrander is a second year Ph.D. student in the Department of Statistical Science at Duke University and is the instructor for this course. Marie’s research is focused on developing statistical methods with various applications in political science.\nYou can contact her at marie.neubrander@duke.edu) with any questions regarding this course.\nOffice hours: Tuesdays 3:30 - 5:30 pm, Fridays 1 - 3 pm in Old Chem 203",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "course-team.html#lab-instructor-course-coordinator",
    "href": "course-team.html#lab-instructor-course-coordinator",
    "title": "Teaching team",
    "section": "Lab Instructor & Course Coordinator",
    "text": "Lab Instructor & Course Coordinator\n\nDr. Mary Knox (she/her) is the course coordinator for this course.\nYou can contact her (at mary.knox@duke.edu) with any questions regarding accommodations, missed work, extensions, registration, etc.\nOffice hours: Wednesdays 2 - 3 pm on Zoom",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "course-team.html#teaching-assistant",
    "href": "course-team.html#teaching-assistant",
    "title": "Teaching team",
    "section": "Teaching Assistant",
    "text": "Teaching Assistant\n\nKatie Solarz is the teaching assistant for this course.\n\nOffice hours: TBD",
    "crumbs": [
      "Course information",
      "Team"
    ]
  },
  {
    "objectID": "lab/lab-0.html",
    "href": "lab/lab-0.html",
    "title": "Lab 0",
    "section": "",
    "text": "This lab will set you up for the computing workflow and give you an opportunity to introduce yourselves to each other and the teaching team."
  },
  {
    "objectID": "lab/lab-0.html#access-r-and-rstudio",
    "href": "lab/lab-0.html#access-r-and-rstudio",
    "title": "Lab 0",
    "section": "Access R and RStudio",
    "text": "Access R and RStudio\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 to log into the Docker container. You should now see the RStudio environment.\n\nGo to https://cmgr.oit.duke.edu/containers and under Reservations available click on reserve STA 198-199 to reserve a container for yourself.\n\n\n\n\n\n\nNote\n\n\n\nA container is a self-contained instance of RStudio for you, and you alone. You will do all of your computing in your container.\n\n\nOnce you’ve reserved the container you’ll see that it will show up under My reservations.\nTo launch your container click on it under My reservations, then click Login, and then Start.1"
  },
  {
    "objectID": "lab/lab-0.html#create-a-github-account",
    "href": "lab/lab-0.html#create-a-github-account",
    "title": "Lab 0",
    "section": "Create a GitHub account",
    "text": "Create a GitHub account\nYou should have already done this yesterday during class! Go ahead and check to make sure you remember what email address you used with your GitHub account."
  },
  {
    "objectID": "lab/lab-0.html#set-up-your-ssh-key",
    "href": "lab/lab-0.html#set-up-your-ssh-key",
    "title": "Lab 0",
    "section": "Set up your SSH key",
    "text": "Set up your SSH key\nYou will authenticate GitHub using SSH (Secure Shell Protocol – it doesn’t really matter what this means for the purpose of this course). Below is an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n\n\n\n\n\nNote\n\n\n\nYou only need to do this authentication process one time on a single system.\n\n\n\nGo back to your RStudio container and type credentials::ssh_setup_github() into your console.\nR will ask “No SSH key found. Generate one now?” You should click 1 for yes.\nYou will generate a key. R will then ask “Would you like to open a browser now?” You should click 1 for yes.\nYou may be asked to provide your GitHub username and password to log into GitHub. After entering this information, you should paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., sta199).\n\nYou can find more detailed instructions here if you’re interested."
  },
  {
    "objectID": "lab/lab-0.html#configure-git-to-introduce-yourself",
    "href": "lab/lab-0.html#configure-git-to-introduce-yourself",
    "title": "Lab 0",
    "section": "Configure Git to introduce yourself",
    "text": "Configure Git to introduce yourself\nThere is one more thing we need to do before getting started on the assignment. Specifically, we need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\nTo do so, you will use the use_git_config() function from the usethis package.\n\n\n\n\n\n\nNote\n\n\n\nYou’ll hear about 📦 packages a lot in the context of R – basically they’re how developers write functions and bundle them to distribute to the community (and more on this later too!).\n\n\nType the following lines of code in the console in RStudio filling in your name and the address associated with your GitHub account.\n\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n)\n\nFor example, mine would be\n\nusethis::use_git_config(\n  user.name = \"Marie Neubrander\", \n  user.email = \"mneubrander@crimson.ua.edu\"\n)\n\n\n\n\n\n\n\nNote\n\n\n\nI used my Alabama email because that is the one I used to create my GitHub account. You should also be using the email address you used to create your GitHub account, even if it isn’t your Duke email.\n\n\nYou are now ready interact with GitHub via RStudio!\nIf you don’t do this, we won’t be able to tell who you are and give you points for the work you do…\n\n\n\n\n\n\nNote\n\n\n\nWell, a more accurate statement would be that we will be reaching out to you to get things right during the first few weeks of classes. But, it’s best if you can get it right today!\n\n\n\n\n\n\n\n\nHow do I know if I did it right?\n\n\n\nWhen you input the usethis::use_git_config(...) command into the console and hit enter/return, it will appear as if nothing happened. To verify that everything worked, you can briefly switch over to the Terminal tab (should be to the right of Console) and type the commands git config user.name and git config user.email. If all is well, these will return whatever text you originally provided. If you notice a mistake or typo, you can just go back to the Console and rerun usethis::use_git_config(...) with modified inputs.\n\n\n\n\n\n\n\n\nNeed a recap? Watch this video!\n\n\n\n\n\nThe following video walks you through the steps outlined in the SSH key generation and Git configuration sections above."
  },
  {
    "objectID": "lab/lab-0.html#clone-first-repo",
    "href": "lab/lab-0.html#clone-first-repo",
    "title": "Lab 0",
    "section": "Clone first repo",
    "text": "Clone first repo\nA GitHub repository (repo) is a collection of files hosted on GitHub. Repos are the main way we will distribute files to you during the semester. When you copy the files in a repo to your local computing environment (your container, in this case), that’s called “cloning”. So, let’s clone our first repo:\n\nGo to the course organization at github.com/sta199-su25 organization on GitHub. Click on the repo with the prefix ae. This is your application exercise (AE) repo. It contains the starter documents you need to complete your AE for today’s lecture (and will contain the starter files for future AEs).\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\n\nYou will need to get used to these steps, because you’ll probably clone at least one new repo every week."
  },
  {
    "objectID": "lab/lab-0.html#footnotes",
    "href": "lab/lab-0.html#footnotes",
    "title": "Lab 0",
    "section": "Footnotes",
    "text": "Footnotes\n\nYes, it’s too many steps. I don’t know why! But it works, and you’ll get used to it. Trust me, it beats downloading and installing everything you need on your computers!↩︎"
  },
  {
    "objectID": "ae/ae-00-github.html",
    "href": "ae/ae-00-github.html",
    "title": "AE 00: Make a Github",
    "section": "",
    "text": "Normally, these AEs will contain coding practice assignments. However, before you’re able to start coding, you will need a Github account.\nIn tomorrow’s lecture (and throughout the rest of the class), you will learn more about how GitHub works. For now, understand that GitHub is like the Google Drive of coding. You can upload files, track changes over time, and work with others without overwriting each other’s work.\nIn this class, we will have a GitHub organization so that:\n\nEveryone has a central place to both access and work on course materials (AEs, labs, project, etc.)\nWe can see your progress, give help, and review changes over time.\nYou learn to use tools that are standard in data science, research, and industry.\n\nIf you’ve never coded before, it might not be clear why we need something specialized and can’t just use a Google Drive (or Box, or iCloud, or similar). I think that this becomes more clear as you dive into coding, but the long story very short is that you aren’t typing code into a word document. You’re using and running special code files, and normal drives are not properly equipped to handle these."
  },
  {
    "objectID": "ae/ae-00-github.html#introduction",
    "href": "ae/ae-00-github.html#introduction",
    "title": "AE 00: Make a Github",
    "section": "",
    "text": "Normally, these AEs will contain coding practice assignments. However, before you’re able to start coding, you will need a Github account.\nIn tomorrow’s lecture (and throughout the rest of the class), you will learn more about how GitHub works. For now, understand that GitHub is like the Google Drive of coding. You can upload files, track changes over time, and work with others without overwriting each other’s work.\nIn this class, we will have a GitHub organization so that:\n\nEveryone has a central place to both access and work on course materials (AEs, labs, project, etc.)\nWe can see your progress, give help, and review changes over time.\nYou learn to use tools that are standard in data science, research, and industry.\n\nIf you’ve never coded before, it might not be clear why we need something specialized and can’t just use a Google Drive (or Box, or iCloud, or similar). I think that this becomes more clear as you dive into coding, but the long story very short is that you aren’t typing code into a word document. You’re using and running special code files, and normal drives are not properly equipped to handle these."
  },
  {
    "objectID": "ae/ae-00-github.html#create-a-github-account",
    "href": "ae/ae-00-github.html#create-a-github-account",
    "title": "AE 00: Make a Github",
    "section": "Create a GitHub account",
    "text": "Create a GitHub account\nTomorrow, we will give a more detailed introduction to using GitHub. But, in order for you to access the course organization, you need an account, and we need to add your username to the list of users with access.\nGo to https://github.com/ and walk through the steps for creating an account. You do not have to use your Duke email address, but I recommend doing so.1\n\n\n\n\n\n\nNote\n\n\n\nYou’ll need to choose a user name. I recommend reviewing the user name advice at https://happygitwithr.com/github-acct#username-advice before choosing a username.\n\n\n\n\n\n\n\n\nWhat if I already have a GitHub account?\n\n\n\n\n\nIf you already have a GitHub account, you do not need to create a new one for this course. Just log in to that account to make sure you still remember your username and password. If you are unsure of your login credentials, carefully follow GitHub’s instructions for recovering this information. If you accumulate too many failed login attempts, you will be locked out of your account for the day."
  },
  {
    "objectID": "ae/ae-00-github.html#share-the-account-with-us",
    "href": "ae/ae-00-github.html#share-the-account-with-us",
    "title": "AE 00: Make a Github",
    "section": "Share the Account with Us",
    "text": "Share the Account with Us\nSo that we can add you to the course organization, share your username with us via the GitHub canvas quiz. Do this before you leave the room!!!"
  },
  {
    "objectID": "ae/ae-00-github.html#footnotes",
    "href": "ae/ae-00-github.html#footnotes",
    "title": "AE 00: Make a Github",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nGitHub has some perks for students you can take advantage of later in the course or in your future work, and it helps to have a .edu address to get verified as a student. However, this is still possible even if you use a different email!↩︎"
  },
  {
    "objectID": "ae/ae-03-github.html",
    "href": "ae/ae-03-github.html",
    "title": "AE 03: Duke Forest",
    "section": "",
    "text": "library(tidyverse)\nlibrary(openintro)"
  },
  {
    "objectID": "ae/ae-03-github.html#packages",
    "href": "ae/ae-03-github.html#packages",
    "title": "AE 03: Duke Forest",
    "section": "",
    "text": "library(tidyverse)\nlibrary(openintro)"
  },
  {
    "objectID": "ae/ae-03-github.html#data",
    "href": "ae/ae-03-github.html#data",
    "title": "AE 03: Duke Forest",
    "section": "Data",
    "text": "Data\nWe will be using the Duke forest data set in the open intro package.\nDo your own investigation to get to know the data. How many observations does it have? How many variables are measured? Go ahead and do a glimpse!"
  },
  {
    "objectID": "ae/ae-03-github.html#data-preparation",
    "href": "ae/ae-03-github.html#data-preparation",
    "title": "AE 03: Duke Forest",
    "section": "Data Preparation",
    "text": "Data Preparation\nOne of the questions in this AE asks about garages - notice that this is not a variable in the data set. I am adding code that creates a categorical variable called garage that has two levels: Garage or No garage. Our new variable equals \"Garage\" if the word \"Garage\" is detected in the parking variable and equals \"No garage\" if not.\nYou do not need to understand this code yet - we will learn how to write things like this in the coming days! For now, just run the code!\n\nduke_forest = duke_forest |&gt;\n  mutate(garage = if_else(str_detect(parking, \"Garage\"),   \"Garage\", \"No garage\"))\n\nWhat did this do?\nGo ahead and look at the data again to see the change."
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "STA 199Fall 2025",
    "section": "",
    "text": "Intro to data science and statistical thinking. Learn to explore, visualize, and analyze data to understand natural phenomena, investigate patterns, model outcomes, and make predictions, all in a reproducible and shareable manner. Gain experience in data wrangling, exploratory data analysis, predictive modeling, data visualization, and effective communication of results. Work on problems and case studies inspired by and based on real-world questions and data. The course will focus on the R statistical computing language. No statistical or computing background is necessary. Not open to students who have taken a 100-level Statistical Science course, Statistical Science 210, or a Statistical Science course numbered 300 or above.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#overview",
    "href": "course-overview.html#overview",
    "title": "STA 199Fall 2025",
    "section": "",
    "text": "Intro to data science and statistical thinking. Learn to explore, visualize, and analyze data to understand natural phenomena, investigate patterns, model outcomes, and make predictions, all in a reproducible and shareable manner. Gain experience in data wrangling, exploratory data analysis, predictive modeling, data visualization, and effective communication of results. Work on problems and case studies inspired by and based on real-world questions and data. The course will focus on the R statistical computing language. No statistical or computing background is necessary. Not open to students who have taken a 100-level Statistical Science course, Statistical Science 210, or a Statistical Science course numbered 300 or above.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#meetings",
    "href": "course-overview.html#meetings",
    "title": "STA 199Fall 2025",
    "section": "Meetings",
    "text": "Meetings\n\n\n\n\n\n\n\n\nMeeting\nLocation\nTime\n\n\n\n\nLecture\nPerkins LINK 087 (Classroom 3)\nM/T/W/Th/F 9:30AM - 10:45AM\n\n\nLab\nPerkins LINK 087 (Classroom 3)\nM/Th 11:00AM - 12:15PM",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#office-hours",
    "href": "course-overview.html#office-hours",
    "title": "STA 199Fall 2025",
    "section": "Office hours",
    "text": "Office hours\n\n\n\nName\nLocation\nTime\n\n\n\n\nMarie Neubrander\nOld Chem 203A\nTu 3:30PM - 5:30PM\nF 1PM - 3PM\n\n\nMary Knox\nZoom\nW 2PM - 3PM\n\n\nKatie Solarz\nOld Chem 203A\nW 5:30-7:30 PM\n\n\n\n\n\n\n\n\n\nOn May 21 (W), Marie will run Katie’s office hours. Katie will run Marie’s on May 23 (F).",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "exam-review/final-review-A.html",
    "href": "exam-review/final-review-A.html",
    "title": "Final review",
    "section": "",
    "text": "Take a random sample of size 25, with replacement, from the original sample. Calculate the proportion of students in this simulated sample who work 5 or more hours. Repeat this process 1000 times to build the bootstrap distribution. Take the middle 95% of this distribution to construct a 95% confidence interval for the true proportion of statistics majors who work 5 or more hours.\nThe exact 95% CI is (40%, 80%). Answers reasonably close to the upper and lower bounds would be accepted.\n(e) None of the above. The correct interpretation is “We are 95% confident that 40% to 80% of statistics majors work at least 5 hours per week.”\n(c) For every additional $1,000 of annual salary, the model predicts the raise to be higher, on average, by 0.0155%.\n$R^2$ of raise_2_fit is higher than $R^2$ of raise_1_fit since raise_2_fit has one more predictor and $R^2$ always\nThe reference level of performance_rating is High, since it’s the first level alphabetically. Therefore, the coefficient -2.40% is the predicted difference in raise comparing High to Successful. In this context a negative coefficient makes sense since we would expect those with High performance rating to get higher raises than those with Successful performance.\n(a) “Poor”, “Successful”, “High”, “Top”.\nOption 3. It’s a linear model with no interaction effect, so parallel lines. And since the slope for salary_typeSalaried is positive, its intercept is higher. The equations of the lines are as follows:\n\nHourly:\n\\[\n\\begin{align*}\n\\widehat{percent\\_incr} &= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 salary\\_typeSalaried \\\\\n&= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 \\times 0 \\\\\n&= 1.24 + 0.0000137 \\times annual\\_salary\n\\end{align*}\n\\]\nSalaried:\n\\[\n\\begin{align*}\n\\widehat{percent\\_incr} &= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 salary\\_typeSalaried \\\\\n&= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 \\times 1 \\\\\n&= 2.153 + 0.0000137 \\times annual\\_salary\n\\end{align*}\n\\]\n\nA parsimonious model is the simplest model with the best predictive performance.\n(c) The model predicts that the percentage increase employees with Successful performance get, on average, is higher by a factor of 1025 compared to the employees with Poor performance rating.\\/(a) and (d).\n(a) and (d).\n(c) We are 95% confident that the mean number of texts per month of all American teens is between 1450 and 1550."
  },
  {
    "objectID": "exam-review/midterm-review-A.html",
    "href": "exam-review/midterm-review-A.html",
    "title": "Midterm review",
    "section": "",
    "text": "b, c, f, g -\n\nThe blizzard_salary dataset has 409 rows.\nThe percent_incr variable is numerical and continuous.\nThe salary_type variable is categorical.\n\nFigure 1 - A shared x-axis makes it easier to compare summary statistics for the variable on the x-axis.\nc - It’s a value higher than the median for hourly but lower than the mean for salaried.\nb - There is more variability around the mean compared to the hourly distribution.\na, b, e - Pie charts and waffle charts are for visualizing distributions of categorical data only. Scatterplots are for visualizing the relationship between two numerical variables.\nc - mutate() is used to create or modify a variable.\na - \"Poor\", \"Successful\", \"High\", \"Top\"\nb - Option 2. The plot in Option 1 shows the number of employees with a given performance rating for each salary type while the plot in Option 2 gives the proportion of employees with a given performance rating for each salary type. In order to assess the relationship between these variables (e.g., how much more likely is a Top rating among Salaried vs. Hourly workers), we need the proportions, not the counts.\nThere may be some NAs in these two variables that are not visible in the plot.\nThe proportions under Hourly would go in the Hourly bar, and those under Salaried would go in the Salaried bar.\nc - filter(salary_type != \"Hourly\" & performance_rating == \"Poor\") - There are 5 observations for “not Hourly” “and” Poor.\na - arrange() - The result is arranged in increasing order of annual_salary, which is the default for arrange().\nc, d, e, f.\nPart 1: The following should be fixed:\n\nThere should be a | after # before label\nThere should be a : after label, not =\nThere shouldn’t be a space in the chunk label, it should be plot-blizzard\nThere should be spaces after commas in the code\nThere should be spaces on both sides of = in the code\nThere should be a space before +\ngeom_boxplot() should be on the next line and indented\nThere should be a + at the end of the geom_boxplot() line\nlabs() should be indented\n\nPart 2: The warning is caused by NA in the data. It means that 39 observations were NAs and are not plotted/represented on the plot.\nPart 1:\n\nRender: Run all of the code and render all of the text in the document and produce an output.\nCommit: Take a snapshot of your changes in Git with an appropriate message.\nPush: Send your changes off to GitHub.\n\nPart 2: c - Rendering or committing isn’t sufficient to send your changes to your GitHub repository, a push is needed. A pull is also not needed to view the changes in the browser."
  }
]