{
  "hash": "5d0d77f38c2b60f0937aac0a40fe6c5c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Meet the Toolkit\"\nsubtitle: \"Lecture 1\"\ndate: \"2025-05-15\"\nformat: \n  revealjs:\n    output-file: 01-meet-the-toolkit-slides.html\nauto-stretch: false\n---\n\n## Reminders\n\n-   If you have not yet finished the `Getting to Know You` survey, please do so ASAP!\n\n-   Make your appointments in the Testing Center now!\n\n-   Any questions about the syllabus??\n\n# Today: Course toolkit\n\n# Ask so many questions!!!\n\n## Course toolkit {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n**Course operation**\n\n-   Materials: [sta199-f24.github.io](https://sta199-f24.github.io/)\n-   Submission: Gradescope\n-   Discussion: Ed Discussion\n-   Gradebook: Canvas\n:::\n\n::: {.column width=\"50%\"}\n::: {.fragment style=\"background-color:#f3e6ff; border-radius:10px; padding:10px;\"}\n<strong>Doing data science</strong>\n\n-   Computing:\n    -   R\\\n    -   RStudio\\\n    -   tidyverse\\\n    -   Quarto\\\n-   Version control and collaboration:\n    -   Git\\\n    -   GitHub\\\n:::\n:::\n:::\n\n## Learning goals {.smaller}\n\nBy the end of the course, you will be able to...\n\n::: incremental\n-   gain insight from data\n-   gain insight from data, **reproducibly**\n-   gain insight from data, reproducibly, **using modern programming tools and techniques**\n-   gain insight from data, reproducibly **and collaboratively**, using modern programming tools and techniques\n-   gain insight from data, reproducibly **(with literate programming and version control)** and collaboratively, using modern programming tools and techniques\n:::\n\n# Reproducible data analysis\n\n## Reproducibility checklist {.smaller}\n\n::: question\nHow do we make sure a data analysis is \"reproducible\"?\n:::\n\n. . .\n\n**Short-term goals:**\n\n-   Are the tables and figures reproducible from the code and data?\n-   Does the code actually do what you think it does?\n-   In addition to what was done, is it clear *why* it was done?\n\n. . .\n\n**Long-term goals:**\n\n-   Can the code be used for other data?\n-   Can you extend the code to do other things?\n\n## Toolkit for reproducibility\n\n\\- Scriptability $\\rightarrow$ R\n\n\\- Literate programming (code, narrative, output in one place) $\\rightarrow$ Quarto\n\n\\- Version control $\\rightarrow$ Git / GitHub\n\n## An Analogy to English\n\n![](images/R-english-analogy/1.jpg){fig-alt=\"R\"}\n\n## An Analogy to English\n\n![](images/R-english-analogy/2.jpg){fig-alt=\"Rstudio\"}\n\n## An Analogy to English\n\n![](images/R-english-analogy/3.jpg){fig-alt=\"Quarto\"}\n\n## An Analogy to English\n\n![](images/R-english-analogy/4.jpg){fig-alt=\"git\"}\n\n## An Analogy to English\n\n![](images/R-english-analogy/5.jpg){fig-alt=\"github\"}\n\n# R and RStudio\n\n## What are R and RStudio? {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/01/r-logo.png){fig-alt=\"R logo\" fig-align=\"center\"}\n\n-   R is an open-source statistical **programming language**\n-   R is also an environment for statistical computing and graphics\n-   *Packages* make R easily *extensible*\n:::\n\n::: {.column width=\"50%\"}\n![](images/01/rstudio-logo.png){fig-alt=\"RStudio logo\"}\n\n-   RStudio is a convenient interface for R called an **IDE** (integrated development environment), e.g. *\"I write R code in the RStudio IDE\"*\n-   RStudio is not a requirement for programming with R, but it's very commonly used by R programmers and data scientists\n:::\n:::\n\n## R vs. RStudio: Another Analogy\n\n[![](images/01/r_vs_rstudio.png){fig-alt=\"On the left: a car engine. On the right: a car dashboard. The engine is labelled R. The dashboard is labelled RStudio.\" fig-align=\"center\" width=\"1001\"}](https://moderndive.com/1-getting-started.html)\n\n::: aside\nSource: [Modern Dive](https://moderndive.com/1-getting-started.html).\n:::\n\n## Tour: R + RStudio {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: demo\n**Option 1:**\n\nSit back and enjoy the show!\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: appex\n**Option 2:**\n\nGo to [your container](https://cmgr.oit.duke.edu/containers) and launch RStudio.\n:::\n:::\n:::\n\n## Tour recap: R + RStudio\n\n![](images/01/tour-r-rstudio.png)\n\n## A short list (for now) of R essentials {.smaller}\n\n-   Functions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n```\n:::\n\n\n<br>\n\n-   Packages are installed with the `install.packages()` function and loaded with the `library` function, once per session:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"package_name\")\nlibrary(package_name)\n```\n:::\n\n\n## R essentials (continued) {.smaller}\n\nData frames: like the spreadsheets of R\n\n-   Each row of a data frame is an **observation**\n-   Each column of a data frame is a **variable**\n\n![](images/df.png)\n\n## R essentials (continued) {.smaller}\n\n-   Use the question mark `?` to get help with objects (like data frames and functions):\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?function_name\n```\n:::\n\n\n-   Use the dollar sign `$` to access columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataframe$column\n```\n:::\n\n\n::: callout-note\nGenerally, you need to use the `$` to tell R *where* to find that column.\n:::\n\n## R essentials (continued) {.smaller}\n\n-   Use the arrow `<-` or equals sign `=` to save objects\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = some_thing\ny <- some_other_thing\n```\n:::\n\n\n::: callout-note\nCheck your environment pane for the saved object!\n:::\n\n## R essentials (continued) {.smaller}\n\n-   Look out for warning and error messages!!!\n\n<br>\n\n-   These are essential for figuring out where your code is going wrong.\n\n<br><br>\n\n::: callout-note\nIf you have trouble understanding what a message is saying, there is a high chance someone has explained the message online.\n:::\n\n## R packages {.smaller}\n\n::: incremental\n-   **Packages**: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data<sup>1</sup>\n\n-   As of 27 August 2024, there are 21,168 R packages available on **CRAN** (the Comprehensive R Archive Network)<sup>2</sup>\n\n-   We're going to work with a small (but important) subset of these!\n:::\n\n::: aside\n<sup>1</sup> Wickham and Bryan, [R Packages](https://r-pkgs.org/).\n\n<sup>2</sup> [CRAN contributed packages](https://cran.r-project.org/web/packages/).\n:::\n\n## tidyverse {.smaller}\n\n::: columns\n::: {.column width=\"40%\"}\n[![](images/01/tidyverse.png){fig-alt=\"Hex logos for dplyr, ggplot2, forcats, tibble, readr, stringr, tidyr, and purrr\"}](https://tidyverse.org)\n:::\n\n::: {.column width=\"60%\"}\n[tidyverse.org](https://www.tidyverse.org/)\n\n-   The **tidyverse** is a collection of R packages designed for data science\n\n<br>\n\n-   All packages share an underlying philosophy and a common grammar\n:::\n:::\n\n# Quarto\n\n## What is Quarto?\n\n::: incremental\n-   Fully reproducible reports -- each time you render the analysis is ran from the beginning\n-   Code goes in chunks; narrative (normal text) goes outside of chunks\n-   A visual editor for a familiar / Google docs-like editing experience\n:::\n\n## Tour: Quarto {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: demo\n**Option 1:**\n\nSit back and enjoy the show!\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: appex\n**Option 2:**\n\nGo to RStudio and open the document `ae-01-meet-the-penguins.qmd`.\n:::\n:::\n:::\n\n## Tour recap: Quarto\n\n![](images/01/tour-quarto.png){fig-alt=\"RStudio IDE with a Quarto document, source code on the left and output on the right. Annotated to show the YAML, a link, a header, and a code chunk.\" fig-align=\"center\"}\n\n## How will we use Quarto?\n\n-   Every application exercise, lab, project, etc. is an Quarto document\n-   You'll always have a template Quarto document to start with\n-   The amount of scaffolding in the template will decrease over the semester\n\n# Git and GitHub\n\n## What are Git and GitHub? {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/01/git-logo.png){fig-alt=\"Git logo\" fig-align=\"center\" width=\"150\"}\n\n-   Git is a version control system -- like \"Track Changes\" features from Microsoft Word, on steroids\n-   It's not the only version control system, but it's a very popular one\n:::\n\n::: {.column width=\"50%\"}\n![](images/01/github-logo.png){fig-alt=\"GitHub logo\" fig-align=\"center\" width=\"150\"}\n\n-   GitHub is the home for your Git-based projects on the internet -- like DropBox but much, much better\n\n-   We will use GitHub as a platform for web hosting and collaboration (and as our course management system!)\n:::\n:::\n\n## Versioning - done badly\n\n![](images/01/phd_comics_vc.gif){fig-align=\"center\"}\n\n## Versioning - done better\n\n![](images/01/lego-steps.png){fig-align=\"center\"}\n\n## Versioning - done even better\n\n::: hand\nwith human readable messages\n:::\n\n![](images/01/lego-steps-commit-messages.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-01.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-02.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-03.png){fig-align=\"center\"}\n\n## How will we use Git and GitHub?\n\n![](images/01/whole-game-04.png){fig-align=\"center\"}\n\n## Git and GitHub tips {.smaller}\n\n::: incremental\n-   There are ***so many*** and very few people know them all. 99% of the time you will use git to commit, push, and pull:\n    -   commit: tell git to keep track of what changes you've made - use a message!!\n    -   push: add the changes to the repository (folder)\n    -   pull: get changes from the repository (folder)\n-   There is a great resource for working with git and R: [happygitwithr.com](http://happygitwithr.com/). Some of the content in there is beyond the scope of this course, but it's a good place to look for help.\n:::\n\n## Tour: Git + GitHub {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n::: demo\n**Option 1:**\n\nSit back and enjoy the show!\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: appex\n**Option 2:**\n\nGo to the [course GitHub organization](https://github.com/sta199-s25) and clone `ae-your_github_name` repo to [your container](https://cmgr.oit.duke.edu/containers).\n:::\n:::\n:::\n\n## Tour recap: Git + GitHub {.smaller}\n\n-   Find your application repo, that will always be named using the naming convention `assignment_title-your_github_name`\n\n-   Click on the green \"Code\" button, make sure SSH is selected, copy the repo URL\n\n![](images/01/tour-git-github-1.png){fig-align=\"center\" width=\"1000\"}\n\n## Tour recap: Git + GitHub {.smaller}\n\nOnce we made changes to our Quarto document, we\n\n-   went to the Git pane in RStudio\n\n-   staged our changes by **clicking the checkboxes** next to the relevant files\n\n-   committed our changes with an **informative commit message**\n\n-   **pushed our change**s to our application exercise repos\n\n-   **confirmed on GitHub** that we could see our changes pushed from RStudio\n\n## Let's Practice: AE01 {.smaller}\n",
    "supporting": [
      "01-meet-the-toolkit_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}