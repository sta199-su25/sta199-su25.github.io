{
  "hash": "b9eae99e2ab4a1655fd195b18e42027b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Midterm Review\"\nsubtitle: \"Lecture 11\"\ndate: \"2025-05-30\"\nformat: \n  revealjs:\n    output-file: 11-review-slides.html\nauto-stretch: false\n---\n\n\n\n## Announcements\n\n-   Office hours today from 1:00-3:00.\n-   Be in class and lab on Monday!!!!\n\n# Review\n\n-   `group_by`/`summarize`/`mutate`\n-   joins\n-   pivots\n\n## Computing summary stats\n\n-   **With summarize:** condenses information into smaller result table\n\n-   **With mutate:** adds a new column to the data\n\n-   **With groupby:** results for each provided group\n\n## Sample Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(\n    C1 = c(\"A\", \"A\", \"A\", \"B\", \"B\"),\n    C2 = c(\"X\", \"Y\", \"X\", \"X\", \"Y\"),\n    C3 = 1:5\n)\n\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n\n## \n\n## Mutate vs. Summarize {.smaller}\n\nCompute the mean of `C3`.\n\n::: columns\n::: {.column width=\"25%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  mutate(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  C1    C2       C3 mean_3\n  <chr> <chr> <int>  <dbl>\n1 A     X         1      3\n2 A     Y         2      3\n3 A     X         3      3\n4 B     X         4      3\n5 B     Y         5      3\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n:::\n:::\n\n## Mutate vs. Summarize {.smaller}\n\nCompute the mean of `C3`.\n\n::: columns\n::: {.column width=\"25%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  mutate(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  C1    C2       C3 mean_3\n  <chr> <chr> <int>  <dbl>\n1 A     X         1      3\n2 A     Y         2      3\n3 A     X         3      3\n4 B     X         4      3\n5 B     Y         5      3\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  summarise(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_3\n   <dbl>\n1      3\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Grouping {.smaller}\n\nGroup by `C1`.\n\n::: columns\n::: {.column width=\"30%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n# Groups:   C1 [2]\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Grouping {.smaller}\n\nGroup by `C1` and `C2`.\n\n::: columns\n::: {.column width=\"30%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"70%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n# Groups:   C1, C2 [4]\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Mutate vs. Summarize (with grouping) {.smaller}\n\nCompute the mean of `C3` by value of `C1`.\n\n::: columns\n::: {.column width=\"25%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1) |>\n  mutate(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n# Groups:   C1 [2]\n  C1    C2       C3 mean_3\n  <chr> <chr> <int>  <dbl>\n1 A     X         1    2  \n2 A     Y         2    2  \n3 A     X         3    2  \n4 B     X         4    4.5\n5 B     Y         5    4.5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n:::\n:::\n\n## Mutate vs. Summarize (with grouping) {.smaller}\n\nCompute the mean of `C3` by value of `C1`.\n\n::: columns\n::: {.column width=\"25%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1) |>\n  mutate(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n# Groups:   C1 [2]\n  C1    C2       C3 mean_3\n  <chr> <chr> <int>  <dbl>\n1 A     X         1    2  \n2 A     Y         2    2  \n3 A     X         3    2  \n4 B     X         4    4.5\n5 B     Y         5    4.5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1) |>\n  summarise(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  C1    mean_3\n  <chr>  <dbl>\n1 A        2  \n2 B        4.5\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Mutate vs. Summarize (with grouping) {.smaller}\n\nCompute the mean of `C3` by value of `C1` and `C2`.\n\n::: columns\n::: {.column width=\"25%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  mutate(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n# Groups:   C1, C2 [4]\n  C1    C2       C3 mean_3\n  <chr> <chr> <int>  <dbl>\n1 A     X         1      2\n2 A     Y         2      2\n3 A     X         3      2\n4 B     X         4      4\n5 B     Y         5      5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n:::\n:::\n\n## Mutate vs. Summarize (with grouping) {.smaller}\n\nCompute the mean of `C3` by value of `C1` and `C2`.\n\n::: columns\n::: {.column width=\"25%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  C1    C2       C3\n  <chr> <chr> <int>\n1 A     X         1\n2 A     Y         2\n3 A     X         3\n4 B     X         4\n5 B     Y         5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  mutate(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n# Groups:   C1, C2 [4]\n  C1    C2       C3 mean_3\n  <chr> <chr> <int>  <dbl>\n1 A     X         1      2\n2 A     Y         2      2\n3 A     X         3      2\n4 B     X         4      4\n5 B     Y         5      5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  summarise(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'C1'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n# Groups:   C1 [2]\n  C1    C2    mean_3\n  <chr> <chr>  <dbl>\n1 A     X          2\n2 A     Y          2\n3 B     X          4\n4 B     Y          5\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## More about summarize and grouping {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  summarise(mean_3 = mean(C3))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'C1'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n# Groups:   C1 [2]\n  C1    C2    mean_3\n  <chr> <chr>  <dbl>\n1 A     X          2\n2 A     Y          2\n3 B     X          4\n4 B     Y          5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  summarise(mean_3 = mean(C3), \n            .groups = \"drop\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  C1    C2    mean_3\n  <chr> <chr>  <dbl>\n1 A     X          2\n2 A     Y          2\n3 B     X          4\n4 B     Y          5\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## More about summarize and grouping {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  summarise(mean_3 = mean(C3)) |>\n  summarise(mean_again = mean(mean_3))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'C1'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  C1    mean_again\n  <chr>      <dbl>\n1 A            2  \n2 B            4.5\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(C1, C2) |>\n  summarise(mean_3 = mean(C3), \n            .groups = \"drop\")|>\n  summarise(mean_again = mean(mean_3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  mean_again\n       <dbl>\n1       3.25\n```\n\n\n:::\n:::\n\n:::\n:::\n\n# Joins\n\n## Joining: Example Data\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n![](images/venn-1-empty.png)\n:::\n:::\n\n## Joining: Left Join\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n> left_join(df_X, df_Y)\n\n| id  | X   | Y    |\n|-----|-----|------|\n| 1   | X1  | Y1   |\n| 2   | X2  | Y2   |\n| 3   | X3  | *NA* |\n:::\n:::\n\n## Joining: Left Join\n\n::: columns\n::: {.column width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column width=\"50%\"}\n> left_join(df_X, df_Y)\n\n| id  | X   | Y    |\n|-----|-----|------|\n| 1   | X1  | Y1   |\n| 2   | X2  | Y2   |\n| 3   | X3  | *NA* |\n:::\n:::\n\n<!-- small Venn diagram in the bottom-right -->\n<div style=\"\n  position: absolute;\n  bottom: 80px;\n  right: -90px;\n  width: 280px;           /* adjust to taste */\n  pointer-events: none;  /* so it never steals clicks */\n\">\n  <img src=\"images/venn-1.png\" style=\"width: 100%; height: auto;\" />\n</div>\n\n\n## Joining: Right Join\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n> right_join(df_X, df_Y)\n\n| id  | X    | Y   |\n|-----|------|-----|\n| 1   | X1   | Y1  |\n| 2   | X2   | Y2  |\n| 4   | *NA* | Y4  |\n:::\n:::\n\n## Joining: Right Join\n\n::: columns\n::: {.column width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column  width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column width=\"50%\"}\n> right_join(df_X, df_Y)\n\n| id  | X    | Y   |\n|-----|------|-----|\n| 1   | X1   | Y1  |\n| 2   | X2   | Y2  |\n| 4   | *NA* | Y4  |\n:::\n:::\n\n<!-- small Venn diagram in the bottom-right -->\n<div style=\"\n  position: absolute;\n  bottom: 80px;\n  right: -90px;\n  width: 280px;           /* adjust to taste */\n  pointer-events: none;  /* so it never steals clicks */\n\">\n  <img src=\"images/venn-1.png\" style=\"width: 100%; height: auto;\" />\n</div>\n\n## Joining: Full Join\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n> right_join(df_X, df_Y)\n\n| id  | X    | Y   |\n|-----|------|-----|\n| 1   | X1   | Y1  |\n| 2   | X2   | Y2  |\n| 3   | X3   | *NA*|\n| 4   | *NA* | Y4  |\n:::\n:::\n\n## Joining: Full Join\n\n::: columns\n::: {.column width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column  width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column width=\"50%\"}\n> right_join(df_X, df_Y)\n\n| id  | X    | Y   |\n|-----|------|-----|\n| 1   | X1   | Y1  |\n| 2   | X2   | Y2  |\n| 3   | X3   | *NA*|\n| 4   | *NA* | Y4  |\n:::\n:::\n\n<!-- small Venn diagram in the bottom-right -->\n<div style=\"\n  position: absolute;\n  bottom: 80px;\n  right: -90px;\n  width: 280px;           /* adjust to taste */\n  pointer-events: none;  /* so it never steals clicks */\n\">\n  <img src=\"images/venn-1.png\" style=\"width: 100%; height: auto;\" />\n</div>\n\n\n## Joining: Inner Join\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n> inner_join(df_X, df_Y)\n\n| id  | X   | Y   |\n|-----|-----|-----|\n| 1   | X1  | Y1  |\n| 2   | X2  | Y2  |\n:::\n:::\n\n## Joining: Inner Join\n\n::: columns\n::: {.column width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column width=\"50%\"}\n> inner_join(df_X, df_Y)\n\n| id  | X   | Y   |\n|-----|-----|-----|\n| 1   | X1  | Y1  |\n| 2   | X2  | Y2  |\n:::\n:::\n\n<!-- small Venn diagram in the bottom-right -->\n<div style=\"\n  position: absolute;\n  bottom: 80px;\n  right: -90px;\n  width: 280px;           /* adjust to taste */\n  pointer-events: none;  /* so it never steals clicks */\n\">\n  <img src=\"images/venn-1.png\" style=\"width: 100%; height: auto;\" />\n</div>\n\n## Joining: Semi Join\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n> semi_join(df_X, df_Y)\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n:::\n\n:::\n\n## Joining: Semi Join\n\n::: columns\n::: {.column width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column width=\"50%\"}\n> semi_join(df_X, df_Y)\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n:::\n:::\n\n<!-- small Venn diagram in the bottom-right -->\n<div style=\"\n  position: absolute;\n  bottom: 80px;\n  right: -90px;\n  width: 280px;           /* adjust to taste */\n  pointer-events: none;  /* so it never steals clicks */\n\">\n  <img src=\"images/venn-1.png\" style=\"width: 100%; height: auto;\" />\n</div>\n\n\n## Joining: Anti Join\n\n::: columns\n::: {.column .fragment width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column .fragment width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column .fragment width=\"50%\"}\n> anti_join(df_X, df_Y)\n\n| id  | X   |\n|-----|-----|\n| 3   | X3  |\n:::\n:::\n\n\n## Joining: Anti Join\n\n::: columns\n::: {.column width=\"25%\"}\n> df_X\n\n| id  | X   |\n|-----|-----|\n| 1   | X1  |\n| 2   | X2  |\n| 3   | X3  |\n:::\n\n::: {.column width=\"25%\"}\n> df_Y\n\n| id  | Y   |\n|-----|-----|\n| 1   | Y1  |\n| 2   | Y2  |\n| 4   | Y4  |\n:::\n\n::: {.column width=\"50%\"}\n> anti_join(df_X, df_Y)\n\n\n| id  | X   |\n|-----|-----|\n| 3   | X3  |\n:::\n:::\n\n<!-- small Venn diagram in the bottom-right -->\n<div style=\"\n  position: absolute;\n  bottom: 80px;\n  right: -90px;\n  width: 280px;           /* adjust to taste */\n  pointer-events: none;  /* so it never steals clicks */\n\">\n  <img src=\"images/venn-1.png\" style=\"width: 100%; height: auto;\" />\n</div>\n\n## Summary of Join Types\n\n![](images/left.png)\n\n\n## Try it!\n\n::: columns\n::: {.column width=\"35%\"}\n> df_contacts\n\n| person | phone |\n|--------|-------|\n| Marie  | 1     |\n| Katie  | 2     |\n| John   | 3     |\n| John   | 4     |\n:::\n\n::: {.column width=\"30%\"}\n> df_texts\n\n| phone | texts |\n|-------|-------|\n| 1     | 100   |\n| 2     | 700   |\n| 4     | 400   |\n| 5     | 50    |\n:::\n:::\n\n## Remember...\n\nRemember: sometimes we need to specify which columns we are joining with.\n\n## Review: Pivot Longer {.smaller}\n\n::: columns\n::: {.column .fragment width=\"65%\"}\n> How do we go from this...\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  degree `2011` `2012` `2013` `2014` `2015`\n  <fct>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 AB2        NA      1     NA     NA      4\n2 AB          2      2      4      1      3\n3 BS2         2      6      1     NA      5\n4 BS          5      9      4     13     10\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column .fragment width=\"29%\"}\n> ...to this?\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 56 × 3\n  degree  year     n\n  <fct>  <dbl> <dbl>\n1 AB2     2011    NA\n2 AB2     2012     1\n3 AB2     2013    NA\n4 AB2     2014    NA\n5 AB2     2015     4\n# ℹ 51 more rows\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## Reverse It: Pivot Wider {.smaller}\n\n::: columns\n::: {.column .fragment width=\"65%\"}\n> How do we get back to this...\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  degree `2011` `2012` `2013` `2014` `2015`\n  <fct>   <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 AB2        NA      1     NA     NA      4\n2 AB          2      2      4      1      3\n3 BS2         2      6      1     NA      5\n4 BS          5      9      4     13     10\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column .fragment width=\"29%\"}\n> ... from this?\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 56 × 3\n  degree  year     n\n  <fct>  <dbl> <dbl>\n1 AB2     2011    NA\n2 AB2     2012     1\n3 AB2     2013    NA\n4 AB2     2014    NA\n5 AB2     2015     4\n# ℹ 51 more rows\n```\n\n\n:::\n:::\n\n:::\n:::\n\n\n# AE\n\nKahoot!\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}