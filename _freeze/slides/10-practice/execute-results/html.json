{
  "hash": "968f3613250517203b449be23647ddb2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Midterm + More Practice!\"\nsubtitle: \"Lecture 10\"\ndate: \"2025-05-29\"\nformat: \n  revealjs:\n    output-file: 10-practice-slides.html\nauto-stretch: false\n---\n\n\n\n## Announcements\n\n-   I will not hold office hours on Tuesday, June 3rd: this is when you have your take home!\n-   Replacement midterm review office hours: June 2nd (3:30 - 5:30)\n-   Be in class and lab on Monday!!!!\n-   Tomorrow: Review game!\n\n## Midterm Exam 1 {.smaller}\n\nWorth 20% of your final grade; consists of two parts:\n\n-   **In-class**: worth 70% of the Midterm 1 grade;\n\n-   **Take-home**: worth 30% of the Midterm 1 grade.\n\n## Material {.smaller}\n\nEverything we have done so far:\n\n-   plotting data with `ggplot` and interpreting plots\n-   computing and understanding summary statistics\n-   transforming data (row/column/grouping operations)\n-   pivoting & joining data\n-   data types/classes\n-   importing data\n-   *Monday's class*: *data science ethics*\n\n## In-class\n\n::: incremental\n-   All multiple choice\n\n-   You get both sides of one 8.5\" x 11\" note sheet that you and only you created (written, typed, iPad, etc)\n:::\n\n. . .\n\n::: callout-important\nIf you have testing accommodations, make sure I get proper documentation from SDAO and make appointments in the Testing Center ASAP. The appointment should overlap substantially with our class time if possible.\n:::\n\n## What should I put on my cheat sheet? {.smaller}\n\n::: incremental\n-   description of common functions;\n-   examples of function usage;\n-   description of different visualizations: how to interpret, and what to use when;\n-   doodles;\n-   cute words of affirmation.\n:::\n\n. . .\n\n::: callout-warning\nDon't waste space on the details of any specific applications or datasets we've seen (penguins, Bechdel, gerrymandering, midwest, etc).\nAnything we want you to know about a particular application will be introduced from scratch within the exam.\n:::\n\n## Example in-class question\n\nWhich command can replace a pre-existing column in a data frame with a new and improved version of itself?\n\na.  `group_by`\nb.  `summarize`\nc.  `pivot_wider`\nd.  `geom_replace`\ne.  `mutate`\n\n## Example in-class question {.smaller}\n\n\n::: {.cell}\n\n:::\n\n\n::: columns\n::: {.column width=\"40%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n      x y    \n  <dbl> <chr>\n1     1 Marie\n2     2 Marie\n3     3 Katie\n4     4 Mary \n5     5 Mary \n6     6 Mary \n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |>\n  group_by(y) |>\n  summarize(xbar = mean(x))\n```\n:::\n\n\nHow many rows will this output have?\n\na.  1\nb.  2\nc.  3\nd.  6\ne.  11\n:::\n:::\n\n## Example in-class question {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\nWhich box plot is visualizing the same data as the histogram?\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Example in-class question {.smaller}\n\nWhat code could have been used to produce `df_result`?\nSelect all that apply.\n\n::: columns\n::: {.column width=\"25%\"}\n`df_X`\n\n| state | year |\n|-------|------|\n| LA    | 2025 |\n| NC    | 2025 |\n| LA    | 2024 |\n:::\n\n::: {.column width=\"25%\"}\n`df_Y`\n\n| state | region |\n|-------|--------|\n| LA    | south  |\n| NC    | south  |\n| CA    | west   |\n:::\n\n::: {.column width=\"50%\"}\n`df_result`\n\n| state | year | region |\n|-------|------|--------|\n| LA    | 2025 | south  |\n| NC    | 2025 | south  |\n| LA    | 2024 | south  |\n:::\n:::\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\na.  `left_join(df_X, df_Y)`\\\nb.  `right_join(df_X, df_Y)`\\\nc.  `full_join(df_X, df_Y)`\\\n:::\n\n::: {.column width=\"50%\"}\nd.  `anti_join(df_Y, df_X)`\\\ne.  `right_join(df_Y, df_X)`\\\n:::\n:::\n\n## Take-home\n\n::: incremental\n-   It will be just like a lab, but shorter;\n-   Completely open-resource, but citation policies apply;\n-   Absolutely no collaboration of any kind;\n-   Seek help by posting *privately* on Ed;\n-   Submit your final PDF to Gradescope in the usual way.\n:::\n\n## Reminder: conduct policies\n\n::: incremental\n-   Uncited use of outside resources or inappropriate collaboration will result in a zero and be referred to the conduct office;\n-   If a conduct violation of any kind is discovered, your final letter grade in the course will be permanently reduced (A- down to B+, B+ down to B, etc);\n-   If folks share solutions, all students involved will be penalized equally, the sharer the same as the recipient.\n:::\n\n## Things you can do to study\n\n::: incremental\n-   **Practice problems**: released Thursday February 13;\n-   **Attend class tomorrow**: review game\n-   **Old labs**: correct parts where you lost points;\n-   **Old AEs**: complete tasks we didn't get to and compare with key;\n-   **Code along**: watch these videos specifically;\n-   **Textbook**: odd-numbered exercises in the back of IMS Chs. 1, 4, 5, 6\n:::\n\n# Let's Practice!\n\n## Today's Goals:\n\n-   **Goal 1:** ✨Beautify✨ the plot from AE-08: plotting + ***factors***\n-   **Goal 2:** Practice ***pivoting*** with AE-08 data\n-   **Goal 3:** Practice data ***transformation*** and working with ***characters*** - sales data from yesterday\n\n## Goal 1: Beautify AE-08 Plot {.smaller}\n\nData:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndurham_climate \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   month     avg_high_f avg_low_f precip\n   <chr>          <dbl>     <dbl>  <dbl>\n 1 January           49        28   4.45\n 2 February          53        29   3.7 \n 3 March             62        37   4.69\n 4 April             71        46   3.43\n 5 May               79        56   4.61\n 6 June              85        65   4.02\n 7 July              89        70   3.94\n 8 August            87        68   4.37\n 9 September         81        60   4.37\n10 October           71        47   3.7 \n11 November          62        37   3.39\n12 December          53        30   3.43\n```\n\n\n:::\n:::\n\n\n## Goal 1: Beautify AE-08 Plot {.smaller}\n\nOriginal Plot:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Goal 1: Beautify AE-08 Plot {.smaller}\n\nReleveling Months:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Goal 1: Beautify AE-08 Plot {.smaller}\n\nGoal:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Goal: Beautify AE-08 Plot {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 4\n   month     avg_high_f avg_low_f precip\n   <fct>          <dbl>     <dbl>  <dbl>\n 1 January           49        28   4.45\n 2 February          53        29   3.7 \n 3 March             62        37   4.69\n 4 April             71        46   3.43\n 5 May               79        56   4.61\n 6 June              85        65   4.02\n 7 July              89        70   3.94\n 8 August            87        68   4.37\n 9 September         81        60   4.37\n10 October           71        47   3.7 \n11 November          62        37   3.39\n12 December          53        30   3.43\n```\n\n\n:::\n:::\n\n:::\n:::\n\n## The Code...{.smaller}\n\nTake a look at the printout! What does each highlighted portion do?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Task 2: High/Low lines\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## Task 2: High/Low lines{.smaller}\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-practice_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  month    avg_high_f avg_low_f precip season\n  <fct>         <dbl>     <dbl>  <dbl> <fct> \n1 January          49        28   4.45 Winter\n2 February         53        29   3.7  Winter\n3 March            62        37   4.69 Spring\n```\n\n\n:::\n:::\n\n\n## Task 2: Goal - Pivot!!! {.smaller}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  month    avg_high_f avg_low_f precip season\n  <fct>         <dbl>     <dbl>  <dbl> <fct> \n1 January          49        28   4.45 Winter\n2 February         53        29   3.7  Winter\n3 March            62        37   4.69 Spring\n4 April            71        46   3.43 Spring\n5 May              79        56   4.61 Spring\n```\n\n\n:::\n:::\n\n\n<br> \n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n  month    precip season temp_type   temp\n  <fct>     <dbl> <fct>  <chr>      <dbl>\n1 January    4.45 Winter avg_high_f    49\n2 January    4.45 Winter avg_low_f     28\n3 February   3.7  Winter avg_high_f    53\n4 February   3.7  Winter avg_low_f     29\n5 March      4.69 Spring avg_high_f    62\n```\n\n\n:::\n:::\n\n\n## Task 2: Goal - Pivot!!! {.smaller}\n\nAdd your pivot code to today's AE. Check out the plotting code! What is going on?\n",
    "supporting": [
      "10-practice_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}