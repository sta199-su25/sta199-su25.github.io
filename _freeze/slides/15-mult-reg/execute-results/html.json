{
  "hash": "72b3121dd10a2bd97c659f1364faa3d6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multiple Linear Regression\"\nsubtitle: \"Lecture 15\"\ndate: \"2025-06-05\"\nformat: \n  revealjs:\n    output-file: 15-mult-reg-slides.html\n    pdf-separate-fragments: true\n---\n\n\n\n\n\n## Announcements\n\n-   Office hours today: 1-3pm; old chem 203\n\n-   Math warning: logarithms; natural log\n\n-   Let me know if your Milestone 2 is ready to grade!\n\n## Simple Linear Regression\n\n-   A single quantitative $x$ and $y$\n\n-   Population Model:\n\n    $$\n    Y = \\beta_0 + \\beta_1 X + \\epsilon\n    $$\n\n-   Regression Line:\n\n    $$\n    \\hat{Y} = b_0 + b_1 X\n    $$\n\n# Regression with Categorical Variables\n\n## Regression with Categorical Variables {.smaller}\n\n*It's possible to want to model an outcome based on a categorical predictor:*\n\n$$ Y = \\beta_0 + \\beta_1 X + \\epsilon$$\n\nWhat does this even mean when $x$ is categorical ???\n\n# Movie Example\n\n## Example Data\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 146 √ó 3\n   critics audience imdb_cat\n     <int>    <int> <chr>   \n 1      74       86 High    \n 2      85       80 Med     \n 3      80       90 High    \n 4      18       84 Low     \n 5      14       28 Low     \n 6      63       62 Med     \n 7      42       53 Med     \n 8      86       64 Med     \n 9      99       82 High    \n10      89       87 High    \n# ‚Ñπ 136 more rows\n```\n\n\n:::\n:::\n\n\n## Example Data: Visualization {.smaller}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](15-mult-reg_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Let's just try it... {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies_fit <- linear_reg() |>\n  fit(audience ~ imdb_cat, data = movie_scores)\n\ntidy(movies_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     85.1      1.73     49.1  2.29e-91\n2 imdb_catLow    -45.8      2.57    -17.8  3.89e-38\n3 imdb_catMed    -21.6      2.20     -9.83 9.83e-18\n```\n\n\n:::\n:::\n\n\nWhat's going on??\n\n## What's going on? {.smaller}\n\nVariable `imdb_cat` can take values *high, med,* or *low.* We want to model variable `audience` based on `imdb_cat`.\n\n. . .\n\nWe tell R to fit `audience ~ imdb_cat` ... now what?\n\n. . .\n\n[We get ***dummy variables!!!***]{style=\"background-color: #fcefb3\"}\n\n## Dummy Variables {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n| audience | imdb_cat |\n|----------|----------|\n| 70       | high     |\n| 40       | low      |\n| 50       | med      |\n| 80       | high     |\n:::\n:::\n\n## Dummy Variables {.smaller}\n\n::: columns\n::: {.column width=\"50%\"}\n| audience | imdb_cat |\n|----------|----------|\n| 70       | high     |\n| 40       | low      |\n| 50       | med      |\n| 80       | high     |\n:::\n\n::: {.column width=\"50%\"}\n| audience | imdb_cat | high | low | med |\n|----------|----------|------|-----|-----|\n| 70       | high     |      |     |     |\n| 40       | low      |      |     |     |\n| 50       | med      |      |     |     |\n| 80       | high     |      |     |     |\n:::\n:::\n\n. . .\n\n::: callout-important\nIn a given row, only *one* of the dummy variables for a given categorical variable can equal 1.\n:::\n\n## Write the regression output: {.smaller}\n\nUsing the categorical variable?\n\n$$\n\\widehat{audience} = b_0 + b_1 \\times imdb\\_cat\n$$\n\n<br><br><br>\n\n‚ùå WRONG ‚ùå üõë DON'T DO THIS üõë ‚ùóSERIOUSLY ‚ùóüíî Don't make me sad :( üíî\n\n## What will a regression output look like? {.smaller}\n\nUse the dummy variables!!\n\n$$\n\\widehat{audience} = b_0 + b_1 \\times low + b_2  \\times med\n$$\n\n## What will a regression output look like? {.smaller}\n\nUse the dummy variables!!\n\n$$\n\\widehat{audience} = b_0 + b_1 \\times low + b_2 \\times med\n$$\n\n<br><br><br>\n\n::: callout-important\nAll levels except the **baseline level** will show up in the output.\nHere, high is the **baseline level.** You will be able to identify the baseline by looking at the data and the output!\n:::\n\n## Interpret the output: {.smaller}\n\n$$\n\\widehat{audience} = b_0 + b_1 \\times low + b_2 \\times med\n$$\n\n-   (Intercept) $b_0$ ?\n\n<br>\n\n-   (Slope) $b_1$ ?\n\n<br>\n\n-   (Slope) $b_2$ ?\n\n## Let's plug in some numbers: {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies_fit <- linear_reg() |>\n  fit(audience ~ imdb_cat, data = movie_scores)\n\ntidy(movies_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 √ó 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)     85.1      1.73     49.1  2.29e-91\n2 imdb_catLow    -45.8      2.57    -17.8  3.89e-38\n3 imdb_catMed    -21.6      2.20     -9.83 9.83e-18\n```\n\n\n:::\n:::\n\n\n<br>\n\n$$\n\\widehat{audience} = 85.1 -45.8 \\times low -21.6 \\times med\n$$\n\n## Interpretation with numbers: {.smaller}\n\n$$\n\\widehat{audience} = 85.1 -45.8 \\times low -21.6 \\times med\n$$\n\n<br>\n\n-   Expected audience score of high IMDB rating movies: 85.1\n\n-   Movies with low IMDB ratings are expected to have, on average, audience scores 45.8 points lower than movies with high IMDB ratings\n\n-   Movies with medium IMDB ratings are expected to have, on average, audience scores 21.6 points lower than movies with high IMDB ratings\n\n# In General\n\n## Generally: {.smaller}\n\nPredicting [continuous outcome]{style=\"background-color: #fcefb3\"} $y$ using [categorical explanatory variable]{style=\"background-color: #fcefb3\"} $x$ with levels $cat_0, \\ldots cat_L$:\n\n## Generally: {.smaller}\n\nPredicting [continuous outcome]{style=\"background-color: #fcefb3\"} $y$ using [categorical explanatory variable]{style=\"background-color: #fcefb3\"} $x$ with levels $cat_0, \\ldots cat_L$:\n\n$$\n\\hat{y} = b_0 + b_1 \\times cat_1 + b_2 \\times cat_2 \\ldots + b_L \\times cat_L\n$$\n\n## Generally: {.smaller}\n\nPredicting [continuous outcome]{style=\"background-color: #fcefb3\"} $y$ using [categorical explanatory variable]{style=\"background-color: #fcefb3\"} $x$ with levels $cat_0, \\ldots cat_L$:\n\n$$\n\\hat{y} = b_0 + b_1 \\times cat_1 + b_2 \\times cat_2 \\ldots + b_L \\times cat_L\n$$\n\n-   $b_0$ : On average, expected $y$ for an entry of **baseline level** $cat_0$\n\n<br>\n\n-   $b_1$: On average, we expect the $y$ for an observation of level $cat_1$ to be be $b_1$ larger (smaller if negative) than a baseline $cat_0$ observation <br>\n\n<br>\n\n-   and so on....\n\n## Back to AE-12! {.smaller}\n\n# Multiple Predictors\n\n## More than 1 predictor variable {.smaller}\n\n-   So far, we have looked at models with one predictor variable.\n    What if we want multiple?\n\n-   First, I will show what happens with one of each type of predictor - numerical and categorical\n\n-   We can also have:\n\n    -   More than 2 predictors (might appear in your projects! will appear in real life!)\n\n    -   Different combinations of predictor types (all numerical, all categorical, some of each...)\n\n## Approach: {.smaller}\n\n-   Teach by example\n\n-   You might see a case in lab that we haven't seen in class - don't panic!\n    The same concepts will apply.\n\n# Penguins Example\n\n## Penguins so far {.smaller}\n\n-   So far, we have seen body mass predicted by:\n\n    -   Flipper length\n\n    -   Island\n\n-   What if we should use both for prediction??\n\n## Penguins Data Visualization {.smaller}\n\nBoth of these use `flipper_length_mm` *and* `island` to predict `body_mass_g`:\n\n\n\n\n::: {.cell layout-ncol=\"2\"}\n::: {.cell-output-display}\n![](15-mult-reg_files/figure-html/additive-interaction-viz-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](15-mult-reg_files/figure-html/additive-interaction-viz-2.png){width=672}\n:::\n:::\n\n\n## The additive model: parallel lines, one for each island {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbm_fl_island_fit <- linear_reg() |>\n  fit(body_mass_g ~ flipper_length_mm + island, data = penguins)\n\ntidy(bm_fl_island_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 √ó 5\n  term              estimate std.error statistic  p.value\n  <chr>                <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)        -4625.     392.      -11.8  4.29e-27\n2 flipper_length_mm     44.5      1.87     23.9  1.65e-74\n3 islandDream         -262.      55.0      -4.77 2.75e- 6\n4 islandTorgersen     -185.      70.3      -2.63 8.84e- 3\n```\n\n\n:::\n:::\n\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -4625 &+ 44.5 \\times flipper~length \\\\\n&- 262 \\times Dream \\\\\n&- 185 \\times Torgersen\n\\end{aligned}\n$$\n\n## Where do the three lines come from? {.smaller}\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -4625 &+ 44.5 \\times flipper~length \\\\\n&- 262 \\times Dream \\\\\n&- 185 \\times Torgersen\n\\end{aligned}\n$$\n\n. . .\n\nIf penguin is from Biscoe, Dream = 0 and Torgersen = 0:\n\n. . .\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -4625 &+ 44.5 \\times flipper~length\n\\end{aligned}\n$$\n\n. . .\n\nIf penguin is from Dream, Dream = 1 and Torgersen = 0:\n\n. . .\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -4887 &+ 44.5 \\times flipper~length\n\\end{aligned}\n$$\n\n. . .\n\nIf penguin is from Torgersen, Dream = 0 and Torgersen = 1:\n\n. . .\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -4810 &+ 44.5 \\times flipper~length\n\\end{aligned}\n$$\n\n## How do we interpret this in English? {.smaller}\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -4625 &+ 44.5 \\times flipper~length \\\\\n&- 262 \\times Dream \\\\\n&- 185 \\times Torgersen\n\\end{aligned}\n$$\n\n-   Intercept: We expect, [on average]{.underline}, penguins from **Biscoe** island with **0mm flipper length** to weigh **-4625 grams**\n\n. . .\n\n-   Slope (flipper length) : ***Holding island constant,*** we expect, on average, a **1mm** increase in flipper length corresponds to a **44.5g** increase in body mass\n\n. . .\n\n-   Slope (dream) : ***Holding flipper length constant,*** we expect, [on average]{.underline}, a penguin from the **Dream island** to be **262g lighter** than a penguin from **Biscoe** island.\n\n. . .\n\n-   Slope (torgersen) : You try!\n\n## Prediction\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_penguin <- tibble(\n  flipper_length_mm = 200,\n  island = \"Torgersen\"\n)\n\npredict(bm_fl_island_fit, new_data = new_penguin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 √ó 1\n  .pred\n  <dbl>\n1 4099.\n```\n\n\n:::\n:::\n\n\n## The interaction model: different slopes for each island {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbm_fl_island_int_fit <- linear_reg() |>\n  fit(body_mass_g ~ flipper_length_mm * island, data = penguins)\n\ntidy(bm_fl_island_int_fit) |> select(term, estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 √ó 2\n  term                              estimate\n  <chr>                                <dbl>\n1 (Intercept)                        -5464. \n2 flipper_length_mm                     48.5\n3 islandDream                         3551. \n4 islandTorgersen                     3218. \n5 flipper_length_mm:islandDream        -19.4\n6 flipper_length_mm:islandTorgersen    -17.4\n```\n\n\n:::\n:::\n\n\n. . .\n\n$$\n\\begin{aligned}\n\\widehat{body~mass} = -5464 + 48.5 \\times flipper~length &+ 3551 \\times Dream \\\\\n&+ 3218 \\times Torgersen \\\\\n&- 19.4 \\times flipper~length*Dream \\\\\n&- 17.4 \\times flipper~length*Torgersen\n\\end{aligned}\n$$\n",
    "supporting": [
      "15-mult-reg_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}