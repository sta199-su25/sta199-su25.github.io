{
  "hash": "f299e57953d51f97f5263aab2bc130f3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 16: Houses in Duke Forest\"\n---\n\nIn this application exercise, we will use bootstrapping to construct confidence intervals.\n\n## Packages\n\nWe will use **tidyverse** and **tidymodels** for data exploration and modeling, respectively, and the **openintro** package for the data, and the **knitr** package for formatting tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\nlibrary(knitr)\n```\n:::\n\n\n## Data\n\nThe data are on houses that were sold in the Duke Forest neighborhood of Durham, NC around November 2020.\nIt was originally scraped from Zillow, and can be found in the `duke_forest` data set in the **openintro** R package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(duke_forest)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 98\nColumns: 13\n$ address    <chr> \"1 Learned Pl, Durham, NC 27705\", \"1616 Pinecrest Rd, Durha…\n$ price      <dbl> 1520000, 1030000, 420000, 680000, 428500, 456000, 1270000, …\n$ bed        <dbl> 3, 5, 2, 4, 4, 3, 5, 4, 4, 3, 4, 4, 3, 5, 4, 5, 3, 4, 4, 3,…\n$ bath       <dbl> 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 5.0, 3.0, 5.0, 2.0, 3.0, 3.0,…\n$ area       <dbl> 6040, 4475, 1745, 2091, 1772, 1950, 3909, 2841, 3924, 2173,…\n$ type       <chr> \"Single Family\", \"Single Family\", \"Single Family\", \"Single …\n$ year_built <dbl> 1972, 1969, 1959, 1961, 2020, 2014, 1968, 1973, 1972, 1964,…\n$ heating    <chr> \"Other, Gas\", \"Forced air, Gas\", \"Forced air, Gas\", \"Heat p…\n$ cooling    <fct> central, central, central, central, central, central, centr…\n$ parking    <chr> \"0 spaces\", \"Carport, Covered\", \"Garage - Attached, Covered…\n$ lot        <dbl> 0.97, 1.38, 0.51, 0.84, 0.16, 0.45, 0.94, 0.79, 0.53, 0.73,…\n$ hoa        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ url        <chr> \"https://www.zillow.com/homedetails/1-Learned-Pl-Durham-NC-…\n```\n\n\n:::\n:::\n\n\n## Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_fit <- _____ () |>\n  set_engine(_____) |>\n  fit(price ~ area, data = duke_forest)\n\ntidy(df_fit)\n```\n:::\n\n\n## Bootstrap confidence interval\n\n### 1. Calculate the observed fit (slope)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nobserved_fit <- duke_forest |>\n  specify(____ ~ _____) |>\n  fit()\n\nobserved_fit\n```\n:::\n\n\n### 2. Take *n* bootstrap samples and fit models to each one.\n\nFill in the code, then set `eval: true` .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn = 100\nset.seed(1234)\n\nboot_fits <- duke_forest |>\n  _____(price ~ area) |>\n  ______(reps = _____, type = ______) |>\n  fit()\n\nboot_fits\n```\n:::\n\n\n-   Why do we set a seed before taking the bootstrap samples?\n\n-   Make a histogram of the bootstrap samples to visualize the bootstrap distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboot_fits |>\n  filter(_____  == _______) |>\n  ggplot(aes(x = ______ )) +\n  geom_histogram()\n```\n:::\n\n\n### 3. Compute the 95% confidence interval as the middle 95% of the bootstrap distribution\n\nFill in the code, then set `eval: true` .\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = _____, \n  level = ______,\n  type = ______\n)\n```\n:::\n\n\n## Changing confidence level\n\n### Modify the code from Step 3 to create a 90% confidence interval.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = observed_fit, \n  level = ____,\n  type = \"percentile\"\n)\n```\n:::\n\n\n### Modify the code from Step 3 to create a 99% confidence interval.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_confidence_interval(\n  boot_fits, \n  point_estimate = observed_fit, \n  level = _____,\n  type = \"percentile\"\n)\n```\n:::\n\n\n-   Which confidence level produces the most accurate confidence interval (90%, 95%, 99%)?\n    Explain\n\n-   Which confidence level produces the most precise confidence interval (90%, 95%, 99%)?\n    Explain\n\n-   If we want to be very certain that we capture the population parameter, should we use a wider or a narrower interval?\n    What drawbacks are associated with using a wider interval?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}