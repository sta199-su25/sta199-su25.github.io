{
  "hash": "47308d3e417c704b2ed0b98464f34b6b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 13: Modeling housing prices\"\nsubtitle: \"Suggested answers\"\n---\n\n::: callout-important\nThese are suggested answers.\nThis document should be used as reference only, it's not designed to be an exhaustive key.\n:::\n\nIn this application exercise we will be studying housing prices.\nThe dataset is a cleaned version of publicly available real estate data.\nWe will use **tidyverse** and **tidymodels** for data exploration and modeling, respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(modeldata)\n```\n:::\n\n\nWe will use the `ames_housing` dataset from the **modeldata** package.\n\nBefore we use the dataset, we'll make a few transformations to it.\n\n-   **Your turn:** Review the code below with your neighbor and write a summary of the data transformation pipeline.\n\n*Add response here.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(ames)\nhousing <- ames |>\n  select(Sale_Price, Gr_Liv_Area, Bldg_Type, Bedroom_AbvGr, Paved_Drive, Exter_Cond) |>\n  mutate(home_type = fct_collapse(Bldg_Type,\n    \"House\" = c(\"OneFam\", \"TwnhsE\"),\n    \"Townhouse\" = \"Twnhs\",\n    \"Duplex\" = \"Duplex\"\n  )) |>\n  select(-Bldg_Type) |>\n  rename(price = Sale_Price, sqft = Gr_Liv_Area, bedrooms = Bedroom_AbvGr) |>\n  filter(home_type %in% c(\"House\", \"Townhouse\", \"Duplex\"))\n```\n:::\n\n\nHere is a glimpse at the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(housing)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,868\nColumns: 6\n$ price       <int> 215000, 105000, 172000, 244000, 189900, 195500, 213500, 19…\n$ sqft        <int> 1656, 896, 1329, 2110, 1629, 1604, 1338, 1280, 1616, 1804,…\n$ bedrooms    <int> 3, 2, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 2, 1, 4, 4, 1, 2, 3…\n$ Paved_Drive <fct> Partial_Pavement, Paved, Paved, Paved, Paved, Paved, Paved…\n$ Exter_Cond  <fct> Typical, Typical, Typical, Typical, Typical, Typical, Typi…\n$ home_type   <fct> House, House, House, House, House, House, House, House, Ho…\n```\n\n\n:::\n:::\n\n\n# Get to know the data\n\n-   **Your turn:** What is a typical house price in this dataset? What are some common square footage sizes? What types of homes are most common? Additionally, explore at least 1-2 other features that could be interesting. Share your findings!\n\n\n::: {.cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\nggplot(housing, aes(x = price)) +\n  geom_histogram(binwidth = 20000)\n```\n\n::: {.cell-output-display}\n![](ae-13-github-A_files/figure-html/explore-housing-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(housing, aes(x = sqft)) +\n  geom_histogram(binwidth = 250)\n```\n\n::: {.cell-output-display}\n![](ae-13-github-A_files/figure-html/explore-housing-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(housing, aes(x = home_type)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ae-13-github-A_files/figure-html/explore-housing-3.png){width=672}\n:::\n:::\n\n\n# Price vs. square footage\n\nHow can we use square footage to model/predict pricing?\nHere is the model:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_sqft_fit <- linear_reg() |>\n  fit(price ~ sqft, data = housing)\n\ntidy(price_sqft_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   11430.   3271.        3.49 0.000482\n2 sqft            114.      2.07     55.0  0       \n```\n\n\n:::\n:::\n\n\nAnd here is the model visualized:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(housing, aes(x = sqft, y = price)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ae-13-github-A_files/figure-html/price-sqft-plot-1.png){width=672}\n:::\n:::\n\n\n-   **Your turn:** Write the equation of the model in mathematical notation. Then, interpret the intercept and slope.\n\n$$ \\widehat{price} = 11430.20 + 113.76 \\times sqft $$\n\n-   **Intercept**: On average, we expect a home that is 0 square feet to cost \\$11430.\n    This does not make sense in the context of the data - we won't have a home that is 0 sq.\n    ft.\n\n-   **Slope:** On average, for every 1 additional square foot, we expect hosue price to increase by \\$113.76\n\n# Price vs. home type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_type_fit <- linear_reg() |>\n  fit(price ~ home_type, data = housing)\n\ntidy(price_type_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  term               estimate std.error statistic  p.value\n  <chr>                 <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)         185469.     1537.    121.   0       \n2 home_typeDuplex     -45661.     7746.     -5.89 4.20e- 9\n3 home_typeTownhouse  -49535.     8036.     -6.16 8.06e-10\n```\n\n\n:::\n:::\n\n\n-   **Your turn:** Write the equation of the model in mathematical notation. Then, interpret the intercept and each coefficient in context.\n\n$$\n\\widehat{price} = 185469.48 - 45660.54 \\times Duplex - 49535.42 \\times Townhouse\n$$\n\n-   **Intercept:** On average, we expect houses to cost 185469.48.\n\n-   **Slope for Duplex:** On average, we expect duplexes to cost 45660 dollars less than a house.\n\n# Price vs. square footage and home type\n\nNow, let's make some model that use both variables!\n\n## Main effects model\n\nThe *main effects model* is another name for the additive model.\nWe fit the models below and wrote the model in math notation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_main_fit <- linear_reg() |>\n  fit(price ~ sqft + home_type, data = housing)\n\ntidy(price_main_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 5\n  term               estimate std.error statistic  p.value\n  <chr>                 <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)          13395.   3225.        4.15 3.38e- 5\n2 sqft                   115.      2.03     56.5  0       \n3 home_typeDuplex     -63251.   5338.      -11.8  1.19e-31\n4 home_typeTownhouse  -20306.   5552.       -3.66 2.60e- 4\n```\n\n\n:::\n:::\n\n\n$$\n\\widehat{price} = 13394.8 + 114.5 \\times sqft - 20306 \\times Townhouse - 63251 \\times Duplex\n$$\n\n**Task:** Write the model equations for each home type.\nProvide interpretations of the coefficients.\n\n**House:** $ \\widehat{price} = 13394.8 + 114.5 \\times sqft $\n\n-  Intercept: On average, we expect a house with 0 square feet to cost $13394.8. \n-  Slope: On average, for houses, we expect every one additional square foot to correspond to an additional price of $114.5. \n\n**Townhouse:** $ \\widehat{price} = (13394.8 - 20306) + 114.5 \\times sqft $\n\n-  Intercept: On average, we expect a townhouse with 0 square feet to cost $-6911.2. This does not make sense in the context of the data -  townhouses cannot be 0 sqft and prices cannot be negative.\n-  Slope: On average, for townhouses, we expect every one additional square foot to correspond to an additional price of $114.5. \n\n**Duplex:** $ \\widehat{price} = (13394.8 - 63251)  + 114.5 \\times sqft $\n\n-  Intercept: On average, we expect a house with 0 square feet to cost -$49856.2. 49856.2. This does not make sense in the context of the data -  duplexes cannot be 0 sqft and prices cannot be negative.\n-  Slope: On average, for duplexes, we expect every one additional square foot to correspond to an additional price of $114.5. \n\n**NOTE**: Slopes are the SAME for all types!!\n\n## Interaction effects model\n\nNow, we will fit an interaction effects model.\n\n**Task:** Write code to fit an interaction effects model predicting price from square feet and home type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_inter_fit <- linear_reg() |>\n  fit(price ~ sqft  * home_type, data = housing)\n\ntidy(price_inter_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  term                    estimate std.error statistic  p.value\n  <chr>                      <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)               9087.    3273.       2.78  5.53e- 3\n2 sqft                       117.       2.06    56.9   0       \n3 home_typeDuplex          57547.   19114.       3.01  2.63e- 3\n4 home_typeTownhouse       13970.   21910.       0.638 5.24e- 1\n5 sqft:home_typeDuplex       -73.2     11.1     -6.58  5.56e-11\n6 sqft:home_typeTownhouse    -26.9     17.0     -1.59  1.13e- 1\n```\n\n\n:::\n:::\n\n\n**Task:** Write the model output using mathematical notation.\n\n$$\n\\widehat{price} = 9087 + 117 \\times sqft + 139970 \\times Townhouse + 57547 \\times Duplex - 73 \\times sqft \\times Duplex - 27 \\times sqft \\times Townhouse\n$$\n\n**Task:** Write the model equations for each home type.\n\n**House:** $ \\widehat{price} = 9087 + 117 \\times sqft $\n\n**Townhouse:** $ \\widehat{price} = (9087 + 139970) + (117 - 27) \\times sqft $\n\n**Duplex:** $ \\widehat{price} = (9087 + 57547)  + (117 - 73) \\times sqft $\n\n\n# Model Comparison\n\nSo, we fit multiple models - how do we know which one is better?\n\nWe will dive into this tomorrow, but there is a value called *adjusted* $R^2$ that lets us compare models.\nHigher values are better, lower are worse.\nYou can `glance()` at a model fit to see the *adjusted* $R^2$ values.\n\nWhich model is the best fit?\nWhich is the worst?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglance(price_main_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 12\n  r.squared adj.r.squared  sigma statistic p.value    df  logLik    AIC    BIC\n      <dbl>         <dbl>  <dbl>     <dbl>   <dbl> <dbl>   <dbl>  <dbl>  <dbl>\n1     0.538         0.538 54532.     1112.       0     3 -35347. 70705. 70735.\n# ℹ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n\n\n:::\n\n```{.r .cell-code}\nglance(price_inter_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 12\n  r.squared adj.r.squared  sigma statistic p.value    df  logLik    AIC    BIC\n      <dbl>         <dbl>  <dbl>     <dbl>   <dbl> <dbl>   <dbl>  <dbl>  <dbl>\n1     0.545         0.545 54124.      687.       0     5 -35325. 70664. 70706.\n# ℹ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n\n\n:::\n:::\n\nAdjusted R squared is a higher for the interaction effects model - this is the better model!\n# One more model?\n\n**Task:** Try adding one more variable to your chosen model from above.\nDoes it make a difference in *adjusted* $R^2$?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_inter_bed_fit <- linear_reg() |>\n  fit(price ~ sqft  * home_type + bedrooms, data = housing)\n\nglance(price_inter_bed_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 12\n  r.squared adj.r.squared  sigma statistic p.value    df  logLik    AIC    BIC\n      <dbl>         <dbl>  <dbl>     <dbl>   <dbl> <dbl>   <dbl>  <dbl>  <dbl>\n1     0.590         0.589 51421.      686.       0     6 -35178. 70371. 70419.\n# ℹ 3 more variables: deviance <dbl>, df.residual <int>, nobs <int>\n```\n\n\n:::\n:::\n\nAdding the number of bedrooms greatly boosts the adjusted r squared value - this is a preferrable model!",
    "supporting": [
      "ae-13-github-A_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}