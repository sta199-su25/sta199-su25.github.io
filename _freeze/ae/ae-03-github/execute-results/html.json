{
  "hash": "9f2d1521b9cd6453c5c2849d10fa0452",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 03: Duke Forest\"\nexecute:\n  error: true\n---\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidyr' was built under R version 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(openintro)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'airports' was built under R version 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'cherryblossom' was built under R version 4.4.1\n```\n\n\n:::\n:::\n\n\n## Data\n\nWe will be using the Duke forest data set in the open intro package.\n\nDo your own investigation to get to know the data.\nHow many observations does it have?\nHow many variables are measured?\nGo ahead and do a glimpse!\n\n\n::: {.cell}\n\n:::\n\n\n## Data Preparation\n\nOne of the questions in this AE asks about garages - notice that this is *not* a variable in the data set.\nI am adding code that creates a categorical variable called `garage` that has two levels: `Garage` or `No garage`.\nOur new variable equals `\"Garage\"` if the word `\"Garage\"` is detected in the `parking` variable and equals `\"No garage\"` if not.\n\n***You do not need to understand this code yet - we will learn how to write things like this in the coming days! For now, just run the code!***\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduke_forest = duke_forest |>\n  mutate(garage = if_else(str_detect(parking, \"Garage\"),   \"Garage\", \"No garage\"))\n```\n:::\n\n\n***What did this do?***\n\nGo ahead and look at the data again to see the change.\n\n# Excercise 1\n\nSuppose you're helping some family friends who are looking to buy a house in Duke Forest.\n\nAs they browse Zillow listings, they realize some houses have garages and others don't, and they wonder: \\*\\*Does having a garage make a difference?\\*\n\\*\n\nLuckily, you can help them answer this question with data visualization!\n\n-   Make histograms of the prices of houses in Duke Forest based on whether they have a garage.\n-   Then, facet by \\`garage\\` and use different colors for the two facets.\n-   Choose an appropriate binwidth and decide whether a legend is needed, and turn it off if not.\n-   Include informative title and axis labels.\n-   Finally, include a brief (2-3 sentence) narrative comparing the distributions of prices of Duke Forest houses that do and don't have garages. Your narrative should touch on whe\n\n\n::: {.cell}\n\n:::\n\n\n# Exercise 2\n\nIt's expected that within any given market, larger houses will be priced higher.\nIt's also expected that the age of the house will have an effect on the price.\nHowever in some markets new houses might be more expensive while in others new construction might mean \"no character\" and hence be less expensive.\nSo your family friends ask: \"In Duke Forest, do houses that are bigger and more expensive tend to be newer ones than those that are smaller and cheaper?\"\n\nOnce again, data visualization skills to the rescue!\n\n-   Create a scatter plot to exploring the relationship between `price` and `area`, conditioning for `year_built`.\n-   Use `geom_smooth()` with the argument `se = FALSE` to add a smooth curve fit to the data and color the points by `year_built`.\n-   Include informative title, axis, and legend labels.\n-   Discuss each of the following claims (1-2 sentences per claim). Your discussion should touch on specific things you observe in your plot as evidence for or against the claims.\n    -   Claim 1: Larger houses are priced higher.\n    -   Claim 2: Newer houses are priced higher.\n    -   Claim 3: Bigger and more expensive houses tend to be newer ones than smaller and cheaper ones.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add code here\n```\n:::\n\n\nAdd narrative here...\n\n::: callout-important\nNow is a good time to render, commit, and push.\nMake sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}